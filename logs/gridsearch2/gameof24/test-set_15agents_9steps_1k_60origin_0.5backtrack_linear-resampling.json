{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 - 6 = -1 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 * 1 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 1.2 / 10 = 0.12 (left: 0.12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 6 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 6 20) -> 20 / 6 = 3.33 (left: 3.33 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 4 5 8\nSteps:\n5 + 8 = 13 (left: 3 4 13)\n4 + 13 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\n14 * 3 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 17 = 4 (left: 4)\n4 + ",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / ",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n8 * 4 = 32 (left: 6 32)\n32 - 6 = 26 (left: 26)\nAnswer: (4 + 3) * (5 + 6) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 5\nSteps:\n3 * 5 = 15 (left: 3 15)\n3 * 15 = 45 (left: 45)\n45 - 5 = 40 (left: 40)\nAnswer: (3 * 5) + (3 * 15) - 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (6 * 3) - (9 - 8) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1.2 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 1.2 * 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 8) + 3) + 3 = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: ((3 + 6) * 2) * 4 = 72",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 3 = 24 (left: 5 24)\nAnswer: (3 * 7) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10)\n10 * 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 6 =",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 4 9\nSteps:\n3 * 4 = 12 (left: 3 9 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 5 * 6 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (6 * 3) - (9 - 8) = 18",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 10 + 5 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * (6 + 9)) - 7 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n3 * (7 - 3) * 8 = 36",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> Input: 5 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n7 + 8 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\nAnswer: ((7 + 8) - 6) * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 5 6 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\nAnswer: (3 * 4) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + (7 + 8)) - 9 = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 4 5 8\nSteps:\n4 + 8 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 - 3) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 + 7) * 10) / 2)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 5 7 9\nSteps:\n7 - 5 = 2 (left: 2 3 9)\n2 + 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 - 21 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 9 - 21 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8 / 6) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / ",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24\nAnswer: (3 * 3) - (8 - 9) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 5 + 6 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> Input is not sufficient to perform any mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 6 20) -> 6 / 6 = 1 (left: 1 6 20)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 9 10"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (5 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 6 20)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 6 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 6 20) -> 6 / 6 = 1 (left: 1 6 20) -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 11 - 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 - 6 = 4 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((3 + 7) * (3 + 5)) / 3 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * 4 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 8 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) * (6 - 3)) - 9 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: ((3 + 3) * 8) / 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\nAnswer: (3 * 7) + (5 + 3) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((4 + 6) - (5 - 3)) *",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number given (5).",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 1 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 * 1 = 1",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 4 + 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps to take.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 + 4 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps with the input of 1.33.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There is only one possible next step: 8 - 3 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 * 7 = 28 (left: 3 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 2 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 1 + 4 = 5 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 8 11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 - 8 = 2 (left: 2 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 8 - 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "8 * 11 = 88 (left: 2 5  -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 + 3 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 3) * (7 + 8)) /",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> Input: 10 2 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 3 + 14 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 10 7)\n10 - 7 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 7 = 63 (left: 63)\nAnswer: ((3 + 7) - 3) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 - 55 = -49 (left: -49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 * 55 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n21 - 9 = 12 (left: 3 12)\n12 + 3 = 15 (left: 15)\n15 + 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 7) - 9) + (3 +",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 + 55 = 61 (left: 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 2 * 5 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24\nAnswer: ((3 * 7) - 5) + (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 * 55 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 * 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 2 * 5 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (7 - 3) * (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 = 1.57 (left: 1.57 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 * 55 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 2 * 5 = 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n3 * 7 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (3 * 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 + 8 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 8 11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 8 + 11 = 19 (left: 10 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 5 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 5 + 2 = 24 -> Input: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((7 - 3) + 5) * (9 -",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 8 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 - 8 = 2 (left: 2 8 11) -> 2 + 8 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 2 * (5 + (11 - 8)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\nAnswer: (3 * 7) + (5 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 8 - 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 55 / 6 = 9.166666666666666 (left: 9.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) * (2 + 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 2 * (5 + (11 - 8)) = 24 -> Input: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n8 * 4 = 32 (left: 3 32)\n32 - 3 = 29 (left: 29)\nAnswer: (3 + (7 - 3)) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 55 - 6 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 2 * 5 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 * 5 = 50 (left: 3 50)\n50 / 3 = 16.666... (left: 16.666... 3)\n16.666... * 3 \u2248 50 (left: 50)\nAnswer: ((3 + 7) * 5) / 3 \u2248",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 8 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 8 - 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 55 / 6 = 9.166666666666666 (left: 9.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: 11 - 8 + 5 + 2 = 24 -> Input: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: 3 * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 + 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 + 55 = 61 (left: 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 * 55 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 * 55 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 6 7 9\nSteps:\n7 - 3 = 4 (left: 4 6 9)\n6 + 9 = 15 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((7 - 3) * (6 + 9)) / 2.5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> Input: 4 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 8 - 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 8 - 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 55 - 6 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.5"
                }
            },
            "Step 7": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: 2.5 + 2 = 4.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: (((3 + 4) + 7) + 7) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 55 - 6 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 55"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 * 11 = 55 (left: 6 55) -> 6 + 55 = 61 (left: 61)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (6 + 7) - (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 8 11"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "8 * 11 = 88 (left: 2 5  -> 10 / 3 = 3.33 (left: 3",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 2 5  -> 20 + 4 = 24 (left: 24) -> Answer: (11 - 8) + (2 * 5) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n21 + 4 = 25 (left: 5 25)\n25 - 5 = 20 (left: 20)\nAnswer: ((3 * 7) + 4) - 5 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 - 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (3 + 4) + (4 + 13) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 13 - 4 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.33 4 13"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13) -> 4 - 1.33 = 2.67 (left: 2.67 13",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (3 + 4) + (4 + 13) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + (4 + 7)) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 7 * 4 = 28 (left: 28 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (3 + 4) + (4 + 13) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((3 + 4) + 4) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 * 7 = 28 (left: 28 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 10 * 2.43 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (3 + 4) + (4 + 13) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 - 4 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "8 4"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 - 4 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8 4) -> 8 + 4 = 12 (left: 12)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.333 (left: 1.333 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 - 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 + 3) + (4 + 4)) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 4) + 13 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 - 4 = 0 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 - 4 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8 8)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 4 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 13 / 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 * 4 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5 2.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 + 3) + (4 + 4)) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 4 13) -> 4 / 4 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "1.5 2.5"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5 2.5) -> 2.5 - 1.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7 17"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> Input: 24 128 8 2 -8 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 + 3) * (4 + 4)) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 13 + 4 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)"
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 / 6 = 1.5 (left: 1.5 9 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21 3024"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 24 - 3 = 21 (left: 21 3024) -> 21 * 3024 = 63404 (left: 63404)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 0 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 0 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 + 0 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 6 = 11 (left: 11 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 + 7 = 13 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 * 2 + 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3024"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 / 2 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "0 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 24) -> 0 * 24 = 0 (left: 24)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "3024"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3 2"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 4 / 2 = 2 (left: 3 2) -> 3 * 2 = 6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 9 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 8 9 42) -> 42 - 8 = 34 (left: 9 34)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 6 = 11 (left: 11 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6.22 (left: 6.22 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 * 2 * 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3024"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30*2*4 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "3 2 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "0 8"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 * 0 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3024"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 0 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 * 0 = 0 (left: 0 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 7 1)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 7 + 17 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 / 56 = 0.964 (left: 0.964)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 + 2 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "3 2 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21 3024"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 24 - 3 = 21 (left: 21 3024) -> 21 + 3024 = 3045 (left: 3045)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "0 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 + 0 = 3 (left: 3 8) -> 8 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 2 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 - 4 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3024"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 302 + 4 = 306 (left: 306)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 0 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 * 2 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "3 2 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 9 42"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 9 42) -> 9 * 8 = 72 (left: 72 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 / 56 = 0.964286 (left: 0.964286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 + 24 = 54 (left: 6 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "0 6 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 0 24) -> 6 * 0 = 0 (left: 0 6 24) -> 6 * 4 = 24 (left: 0 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 7 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 7 1) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 4 / 2 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "0 6 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 0 24) -> 6 * 0 = 0 (left: 0 6 24) -> 6 + 0 = 6 (left: 6 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (left: 6 47)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 + 13 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4 3) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3 2"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 4 / 2 = 2 (left: 3 2) -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "3 0 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 3 + 7 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 - 56 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 / 2 = 15 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 24 - 3 = 21 (left: 21 3024)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3024"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 * 2 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 0 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "9 / 7 = 1.2857142857142858 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 0 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "0 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 24) -> 24 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 + 0 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "3 0 8"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 - 6 = 3 (left: 3 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 + 7 = 13 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 - 56 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 0 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 0 24) -> 6 * 0 = 0 (left: 0 6 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 * 0 = 0 (left: 0 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 + 7 = 13 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 / 56 = 0.9642857142857143 (left: 0.9642857142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3024"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 24 = 720",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 0 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 * 2 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 - 4 = -",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 7 + 17 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3024"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 / 2 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 7 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 7 1) -> 6 * 7 = 42 (left: 42 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 - 7 = 10 (left: 6 10) -> Input: 4 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 0 8"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 + 0 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "3 0 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 8 + 3 = 11 (left: 3 11)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "15 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56) -> 15 / 56 = 0.267857 (left: 0.267857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 0 8"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 * 0 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 2 4"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 2 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 * 4 = 8 (left: 3 0 8) -> 3 + 0 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "3 2 4"
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 5 = 15 (left: 3 4 15)\n4 - 3 = 1 (left: 1 15)\n1 * 15 = 15 (left: 15)\n15 + 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 5) + (4 - 3)) +",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 8 9)\n8 - 9 = -1 (left: -1)\n-1 * -1 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((3 * 3) - 8) * (-1 * -1) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 9 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 3) + (7 + 9)) - 9 + ",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 + (11 / 1) + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) + (7 - 3) = 24",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\nAnswer: (3 * 7) * (9 - 3) = 126",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 - 108 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) - 108 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "11 13"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 + 21 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 - 3)) + 1 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 9 = 27 (left: 3 5 27)\n27 - 5 = 22 (left: 3 22)\n22 - 3 = 19 (left: 19)\nAnswer: (3 * 9) - (5 + 3) = 24",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 8 = 18 (left: 18)\n18 / 3 = 6 (left: 6 18)\n6 * 6 = 36 (left: 36)\n36",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 - 9 = 10 (left: 10)\n10 / ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (2 * 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n8 - 9 = -1 (left: -1 9)\n-1 * 9 = -9 (left: -9)\n9 - (-9) = 24 (left: 24)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (7 * 3 + 8) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) * (6 - 3)) - 9 = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 5 7 8\nSteps:\n3 + 7 = 10 (left: 5 8 10)\n10 - 5 = 5 (left: 8 5)\n5 * 8 = 40 (left: 40)\n40 / 2 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 - 8 = 7 (left: 7)\n7 + ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "11 13"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 / 13 = 0.846153846... (left: 0.846153846...)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n21 - 42 = -21 (left: -21)\n-21 + 42 = 21 (left: 21)\nAnswer: ((3 * 7) - (5 - 3))",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 * (11 + 13) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 * 11 = 110 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) * (3 + 27) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 3 * 5) - 9 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 5\nSteps:\n4 * 5 = 20 (left: 3 3 20)\n20 + 3 = 23 (left: 3 23)\n23 + 3 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - 3 = 20 (left: 20)\n20 * 3 = 60 (left: 60)\n60 / ",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 9\nSteps:\n3 * 9 = 27 (left: 3 7 27)\n3 * 7 = 21 (left: 21 27)\n27 - 21 = 6 (left: 6)\nAnswer: (3 * 9) - (3 * 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "1 * 11 = 11 (left: 11 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 96",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 8 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 60",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 * 3 = 24 (left: 7 24)\nAnswer: (3 + 5) * 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 + (11 / 1) + 13 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 24 (left: 24)\nAnswer: (6 - 2) * (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "11 13"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((1 + 11) - 11) * 13 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n6 + 8 = 14 (left: 3 3 14)\n3 * 3 = 9 (left: 9 14)\n9 * 14 = 126 (left: 126)\nAnswer: (3 * 3) * (6 + 8) = 126",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 * 1 = 11 (left: 11 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n5 + 7 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) + (5 + 7) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n4 + 3 = 7 (left: 7 21)\n7 * 3 = 21 (left: 21)\nAnswer: (3 * 7) - (4 + 3) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((8 - 3) + 3) * 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "11 13"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 7\nSteps:\n3 + 7 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - 6 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n3 + 4 = 7 (left: 7 21)\n7 * 3 = 21 (left: 21)\nAnswer: (3 * 7) - (4 + 3) = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\nAnswer: (3 * 7) - (18 / 8) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 * 3 = 21 (left: 5 21)\n21 + 5 = 26 (left: 26)\nAnswer: ((3 + 4) * 3) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 7 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 - ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\n18 + 24 = 42 (left: 42)\nAnswer: (3 * 8) * (3 * 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n27 - 8 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 + 6) * 3) + 8 - 5 = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 5 6 8\nSteps:\n5 * 3 = 15 (left: 6 8 15)\n8 - 6 = 2 (left: 2 15)\n15 - 2 = 13 (left: 13)\n13 + 15 = 28 (left: 28)\n28 - 8 = 20 (left: 20)\n20 / 5 = 4 (left: 4)\n4 * ",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 5\nSteps:\n3 * 5 = 15 (left: 3 15 5)\n15 - 3 = 12 (left: 12 5)\n12 * 5 = 60 (left: 60)\nAnswer: (3 * 5) * (15 - 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 * 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 6 =",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 + 9 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 / 11 = 1.1818181818181819 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\nAnswer: (3 + 7) * (8 - 3) = 50",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\n51 - 27 = 24 (left: 24)\nAnswer: (3 * 7) - (4 * 3) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (11 / 1) + 11 + 13 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 * 11 = 110 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "70 10"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 + 11 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 0"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 10 = 0 (left: 8 0) -> 8 + 0 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 * 10 = 800 (left: 800)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 11 - 9 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 + 1 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 / 10 = 0.7 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 0"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 10 = 0 (left: 8 0) -> 8 / 0 = undefined (division by zero is undefined)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 11 1.375"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 1.375 + 8 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 10 = 0 (left: 8 0)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 9 * 11 = 99 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 1)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 + 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 + 1 = 89",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 10 / 8 = 1.25 (left: 1.25 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 + 1 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 / 10 = 8 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 11 1.375"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 + 11 = 19 (left: 1.375 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 / 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 6": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 + 1 = 89 (left: 89)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 90"
                }
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 * 10 = 90 (left: 11 90) -> 90 / 11 = 8.18 (left: 8.18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 + 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 + 10 = 90 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> Input: 25 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 - 1 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "70 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 - 10 = 70 (left: 70 10) -> 70 * 10 = 700 (left: 700)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 * 10 = 90 (left: 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 9 / 11 = 0.818181818181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 11 1.375"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 + 1 = 89 (left: 89)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 10 / 8 = 1.25 (left: 1.25 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 - 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 10 - 80 = -70 (left: -70)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 5 * 5 =",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 * 10 = 800 (left: 800)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 6": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 + 1 = 89 (left: 89)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 88 * 1 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "88 1"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 / 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "80 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80 10) -> 80 - 10 = 70 (left: 70 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "88 1"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 + 1 = 89 (left: 89)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "88 1"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "88 1"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 8 11 1.375) -> 8 * 11 = 88 (left: 88 1 -> 88 / 1 = 88 (left: 88 1) -> 5 / 2 =",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 45"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 9 = 45 (left: 6 45) -> 45 - 6 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 + 6 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 45"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 9 = 45 (left: 6 45) -> 45 - 6 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 9 = 45 (left: 6 45)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 45"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 9 = 45 (left: 6 45) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 + 6 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Input: -> There seems to be an error in the input provided. Can you please provide a valid input for me to generate possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 = 54 (left: 5 54)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 9) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 54"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 = 54 (left: 5 54) -> 5 + 54 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 + 6 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Input: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 7 - 4 = 3 (left: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)"
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 5 8"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((1 * 3) * 5) + 9 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> Input: 5 3 1 7"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((1 * 3) * 5) + 9 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 5 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 9 - 1 = 8 (left: 8 9)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 5 - 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 5 * 5 = "
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 3) * (5 + 9) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 - 3 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 - 5 = -1 (left: -1 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "-1 9"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 - 5 = -1 (left: -1 9) -> -1 + 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 9 - 5 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((1 * 3) * 5) + 9 = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 5 - 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 / 1 = 9 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "-1 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 - 5 = -1 (left: -1 9) -> -1 * 9 = -9 (left: -9)"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) + 12 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> Input: 3 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n6 + 4 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "144"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((7 - 3) * 3) + 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 - 3 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: ((6 + 6) * (6 + 6)) / 6 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (3 + 12) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 6 = 12 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (2 * 3) + (4 * 6) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + (2 * 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 3 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 2 4 6\nSteps:\n4 * 6 = 24 (left: 2 2 24)\n2 * 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (2 * 2) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) + 12 = 24 -> Input: 2 3 4 5\nSteps:\n4 + 5 = 9 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 + 5) * 3) - 3 =",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (3 + 12) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> Input: 3 6 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) + 12 = 24 -> Input: 2 3 4 5\nSteps:\n2 * 4 = 8 (left: 3 5 8)\n8 - 3 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((2 * 4) - 3) * 5 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: 7 * (3 + 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 3 = 10 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: (6 * 6) + (6 - 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n12 * 8 = 96 (left: 96)\nAnswer: (2 * 6) * (5 + 3) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * (7 - 3)) + 12 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (3 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 24 72)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 * 2) * 3) * 4 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (7 - 3) * (3 * 3) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (3 + 12) = 24 -> Input: 5 5 3 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n7 - 3 = 4 (left: 4 25)\n25 - 4 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((5 * 5) - (7 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * (7 - 3)) + 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (2 * 3) * (6 + 8) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "21 3 "
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 3 6 7\nSteps:\n2 * 6 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (2 * 6) + (7 - 3) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((5 + 6) * 6) - "
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24) -> 16 / 4 =",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 * 2 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 * 2) - 6) * 3 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "21 3 "
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7 + 3 = 10 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) * 6 / 2.5 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 3 = 10 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: (6 * 6) - (6 + 6) = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> There is only one number given so there are no operations that can be performed on it."
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 1 2 3 6\nSteps:\n3 * 6 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (1 * 2 * 3) * 6 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) + 12 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: (6 * 6) - (6 - 6) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 3 = 6 (left: 5 6 7)\n5 + 7 = 12 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (2 * 3) * (5 + 7) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 + 7 * 3) = 24 -> Input: 2 2 6 9\nSteps:\n2 * 9 = 18 (left: 2 6 18)\n2 * 6 = 12 (left: 12 18)\n12 + 18 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((2 * 9) - 6) + (2 * 6) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: 3 + (7 * 3) + 12 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((2 * 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n8 - 9 = -1 (left: -1)\n-1 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) - 9) * 24 = 24"
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "-12 15"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 3 - 15 = -12 (left: -12 15) -> -12 + 15 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.25 9"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "324"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324) -> 32 + 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 / 3 = 5 (left: 3 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "324"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 + 3 = 18 (left: 3 18 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 - 15 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 3 - 15 = -12 (left: -12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 + 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> Input: 3 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with the input of 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 / 3 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 6 / 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 36 = 0 (left: 9 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 6 / 3 = 2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 6 * 9 = 54 (left: 3 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "324"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324) -> 3 + 2 = 5 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 * 9 = 36 (left: 36 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 * 25 = 625 (left: )",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "5 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 9 20.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 * 5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 7 - 3 = 4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 3 + 15 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers to combine or operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 - 3 = 12 (left: 12 15 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 5 * 20 = 100 (left: 12 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "9 13"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 16"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result. -> There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 + 15 = 18 (left"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 3 + 15 = 18 (left -> 15 + 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "324"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324) -> 3 + 2 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "324"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to perform operations with. The number 36 is already the final result."
                }
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.84615384615 (left: 1.84615384615)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 \u2248 1.846 (left: 1.846)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.8461538461538463 (left: 1.8461538461538463)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.84615384615 (left: 0.84615384615)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 - 9 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 1 7)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 * 3 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> Input: 3 7 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> Input: 5 2 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "6 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps for the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24 3"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 * 3 = 72 (left: 3 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3 + 7 = 10 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 + 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 5 * 10 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "-1 6"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 3 - 4 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 4 3 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24 3"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> Input: 10 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 * 6 = 54 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 3 - 4 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps, the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 / 6 = 1.5 (left: 24 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3 * 7 = 21 (left: 1 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> Input: 3 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24) -> Answer: (4 / 1) * (4 + 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 128"
                }
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 128 - 8 = 120 (left: 8 120)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 128"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 8 - 8 = 0 (left: 0 128)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> Possible"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 * 4 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24) -> Answer: (1 * 4) * (4 + 8) = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 8"
                }
            },
            "Step 2": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24) -> Answer: (4 * (4 / 1)) + 8 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 8"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 2": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left:"
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 9 - 3 = 6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 / 1 = 50 (left: 11 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: 10 + (1 + 11) + 11 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((5 + 1) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((10 + 1) + 5) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 2.2 + 11 = 13.2 (left: 13.2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: 10 + (5 + (1 + 11)) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + 1) * (10 + 11) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + (5 + 1)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + 1) * (11 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((10 + 1) + 5) + 11 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 - 11 = -6 (left: -6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 7 - 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 10) + (11 + 1) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 10) + (11 - 1) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + (5 + 1)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 2": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 / 1 = 50 (left: 11 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Input: 3 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 10) + (11 + 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 2.2 + 11 = 13.2 (left: 13.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (11 + 10) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((10 + 1) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((10 + 1) + 5) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 11 - 2.2 = 8.8 (left: 8.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 * 11 = 55 (left: 11 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 1) * 10) + 11 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (11 + 1) * (10 + 14) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 50 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((10 + 1) + 11) + 14 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 14 * 24 = 336 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (10 + (1 + 5)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 11 - 2.2 = 8.8 (left: 8.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: ((5 + 1) + 10) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 1) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 1) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 9 - 3 = 6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + 1) + (5 * 11) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "14 * 24 = 336 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 14 * 24 = 336 (left: -> There are no possible next steps given the input \"14 * 24 = 336\".",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 1 = 49 (left: 49 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 10) + (11 - 1) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) * (10 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 10) + (11 + 1) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (10 + 1) * (5 + 11) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: (10 + 1) * (11 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 * 50 = 50 (left: 11 50)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 1) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.2 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((10 + 1) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((10 + 1) + 11) + 14 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 3 = 3.67 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 77"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 * 11 = 77 (left: 6 77) -> 77 / 6 = 12.8333 (left: 12.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 12 = 23 (left: 6 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (11 - 7) = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (11 - 7) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (11 - (3 + 4)) * 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 * 11 = 77 (left: 6 77)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 + 11) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 * 9 = 36 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 6 / 4 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> There are no possible next steps as there are no more numbers to operate with. -> None"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 6 7 11) -> 7 + 11 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (11 - 7) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> None"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (11 - 7) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 - 6 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - (3 + 4)) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 11 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (11 - 7) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> There are no possible next steps as there are no more numbers to operate with."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - (3 + 4)) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 6 - 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3.67 4"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4) -> 3.67 + 4 = 7.67 (left: 7.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> N/A"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 4 * 9 = 36 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 6 - 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> There are no possible next steps as there are no more numbers to operate with.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> There are no possible next steps as there are no more numbers to operate with."
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 6 7 11) -> 7 * 6 = 42 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 9  -> Input: 3 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. -> None",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 4) * (6 - 11) = 24"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) * 3 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "13.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> Input: 3 12 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 4 8 10) -> 4 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 10 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "7776 1"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3^8 = 6561 (left: 6561) -> 6 ^ 5 = 7776 (left: 7776 1) -> 7776 / 1 = 7776 (left: 7776)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 + 9 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "6561"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3^8 = 6561 (left: 6561) -> 6 ^ 5 = 7776 (left: 7776 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3^8 = 6561 (left: 6561)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 + 4) + 8) * 9 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "7776 1"
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 4": {
                "Step": "13 + 1 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 1 - 13 = -12 (left:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 is undefined (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 * 1 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 4 = 4 (left: 4 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 13"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 1 13) -> 13 / 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 2 + 7 = 9 (left: 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 + 1 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 / 13 = 0 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 / 13 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 / 1 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 13 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 / 1 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 13 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 4": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 1 = 5 (left: 4 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 0 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 + 4 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 - 1 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 13"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 1 13) -> 1 * 1 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 0 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 5": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 - 1 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "9 / 5 = 1"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 9 / 5 = 1 -> 9 + 5 = 14 (left: 14 = 1)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = Undefined (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 + 0 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.7692307692307693"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693) -> 0.7692307692307693 + 2 = 2.7692307692307696",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 * 1 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "5 + 4 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 12 + 1 = 13 (left: 13 13)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "5 * 1 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 13"
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 1 13) -> 1 - 1 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 * 13 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> 13 - 1 = 12 (left: 12 12)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 9 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 * 13 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = not possible (division by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 1 = 12 (left -> -",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 6 "
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 2 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 14 2 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) + (7 * 2) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 * 4 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (7 * 2) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 4 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) + (7 * 2) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 7 = "
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "2 8 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "9 7"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 2 + 8 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 / 3 = 1.33 (left: 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 9 6 7) -> 6 * 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with. The result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 7 54)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 9 - 7 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.67 7"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 / 9 = 0.67 (left: 0.67 7) -> 7 / 0.67 = 10.4478 (left: 10.4478)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 * 9 = 54 (left: 7 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 6": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There is only one number left, so no possible next steps. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 2 + 8 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 2 / 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 9 - 7 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 8 = 13 (left: 8)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no valid operations that can be performed with the number 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 9 / 3 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 2 = 19 (left: 2)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 / 9 = 0.67 (left: 0.67 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 9 7"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 3 * 9 = 27 (left: 7 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 9 - 7 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None.",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "2 8 20"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "2 8 20"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 + 9 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "3 6"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 5": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> None",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.67 7"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 / 9 = 0.67 (left: 0.67 7) -> 0.67 - 7 = -6.33 (left: -6.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 4": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 2 - 3 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> No more possible steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "-6.33"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 6 / 9 = 0.67 (left: 0.67 7) -> 0.67 - 7 = -6.33 (left: -6.33) -> There are no operations that can be performed on -6.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 5 * 9 = 45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 7) -> 7 - 1 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 5 13) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "13 / 1 = 13 (left:"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left: -> 1 / 13 = 0.07692307692 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 1 + 14 = 15 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> 1 + 0 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 5 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 5 13) -> 8 - 5 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "32 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 / 32 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "32 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 1 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 31"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 - 32 = -31 (left: -31 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 - 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "32 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "32 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 31"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 32 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 * 13 = 117 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "32 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "32 33"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 5, 9, 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 - 32 = -31 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 * 13 = 52 (left: 1 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 0.03125)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 31"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 5 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 + 5 = 6 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> 1 + 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 0"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> There are no possible next steps with the input \"1 0\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 5 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 14 "
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 14  -> 14 - 1 = 13 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> 1 - 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "32 33"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33) -> 32 - 33 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> 1 + 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 22"
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 14 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 5 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 5 13) -> 13 - 8 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 5 * 22 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "32 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 * 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4.285714285714286 13"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.71428571428571 (left: 55.71428571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 * 17.285714285714286 = 224.5714285714286 (left: 17.285714285714286 224.5714285714286)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 + 55.714 = 68.714 (left: 55.714 68.714)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 / 55.714 = 0.233 (left: 0.233 55.714)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 13"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 6 13) -> 13 - 2 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 * 11 = 77 (left: 13 77)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 - 17.285714285714286 = -4.285714285714286 (left: -4.285714285714286)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "13 / 17.285714"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 30 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 / 17.285714285714286 = 0.7529411764705882 (left: 0.7529411764705882 17.285714285714286)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 5 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 * 55.714 = 724.982 (left: 55.714 724.982)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 30 13"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 7 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "7 17 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 7 + 17 = 24 (left: 24 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 - 17.285714285714286 = -4.285714285714286 (left: -4.285714285714286 17.285714285714286)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 5 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 + 55.714 = 68.714 (left: 55.714 68.714)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 1 13"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 5 1 13) -> 5 / 1 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 9 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4.285714285714286 13"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 / 17.285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 55.714 / 13 = 4.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 - 55.714 = -42.714 (left: -42.714 13)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 + 13 = 20 (left: 20 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 30 13"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 + 17.285714285714286 = 30.285714285714286 (left: 30.285714285714286)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 - 17.285714285714286 = -4.285714285714286 (left: -4.285714285714286 17.285714285714286)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 + 17.285714285714286 = 30.285714285714286 (left: 17.285714285714286 30.285714285714286)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 / 5 = 2.6 (left: 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "7 * 5 = 35 (left: 6 13 35)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.2 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 - 1.2 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 - 55.714 = -42.714 (left: -42.714 13)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 5 7 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 6 = 36 (left: 5 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4.285714285714286 13"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "13 55.714"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 * 13 = 55.714285714285714 (left: 13 55.714 -> 13 / 55.714 = 0.233 (left: 55.714 0.233)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 + 11 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "13 17.285714285714286"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 30 / 7 = 4.285714285714286 (left: 4.285714285714286 13) -> 4.285714285714286 + 13 = 17.285714285714286 (left: 13 17.285714285714286) -> 13 * 17.285714285714286 = 224.57142857142858 (left: 224.57142857142858)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "13 / 17.285714"
                }
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 / 2 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 50"
                }
            },
            "Step 3": {
                "Step": "5 * 10 = 50 (left: 8 50) -> 50 / 8 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "10 30 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 30 / 10 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "300 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 + 10 = 310 (left: 10 310)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 3000"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 10 3000) -> 10 + 3000 = 3010 (left: 3000 3010)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 10 = 100 (left: 40 10 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40) -> 10 * 40 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "10 4 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 4 = 40 (left: 10 40 10) -> 10 + 40 = 50 (left: 10 10 50)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "300 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 3000 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 5 = 15 (left: 5 8 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 40 = 400 (left: 400 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "10 4 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "10 4 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "300 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 / 10 = 30 (left: 30 10)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 40) -> 10 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 3000"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 10 3000) -> 10 * 3000 = 30000 (left: 3000)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 25 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 + 10 = 50 (left: 10 50 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> Input: -> Please provide a list of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "300 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 10 3000)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 10 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 40 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 40"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 40) -> 40 / 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 50"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 8 50) -> 8 - 50 = -42 (left: -42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "10 4 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "300 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 3000"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 10 3000) -> 3000 / 10 = 300 (left: 300 3000)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "10 40 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "400 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 40 = 400 (left: 400 10) -> 400 + 10 = 410 (left: 410)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 4 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "300 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 + 10 = 310 (left: 10 310)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 40) -> 40 / 10 = 4 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> Input: -> There is no input provided. Please provide a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> Input: -> Please provide a set of numbers to find the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 50"
                }
            },
            "Step 2": {
                "Step": "5 * 10 = 50 (left: 8 50) -> 8 + 50 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 8 + 10 = 18 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no more possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "10 30 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 3000"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 * 10 = 3000 (left: 10 3000) -> 10 * 3000 = 30000 (left: 3000)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 13 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 10 = 50 (left: 8 50)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10) -> 1.6 + 10 = 11.6 (left: 11.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "400 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 40 = 400 (left: 400 10) -> 400 * 10 = 4000 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "10 30 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> Input: 5 25 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 4 = 40 (left: 10 40 10) -> 10 + 40 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 40 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 15"
                }
            },
            "Step 1": {
                "Step": "10 + 5 = 15 (left: 5 8 15) -> 5 * 8 = 40 (left: 40 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> Input: -> It seems like there was no input provided for the next steps. If you could provide the numbers or equation, I would be happy to generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "300 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10) -> 10 / 1.6 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 + 10 = 10.625 (left: 10 10.625)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 8 10  -> 18 + 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "300 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 - 10 = 290 (left: 10 290)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "300 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 + 10 = 310 (left: 10 310)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 4 = 40 (left: 10 40 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "10 30 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 30 - 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "300 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10) -> 300 + 10 = 310 (left: 10 310)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 40 10"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "10 4 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 / 10 = 4 (left: 10 4 10) -> 10 + 4 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "10 3000"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None - 18 is the final number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 50"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 8 50) -> 8 + 50 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "10 30 10"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 40 - 10 = 30 (left: 10 30 10) -> 10 * 30 = 300 (left: 300 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "400 10"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 40 = 400 (left: 400 10) -> 400 / 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 40 10) -> 10 * 4 = 40 (left: 10 40 10) -> 10 + 40 = 50 (left: 10 10 50) -> 50 / 10 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> Input: 1 1 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 + 8) * (11 - 6) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 "
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n3 + 5 = 8 (left: 8 21)\n8 * 21 = 168 (left: 168)\nAnswer: (3 * 7) + (3 + 5) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 9 8 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "27"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> 27 * 2 = 54 (left: 2 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 4 6  -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 21 7)\n21 + 7 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 7) - 4 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 + 6 = 18 (left:"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: -> 18 - 6 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) * (5 - 3)) +",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n3 * 6 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\n29 - 5 = 24 (left: 24)\nAnswer: ((3 + 8) * (3 * 6)) - 5 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "36 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "27"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 24 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((4 + 6) * (5 - 3)) + 4 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 + 6 = 18 (left:"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((4 + 6) * 3 - 10",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 * 3 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * 3) - 3 = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "27"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> There are no possible next steps with the input of 27.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: 3 * (4 - (5 - 3)) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 "
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n3 * 6 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\n29 - 5 = 24 (left: 24)\nAnswer: ((3 + 8) * 6) - 5 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 7 4)\n3 * 4 = 12 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (3 + 4) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 + 8 = 14 (left: 6 14)\n6 * 14 = 84 (left: 84)\nAnswer: (3 + 3) * (6 + 8) = 84"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n27 - 8 = 19 (left: 19)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> \nGreat job! You have successfully found multiple ways to obtain 24 using the given numbers and basic arithmetic operations. Keep up the good work!"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29 (left: 2 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)  -> Answer: (6 * 2) * (4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 * 3 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 + 6 = 18 (left:"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 2) * 4 = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n6 + 4 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((7 - 3) + (6 + 4)) * (10 - 8) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24"
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 11 - 8 = 3 (left: 3 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 11 - 2 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 55 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 + 55 = 82.5 (left: 82.5)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 - 55 = -27.5 (left: -27.5)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "27.5 55"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 - 6 = 50 (left: 11 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 15 + 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "27.5 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 11 / 6 = 1.83 (left: 1.83 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.857 8 11"
                }
            },
            "Step 4": {
                "Step": "6 / 7 = 0.857 (left: 0.857 8 11) -> 0.857 * 8 = 6.856 (left: 6.856 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 55 / 27.5 = 2 (left: 27.5 2)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 4"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 11 = 3.818181818181818 (left: 8 3.818181818181818)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "6 8 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 * 55 = 1512.5 (left: 1512.5)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "2 55"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 6 = 1.1666666666666667 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5 (left: 6 5 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 + 6 = 17 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 + 55 = 82.5 (left: 55 82.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 55 57)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 11 - 6 = 5 (left: 5 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "6 / 7 = 0.857 (left: 0.857 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 27.5"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5) -> 27.5 - 2 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 / 55 = 0.5 (left: 0.5",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "27.5 2"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 55 / 27.5 = 2 (left: 27.5 2) -> 27.5 + 2 = 29.5 (left: 29.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "27.5 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 7 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 + 11 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 + 7 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 27.5"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5) -> 27.5 - 2 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 - 11 = 45 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 11 * 8 = 88 (left: 88 42)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 / 55 = 0.0363636363636364 (left: 0.0363636363636364)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 / 55 = 0.03636363636363636 (left: 0.03636363636363636)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 / 55 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "27.5 55"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 - 6 = 50 (left: 11 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 27.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 10 - 5 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 * 55 = 1512.5 (left: 55 1512.5)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 11 * 6 = 66 (left: 66 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 7 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 27.5"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5) -> 2 + 27.5 = 29.5 (left: 29.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6.856 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 * 55 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "27.5 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 55 / 27.5 = 2 (left: 2 55)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "2 55"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 6 * 11 = 66 (left: 66 11 56)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 55"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 27.5"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 2 27.5) -> 27.5 / 2 = 13.75 (left: 13.75)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "27.5 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "27.5 55"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 5 / 11 = 0.45 (left: 0.45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 55"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "27.5 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "27.5 2"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 11 56)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 + 7 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 11 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 6 * 11 = 66 (left: 66 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "27.5 55"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 + 7 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 - 2 = 53 (left: 2 53)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 / 2 = 3.5 (left: 3.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "27.5 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "27.5 2"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 55"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 55"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "27.5 55"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 55 / 2 = 27.5 (left: 27.5 55) -> 27.5 - 55 = -27.5 (left: -27.5)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2 55"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "2 55"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 11 = 55 (left: 2 55) -> 10 * ",
                "Pruning": null
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0.7777777777777778 9 13"
                }
            },
            "Step 3": {
                "Step": "7 / 9 = 0.7777777777777778 (left: 0.7777777777777778 9 13) -> 13 - 0.7777777777777778 = 12.222"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 9 3"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 7 9 3) -> 3 + 7 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 7 9 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 7 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 9 = 0.7777777777777778 (left: 0.7777777777777778 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 * 7 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 9 13 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 7 * 4 = 28 (left: 9 28)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 9 13 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 4 - 9 = -5 (left: -5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 16"
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 9 13 16) -> 16 - 13 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1.2857 9 13"
                }
            },
            "Step 2": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 / 1.2857 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 5 + 9 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 9 13 63)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "13 - 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 13 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 16"
                }
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 9 13 16) -> 13 - 9 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 - 12 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.33 18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 12 / 9 = 1.33 (left: 1.33 18) -> 1.33 * 18 = 23.94 (left: 23.94)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 12 / 9 = 1.33 (left: 1.33 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 2 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 9 18"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 18 / 9 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 9 18)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 9 18"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((12 - 3) * 9) * 2 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 6 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 9 12"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 12) -> 2 + 9 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1*12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "54 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 9 18"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 - 9 = 0 (left: 0 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 18"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 - 9 = 0 (left: 0 18) -> 0 / 18 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 * 12 = 648 (left: 648)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 15 12"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 3 15 12) -> 3 + 15 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 6 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 - 12 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 3 15 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 + 12 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "54 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) ",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "18 81"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 * 9 = 81 (left: 18 81) -> 18 + 81 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> 54 * 12 = 648 (left: 648)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 + 9) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 9 18"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 * 9 = 81 (left: 18 81)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 18"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 / 9 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "18 81"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 9 18) -> 9 * 9 = 81 (left: 18 81) -> 18 - 81 = -63 (left: -63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "54 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12) -> Input: 6 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 + 13 = 25 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "22"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 + 15 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11 (left: 2)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "22"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None - there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "22 2"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "22"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 13 18"
                }
            },
            "Step 1": {
                "Step": "12 + 6 = 18 (left: 9 13 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "6 13 108"
                }
            },
            "Step 2": {
                "Step": "9 * 12 = 108 (left: 6 13 108) -> 108 - 6 = 102 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number and no operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "22"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 + 15 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "22 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 9 7) -> 9 + 7 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 * 15 = 195 (left: 12 195)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> No possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 3 = 10 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There is only one possible next step: 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 14 32)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps as the input only has one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 8 = 16 (left: 8 14 16)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 9 13 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 8 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 9 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 9 25) -> 25 / 6 = 4.1667 (left: 6 4.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "22 2"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "22 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 3 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "22 2"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "22 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "22 2"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 9 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 6 12 13) -> 13 - 6 = 7 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 13 = 0.923 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 + 15 = 28 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 195"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 * 15 = 195 (left: 12 195) -> 7 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 * 2 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 * 2 = 48 (left: 2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "22 2"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "9 * 12 = 108 (left: 6 13 108)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 8 20 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "22 2"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 + 15 = 28 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "22"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 8 = 30",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 5 - 9 = -4 (left: -4 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 2 - 22 = -20 (left: -20 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 8 14 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "22 2"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "22 2"
                }
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 13 - 4 = 9 (left: 9 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 13 / 4 = 3.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (9 - 7)) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 / 1.75 = 7.42857 (left: 7.42857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((4 + 7) + (13 - 9)) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 9 / 11 = 0.8181818181818182 (left: 13 0.818181818",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.75 9 13"
                }
            },
            "Step 3": {
                "Step": "7 / 4 = 1.75 (left: 1.75 9 13) -> 13 - 1.75 = 11.25 (left: 9 11.25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.75 9 13"
                }
            },
            "Step 2": {
                "Step": "7 / 4 = 1.75 (left: 1.75 9 13) -> 1.75 + 9 = 10.75 (left: 10.75 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 3": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 * 9 = 117 (left: 117 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 4 * 13 = 52 (left: 52 28)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 + 13 = 14.85714285714 (left: 14.85714285714)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 / 4 = 1.75 (left: 1.75 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 13 - 11 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 / 13 = 0.14285714286 (left: 0.142857142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 3"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "4 3"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "4 3"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 * 13 = 24.14285714282 (left: 24.14285714282)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 * 7 = 91 (left: 13 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 0.818181818"
                }
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 9 / 11 = 0.8181818181818182 (left: 13 0.818181818 -> 13 + 0.818181818 = 13.818181818 (left: 13.818181818)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 4 = 13 (left: 7 13 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 / 13 = 0.5384615384615384 (left: 0.538461538461538",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 * 13 = 91 (left: 13 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 2": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "7.25 13"
                }
            },
            "Step 3": {
                "Step": "7 / 4 = 1.75 (left: 1.75 9 13) -> 9 - 1.75 = 7.25 (left: 7.25 13) -> 7.25 + 13 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 / 4 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 9 * 5 = 45 (left: 13 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 + 13 = 14.85714285714 (left: 14.85714285714)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 13 * 4 = 52 (left: 52 28)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (9 - 7)) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 3"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 3": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 28 - 4 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 + 4 = 13 (left: 7 13 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.75 9 13"
                }
            },
            "Step 2": {
                "Step": "7 / 4 = 1.75 (left: 1.75 9 13) -> 9 - 1.75 = 7.25 (left: 7.25 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "4 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 - 9 = 4 (left: 4 13 28) -> 4 * 13 = 52 (left: 52 28)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 9 - 5 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) * 9 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> Please provide a list of numbers to determine possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 11 / 8 = 1.375 (left: 1.375 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 10"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 + 8 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "Input:"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 8 6"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 5 8 6) -> 8 - 5 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> There is no input provided. Please provide the input values for the possible next steps to be calculated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 10 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 5 8 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 / 5 = 1.2 (left: 1 1.2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6) -> 2 + 6 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 11 / 8 = 1.375 (left: 1.375 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "2 15"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 / 4 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> There is no input provided. Please enter a set of numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "2 15"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 5 12 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 5 8 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 - 6 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input:"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 6 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 6"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 + 8 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> There is no input provided. Please enter a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 * 10 = 50"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 = 96 (left: 30 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "8 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> Please provide a set of numbers for me to determine possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 * 10 = 50"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333333333333333 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 + 8 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 12 = 17 (left: 12 17)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 / 4 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> Input: -> Please provide a list of numbers for me to suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 8 / 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 - 8 = 4 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 10"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1.2 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 6 / 4 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 10 / 5 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 11"
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 is not a whole number, so it is not a valid step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 2 24 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 / 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 4 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 4 7) -> 7 / 4 is not a whole number. No more steps possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 8 + 10 = 18 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 2 24 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 - 6 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 + 2 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "12 6 7"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 6 7) -> 12 / 6 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> Input: 5 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 24 7"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 - 7 = 17 (left: 2 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 + 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) ",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 4 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 4 7) -> 4 / 4 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no more numbers left to operate on.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 2 * 8 + 2 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 4 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 10 - 2 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 - 0.5 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None - the input number is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10) ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 * 8 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> Input: 5 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 10 "
                }
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 8)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 + 5 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 10 "
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None - 18 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 6 = 13 (left: 6 12 13) -> 13 + 6 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 6) + 7) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 7 + 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 7) + 6) * 12 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 6) + 7) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 7 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 7 + 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 6 = 13 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 7) - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 6 = 13 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "6 6 1"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 6 6 1) -> 6 / 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 1 * 7 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 6": {
                "Step": " -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 7) + 1) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 7 12) -> 12 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "6 6 1"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 6 6 1) -> 6 + 6 = 12 (left: 12 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 6": {
                "Step": " -> There are no possible next steps as there are no numbers given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 6 = 13 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": " -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 6) + 7) * 12 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 6 6 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 6) + 7) * 12 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 6 1 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 6 6 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 / 1 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 / 1 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 6": {
                "Step": " -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "6 6 1"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 6 6 1) -> 6 / 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 12 13) -> 13 - 6 = 7 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 + 1 = 8 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 6 1 6) -> 6 - 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 + 7) - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (7 + 1) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 6 1 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 4": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": " -> It seems like there is no input provided for the next steps. Can you please provide the numbers for which you want to find possible next steps?",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 / 1 = 7 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 1 6"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 6 1 6) -> 6 - 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 6 1 6) -> 6 * 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 7 + 12 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 1) * (6 / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 + 1 = 8 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 + 1) * (7 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 / 13.5 \u2248 0.815 (left: 0.815)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1.8 (left: 1.8 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7.5 11"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 7.5 / 11 = 0.681818181818 (left: 0.681818181818)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "-3 9 11"
                }
            },
            "Step 2": {
                "Step": "6 - 9 = -3 (left: -3 9 11) -> 11 - 9 = 2 (left: -3 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 / 13.5 = 0.8148148148148148 (left: 0.8148148148148148)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10.5 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 + 11 = 21.5 (left: 21.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number provided, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible operations that can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the input 24.5 as it is already a single value."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> Input: 3 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "9 9.5"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 + 9.5 = 18.5 (left: 18.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number, so no calculations can be made.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "There are no possible next steps for the input 24.5 as there are no other numbers provided to perform operations with."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 3 + 7 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 * 9 = 81 (left: 6 11 81)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "10.5 11"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 3 + 7 = 10 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5, as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 / 13.5 = 0.81481 (left: 0.81481)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no valid next steps for the input 24.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 * 13.5 = 148.5 (left: 148.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps with the input 24.5 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as there are no additional numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 9 = -3 (left: -3 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> No possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "-3 9 11"
                }
            },
            "Step 3": {
                "Step": "6 - 9 = -3 (left: -3 9 11) -> 11 - 9 = 2 (left: -3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 9 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> 24.5 + 2 = 26.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one possible step for this input: ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> 24.5 + 2 = 26.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "10.5 11"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 / 11 = 0.9545454545454546 (left: 0.9545454545454546)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for the input 24.5 as it is a single number and not an expression with operators.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 3 + 6 = 9 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> Error: Invalid input. Please provide a list of numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 13.5"
                }
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 / 13.5 = 0.8148148148148148 (left: 0.8148148148148148)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24.5"
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 + 13.5 = 24.5 (left: 24.5) -> There are no possible next steps for 24.5 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "11 13 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18181818182 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 13) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18181818182 (left: 1.18181818182 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "11 13 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 8) - 11) * 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 11 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 / 11 = 1.1818181818182 (left: 1.1818181818182 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 13) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.1818181818181819 (left: 1.181818181818181",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11 -1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 + 11 = 24 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 * 13 = 143 (left: 12 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12 24)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24",
                "Pruning": {
                    "Idx": "12.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11 -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 6 + 4 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 4 * 0 = 0 (left: 2 0 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 * 2 = 4800",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 / 400 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "200 2200"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 - 200 = 2200 (left: 200 2200) -> 200 * 2200 = 440000 (left: 440000)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 10 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 6 + 4 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 + 4 + 0 + 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "200 400"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 / 2 = 1200 (left: 1200)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 4 * 8 = 32 (left: 6 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "60 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 / 40 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "0 0 0"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0) -> There are no possible next steps with the input 0 0 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 400 / 2 = 200 (left: 200 400)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 - 200 = 2200 (left: 200 2200)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "200 400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 400 / 2 = 200 (left: 200 400) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "8 + 10 = 18 (left: 5 6 18)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 4 + 8 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "60 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 / 40 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 10 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "200 400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 400 / 2 = 200 (left: 200 400) -> 200 - 400 = -200 (left: -200)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 11 0.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 10 * 20 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 24 * 100 = 2400",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "200 2200"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 7 * 9 = 63",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "0 0 0"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0) -> There are no possible next steps with the input of 0 0 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 / 12 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 3 * 5 = 15 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 400 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 400 * 6 = 2400 (left: 2400)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "200 2200"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 32 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 6 + 4 = 10 (left: 8 10) -> Input: 4 8 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2400"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 4 * 100 = 400 (left: 400 2400)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "0 0 0"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0) -> There are no more possible next steps with the given input of 0 0 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 + 400 = 402 (left: 400 400)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 * 10 = 80 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 + 2 = 2402 (left: 400 400 2402)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 400 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 6 10 40)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> Input: 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 / 6 = 400 (left: ",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 / 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "200 2200"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 - 200 = 2200 (left: 200 2200) -> 200 + 2200 = 2400 (left: 2400)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "60 40"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 240",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "0 0 0"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0) -> There are no possible next steps as all numbers are 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 9",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 3 + 5 = 8 (left: 8 9 1)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 6 + 4 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "4 8 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2400"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 / 400 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "2400"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 + 2 = 2402 (left: 2 2402)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "200 2200"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 / 2 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 9 * 3 = 27 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 / 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "4 8 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 + 2 = 2402 (left: 2 2402)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 8 - 4 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "200 2200"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2400"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> 6 + 4 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "200 2200"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2400 - 200 = 2200 (left: 200 2200) -> 200 * 2200 = 440000 (left: 440000)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "200 400"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "60 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 + 40 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "0 0 0"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 2 * 4 * 0 + 0 = 0 (left: 0 0 0) -> There are no possible next steps with the input of 0 0 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 8 6"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 4 8 6) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "2400"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> 40 * 60 = 2400 (left: 2400)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "200 400"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 6 10 40) -> 6 * 10 = 60 (left: 60 40) -> 60 * 40 = 2400 (left: 2400) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 11 / 6 = 1.83 (left: 1.83 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 / 6 = 2.1667 (left: 2.1667 13 23)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 1 65)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "25"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 6 = 18 (left: 11 13 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 11 / 6 = 1.8333333333333333 (left: 1.8333333333333333 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 * 17 = 221 (left: 12 221)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 6 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "25"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "15.1667 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 / 6 = 2.1667 (left: 2.1667 13 23) -> 13 + 2.1667 = 15.1667 (left: 15.1667 23) -> 15.1667 / 23 = 0.6581 (left: 0.6581)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 23 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 11 / 6 = 1.83 (left: 1.83 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "11 + 6 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 / 6 = 45.8333 (left: 45.8333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 4.166666666666"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 13 66"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 13 - 12 = 1 (left: 1 13 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 4 * 12 = 48 (left: 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 269 - 6 = 263 (left: 263)",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "12 13 17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "2.1667 13 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 / 6 = 2.1667 (left: 2.1667 13 23) -> 13 + 2.1667 = 15.1667 (left: 15.1667 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 * 2 = 50",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 / 11 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 23 13"
                }
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 23 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 + 6 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 269 / 6 = 44.83 (left: 44.83)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4.16666666667 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4.166666666666"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 - 12 = 1 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "66 1"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 + 1 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "66 1"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 * 8 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.16666666667 (left: 4.16666666667 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614 (left: 1614)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "6 269"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> 66 / 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 269 / 6 = 44.83333333333333 (left: 44.83333333333333)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 4.166666666666"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> 66 / 2 = 33 (left: )",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "66 / 2 = 33"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 * 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 269 - 6 = 263 (left: 263)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "66 1"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "66 1"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 - 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 + 2 = 27 (left: 2) ",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: 6 11 1)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 11 / 6 = 1.83 (left: 1.83 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 * 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 * 1 = 66 (left: 1 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> There are no possible next steps for the input 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 6 + 275 = 281 (left: 275 281)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4.166666666666"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 / 4.166666666666 = 1.44 (left: 1.44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 12 * 13 = 156 (left: 17 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 + 269 = 275 (left: 275)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "25"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4.166666666666"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 / 4.166666666666 = 1.44 (left: 1.44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "There are no possible next steps for the input 66."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 23 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.8333333333333333 1"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 11 / 6 = 1.8333333333333333 (left: 1.8333333333333333 1) -> 1.8333333333333333 + 1 = 2.833333333333333 (left: 2.833333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "66 1"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 * 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 + 1 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4.166666666666"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 / 4.166666666666 = 1.44 (left: 1.44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 6 + 275 = 281 (left: 275 281)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614 (left: 1614)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "66 1"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 + 269 = 275 (left: 275)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "2.1667 13 23"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> 6^6 = 46656 (left: 46656)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 11 13 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 11 1"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 6 + 275 = 281 (left: 281)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 269"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 * 269 = 1614 (left: 1614)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "66 1"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "66 1"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 * 1 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "There are no possible next steps for the input 66."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 * 17 = 221 (left: 12 221)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 275"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 6 + 275 = 281 (left: 281)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 66 / 1 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "66 1"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 6 11 1) -> 6 * 11 = 66 (left: 66 1) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 269"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 25 = 275 (left: 6 275) -> 275 - 6 = 269 (left: 6 269) -> 6 + 269 = 275 (left: 275)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 = 4.166666666666667 (left: 6 4.166666666666 -> 6 * 4.166666666666 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "6 * 269 = 1614"
                }
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 32)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "16 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "16 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 / 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 5 * 10 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "16 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 / 16 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "16 32"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 3 + 5 = 8 (left: 2 8",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0."
                }
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 / 8 = 4 (left: 8 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 20",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "3 6"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 / 32 = 0.5 (left: 0.5 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 8 = 0 (left: 2 0)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "32 - 8 = 24 (left:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: -> 8 * 32 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 8 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.5 16"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 / 32 = 0.5 (left: 0.5 16) -> 16 - 0.5 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "16 32"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 * 32 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "16 32"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "64 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32) -> 5 + 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "64 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32) -> 64 / 32 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "64 32"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "7 8 9"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 8 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 / 16 = 2 (left: 2 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "16 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "64 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32) -> 64 / 32 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "16 32"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.5 16"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 / 32 = 0.5 (left: 0.5 16) -> 0.5 * 16 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0.5 16"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 * 2 = 16 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "32 - 8 = 24 (left:"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: -> Input: 5 6 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 32 = 256 (left: 256)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "16 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 32 / 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "7 8 9"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "0."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps for the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 9 - 6 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "8 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "64 32"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32) -> 64 - 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 + 8 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "16 32"
                }
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 2 = 42 (left)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 21"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 + 8 = 29 (left: 8 21) -> 3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 * 12 = 84 (left: 2 84 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 * 14 = 98 (left: 13 98)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 7 = 147 (left: 147)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 14 * 7 = 98 (left: 98)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "147"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 7 = 147 (left: 147 -> 4 - 1 = 3 (left: 3 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 + 7 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 13) -> 13 / 6 = 2.17 (left: 2.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 7 = 147 (left: 147",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 14 / 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 14 / 7 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 2 5  -> 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 12 15"
                }
            },
            "Step 3": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 12 - 7 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2 5 13"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 2 5 13) -> 2 + 5 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 * 2 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 7 * 13 = 91 (left: 91 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left:",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 14"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "21 * 2 = 42 (left"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 2 = 42 (left) -> 21 + 2 = 23 (left: 23)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "13 + 2 = 15 (left: 7 12 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 2 5  -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 2 5  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 7 * 2 = 14 (left: 14 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "91"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 9 * 1 = 9 (left: 91 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 14 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 13 - 12 = 1 (left: 14 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2 5 13"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 2 5 13) -> 5 + 13 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 8 + 21 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "7 - 2 = 5 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 - 2 = 5 (left: -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 7 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "2 7 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 2 7  -> 7 - 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2 5 13"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 2 5 13) -> 5 * 2 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 + 8 = 29 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 28 - 21 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 8 = 168 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 13"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 - 2 = 5 (left: -> 5 + 8 = 13 (left: 8 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 2 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 + 7 = 20 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 10 13 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 13 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 7 = 147 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> Input: 1 3 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 + 7 = 20 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 2 5 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 - 2 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 / 7 = 3 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 + 7 = 20 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "2 5 13"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 2 5 13) -> 13 - 5 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 14"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 / 7 = 3 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 7 + 13 = 20 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 13 / 7 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "14 1"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 13 - 12 = 1 (left: 14 1) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 / 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 - 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "98"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 14 * 7 = 98 (left: 98) -> 9 + 8 = 17",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 13 + 7 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 14"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 7 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "14 1"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 13 - 12 = 1 (left: 14 1) -> 14 + 1 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "2 7 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 2 7  -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 14"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 / 14 = 0.43 (left: 0.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "91"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> There are no possible next steps with the input of 91.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "14 1"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 13 - 12 = 1 (left: 14 1) -> 14 * 1 = 14 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "14 1"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 13 - 12 = 1 (left: 14 1) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 21 / 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14 + 7 = 21 (left:"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 7 * 2 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "14 14"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 + 7 = 21 (left: -> 7 * 2 = 14 (left: 14 14) -> 14 + 14 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 2 + 12 = 14 (left: 14 12 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (12 - 8) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10 2 24)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (12 - 8) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.66666666667 8 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 12) -> 12 - 2.66666666667 = 9.33333333333 (left: 8 9.33333333333)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> Input: 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (12 - 8) * (6 + 2) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((12 - 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "0 12"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "14 140"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 14 + 140 = 154 (left: 154)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 8  -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 6) - 8) * 12 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "8 32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.66666666667 8 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 12) -> 8 / 2.66666666667 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 12) -> 8 / 2.66666666667 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 / 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 "
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "10 14"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (12 - 8) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> Input: 24 140 4 1.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 / 2) / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> Input: 1.5 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((12 - 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> Input: 14 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 2 - 12 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 14 140)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 / 2) / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 6) - 8) * 12 = 24",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 9.33333333333"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 12) -> 12 - 2.66666666667 = 9.33333333333 (left: 8 9.33333333333) -> 8 + 9.33333333333 = 17.33333333333 (left: 17.33333333333)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "10 14"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 6) + 8) - 12 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((12 - 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 * 2 = 24 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 2) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 2 + 12 = 14 (left: 14 2 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 8 10 12) -> 12 - 8 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 6) - 8) * 12 = 24",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 * 2 = 24 (left"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((12 - 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left -> 24 / 12 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "2 12"
                }
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 6 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 4 13) -> 6 / 4 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 + 4 = 23.5 (left: 4 23.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 * 78",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 13) -> 13 - 3 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "78 312"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 - 78 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 78"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 20",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 - 312 = -234 (left: -234)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 78"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 / 9 = 0.4444 (left: 0.4444 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 + 78 = 82 (left: 82)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 + 78 = 82 (left: 82)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 4 13"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 4 13) -> 6 * 4 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 / 312 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 78"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 + 312 = 390 (left: 390)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 4 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 + 312 = 390 (left: 390)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "0.25 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 / 312 = 0.25 (left: 0.25 312) -> 312 / 0.25 = 1248 (left: 1248)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 78"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 4 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 + 78 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 - 78 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 4 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 / 4 = 4.875 (left: 4.875)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "19.5 4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 78"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 * 312 = 24336 (left: 24336)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "0.25 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 / 312 = 0.25 (left: 0.25 312) -> 0.25 * 312 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 13) -> 5 + 3 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "13 - 6 = 7 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 6 = 7 (left: -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "78 312"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 - 312 = -234 (left: -234)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 6 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 4 13) -> 6 / 4 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 / 4 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 78"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 - 312 = -234 (left: -234)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 - 78 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 78"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 13) -> 5 / 3 = 1.67 (approximated)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 4 13) -> Input: 1 5 9 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 - 4 = 15.5 (left: 4 15.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 - 4 = 15.5 (left: 4 15.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 - 78 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 10 / 5 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 6 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "19.5 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 + 4 = 23.5 (left: 4 23.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 78"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "0.25 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 / 312 = 0.25 (left: 0.25 312) -> 312 - 0.25 = 311.75 (left: 311.75)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 13) -> 4 * 3 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 13 = 0.461538461",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 312 - 78 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "0.25 312"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 + 78 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 78"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 78"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 78"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 78 - 4 = 74 (left: 74 78)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 - 4 = 74 (left: 74 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 78"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5 4) -> 19.5 * 4 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "78 312"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 / 312 = 0.25 (left: 0.25 312)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 - 312 = -234 (left: -234 78)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 78"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 78 / 4 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "78 312"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 * 312 = 24336 (left: 24336)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "78 312"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "78 312"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 * 78 = 312 (left: 78 312) -> 78 * 312 = 24336 (left: 24336)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 78"
                }
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 9 2"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 11 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 50 12"
                }
            },
            "Step 3": {
                "Step": "5 * 10 = 50 (left: 4 50 12) -> 50 - 12 = 38 (left: 4 38)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 8 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 9 * 10 = 90 (left: 12 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((10 - 4) / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 / 9 = 1.33 (left: 1.33 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1.111... 12"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 10 / 9 = 1.111... (left: 1.111... 12) -> 1.111... * 12 = 13.333... (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 5 / 4 = 1.25 (left: 1.25 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> Input: 3 7 4 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 5 14 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 4 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 9 2"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 10 / 9 = 1.111... (left: 1.111... 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 - 6 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 10 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 * 12 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 10 20 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 - 5 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 4 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (10 - 4) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 1 = 18 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left: 2 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps as there are no other numbers to combine or operate with.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps for the number 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided for operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 2 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 - 1 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 - 1 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 1 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 + 7 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 - 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 1 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 1 + 2 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 - 1 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 - 1 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 2 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one number, so no possible next step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 - 1 = 1 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps as there are no other numbers to combine or operate with."
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps as there are no other numbers to combine or operate with. -> There are no possible next steps as there are no other numbers to combine or operate with.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left: 2 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 1 * 2 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 36"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "36"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> No more possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 - 1 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 / 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5 8) -> 5 * 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 * 3 = 27 (left: 27",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 - 8 = 22 (left: 4 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "5 20"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 * 3 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7.5 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 7.5 - 8 = -0.5 (left: -0.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 - 4 = 26 (left: 4 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 - 4 = 26 (left: 4 26)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 - 4 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 9 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "27 - 3 = 24 (left:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 3 + 3 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 9 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "27 - 3 = 24 (left:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 5 14"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 4 / 5 = 0.8 (left: 0.8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 - 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 9 = 3 (left: 3 3)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "27 - 3 = 24 (left:"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 24 + 3 = 27 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0.5 8 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30) -> 30 - 0.5 = 29.5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 4 + 20 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 9 - 27 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 + 3 = 30 (left: 3 30)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 9 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 5 "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 5 - 10 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 9 = 3 (left: 3 27) -> 3 / 27 = 0.1111111111111111 (left: 0.111111",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 * 5 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 * 3 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 * 3 = 81 (left: 81 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "27 - 3 = 24 (left:"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 3 = 24 (left: -> 27 + 3 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "27 - 3 = 24 (left:"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "27 - 3 = 24 (left:"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 9 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "27 - 3 = 24 (left:"
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 10 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 5"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> Input: 1.33 13 25 156 1 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 12 * 60 = 720 (left: 720 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 / 3 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "16 156"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 156 - 16 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 5"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 60"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 * 3 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "12 18"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 * 3 = 18 (left: 12 18) -> 18 / 12 = 1.5 (left: 1.5 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "6 * 3 = 18 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 * 3 = 18 (left: -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "12 / 1 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 1 = 12 (left: -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 * 13 = 156 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.6666666666666667 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 + 6 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "78 22"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 - 22 = 56 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 16 = 192 (left: 192 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 - 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 1 = 11 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "12 / 1 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 1 = 12 (left: -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 5"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 * 10 = 60 (left: 5 60)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 13 60)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 / 6 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "16 156"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 156 / 2 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5 60"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 * 10 = 60 (left: 5 60) -> 5 * 60 = 300 (left: 300)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10 12"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 / 12 = 1.08 (left: 1.08 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5 60"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 * 10 = 60 (left: 5 60) -> 60 / 5 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 22 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 3 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 + 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "12 / 1 = 12 (left:"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 1 = 12 (left: -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 * 3 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 22 13"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 22 13) -> 6 * 22 = 132 (left: 132 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 3 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12 13) -> 4 + 12 = 16 (left: 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 * 10 = 60 (left: 60 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 3 * 6 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 22 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 60 - 12 = 48 (left: 48 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 - 6 = 6 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 * 3 = 18 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5 60"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 / 5 = 5 (left: 6 10 5) -> 6 * 10 = 60 (left: 5 60) -> 5 * 60 = 300 (left: 300)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "78 22"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 - 22 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 12 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 6 12 3) -> 12 / 6 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 22 - 13 = 9 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 1 = 11 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: -> 12 + 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 6 12 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 13 60)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "12 13 60"
                }
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 13 60) -> 12 - 13 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 22 - 13 = 9 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 10 12) -> 12 - 10 = 2 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "1 13"
                }
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 27 9"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 27 / 1 = 27 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 6 + 9 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 27 9"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 1 + 9 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 27 9"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 27 / 9 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 27 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: 3 8) -> 5 * 10 = 50"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "1 * 9 = 9 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 * 9 = 27 (left: 8 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.6667 (left: 2.6667 9)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 27 / 9 = 3 (left: 1 3) -> 5 + 10 ="
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 27 / 9 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 27 9"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 9 + 1 = 10 (left: 27 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 27 9"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 1 + 27 = 28 (left: 9 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 14"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 14"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14) -> 4 * 14 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4 * (11 - 5)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 - 4 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 4 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3) -> 5 * 10 = 50 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + (4 - 11)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 + 12 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 + 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (11 - (1 + 4)) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 / 4 = 2.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 - 4 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 2": {
                "Step": "1 * 4 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 20 - 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (11 - (1 + 4)) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "4 - 1 = 3 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 - 14 = -11 (left: 14 -11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 14"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14) -> 4 * 14 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps with the input of 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 * 4 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * (11 - 5) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 4 / 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 14"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 1 4 7) -> 7 - 4 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 14"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * 11) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * (11 - 5) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 8 / 2.67 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "-4 14"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> -4 + 14 = 10 (left: 10)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 6 "
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 9 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "2 27 10"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 2 27 10) -> 27 - 2 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 \u2248 0.714 (left: 0.714)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 9 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 2.67 + 9 = 11.67 (left: 8 11.67)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 * 9 = 18 (left: 3 18 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 / 9 = 0.5555555555555556 (left: 0.555555555555555",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 9 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 8 / 2.67 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "2 27 10"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 2 27 10) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 8 / 2.67 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 9 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 9 - 2.67 = 6.33 (left: 6.33 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6.33 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 9 - 2.67 = 6.33 (left: 6.33 8) -> 6.33 * 8 = 50.64 (left: 50.64)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 8 / 2.67 = 3 (left: 3 8) -> 10 / 4 = 2.5 (left: 2"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 18 10"
                }
            },
            "Step 3": {
                "Step": "2 * 9 = 18 (left: 3 18 10) -> 3 / 18 = 0.16666666666666666 (left: 0.16666666666666666 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "-4 14"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> -4 / -4 = 1 (left: 1 14)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 2 27 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 9 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9 8) -> 2.67 + 9 = 11.67 (left: 8 11.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 5 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 - 9 = -6.33 (left: -6.33)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.37 (left: 3.37)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "8 18 36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 8 18 36) -> 18 + 8 = 26 (left: 26 36)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 19"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 / 6 = 2.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 / 1 = 6 (left: 6 13) -> 6 / 13 = 0.46 (left: 0.46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "8 18 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 19"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1 3 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "8 18 36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 8 18 36) -> 18 * 2 = 36 (left: 8 36)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "8 18 36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 8 18 36) -> 8 + 18 = 26 (left: 26 36)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "1 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 1 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 65"
                }
            },
            "Step 2": {
                "Step": "3 + 2 = 5 (left: 1 5 13) -> 5 * 13 = 65 (left: 1 65) -> 65 * 1 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 5 13"
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 1 5 13) -> 5 * 13 = 65 (left: 1 65)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 1 * 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate on. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "8 18 36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 8 18 36) -> 36 - 8 = 28 (left: 18 28)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 + 2 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> None. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 / 2 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 / 1 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 5 13"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 1 * 5 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> No possible next steps for the input 18.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 19"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1 3 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 * 2 = 36 (left: 8 18 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 5 13"
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 14"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * 6 + 4 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 * 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 6 = 0 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 6"
                }
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 1 + 5 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 + 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 - (6 - 1)) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 * 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 1 + 5 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 - 1) * 6 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 10 + 5 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 6 = 0 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 1) * (6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 * 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one possible next step for the input of 36, which is:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one possible next step for the input of 36, which is:"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps for the number 36.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the original numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> No possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 2.25"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 4 = 2.25 (left: 1 2.25) -> 1 - 2.25 = -1.25 (left: -1.25 2.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 7 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 7 9) -> 7 + 2 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> Input: 3 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "9 - 1 = 8 (left:"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with the input 36 as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 - 9 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one possible next step for the input of 36, which is:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps since there is only one number given in the input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 2 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 4 - 1 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 4 = 2.25 (left: 1 2.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 6 * 6 = 36 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 4 = 2.25 (left: 1 2.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> None - 36 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 * 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with. The result is 36.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 9 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There is only one possible next step for the input of 36, which is:"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 9 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one possible next step for the input of 36, which is: -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one possible next step for the input of 36, which is:"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> Input: 3 9 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 7 + 3 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 6"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 * 6 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364 (left: 4.36363636364)",
                "Pruning": {
                    "Idx": "14.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 6"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 * 11 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 6"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 - 2 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 / 2 = 1.090909090",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 6"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 * 6 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 - 2 = 0.181818181",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left:",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 11 + 1 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 + 2 = 4.18181818182",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 - 2 = 0.18181818182",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 + 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 / 2 = 1.09090909091",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 1 * 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 * 11 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 - 2 = 0.18181818182",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "7 6"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2.18181818182"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18181818182 (left: 2.18181818182) -> 2.18181818182 * 2 = 4.36363636364",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 5 12 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 13 * 15 = 195 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 3 + 5 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 13 * 15 = 195 (left: 12 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 38 - 12 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 5 12 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 3 + 5 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 5 12 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 12 * 38 = 456 (left: 456)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> Input: 5 20 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 * 17 = 221 (left: 10 221)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 + 12 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 5 + 12 = 17 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 4": {
                "Step": "13 + 5 = 18 (left: 10 12 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 24 / 10 = 2.4 (left: 2.4 119 2.43)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 12 + 38 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 12 - 38 = -26 (left: -26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "12 13 50"
                }
            },
            "Step 1": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "5 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 5 12  -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> Input: 4 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 13 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 + 5 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (12 + 5) + (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "5 13 22"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 5 + 13 = 18 (left: 18 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.428571428571429 (left: 2.428571428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 38 / 12 = 3.16666666667 (left: 3.16666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (12 + 5) + (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 5 + 12 = 17 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "12 13 50"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 38"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 50 - 12 = 38 (left: 12 38) -> 38 / 12 = 3.16666666667 (left: 3.16666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 5 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 3 + 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 5 13 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 3 * 5 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 12 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 5 12 3) -> 12 / 5 = 2.4 (left: 2.4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 5 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 60 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 36 - 24 = 12 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (12 + 5) + (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 - 5 = 8 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> Input: 24 10 2.43 119",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "5 13 22"
                }
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 22 - 13 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 6)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (2 + 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "11.0",
                    "Pruned state": "2 3 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 3 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 / 6 = 4 (left: 4 6 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 12",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> Input: 1 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (2 + 6) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> Input: 4 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 6 24)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 24"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 / 6 = 4 (left: 4 6 24) -> 6 * 4 = 24 (left: 24)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> It seems like there was an error in the input. Please provide the correct numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 24 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 24"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 / 6 = 4 (left: 4 6 24) -> 6 * 4 = 24 (left: 24 24)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (6 - 2) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 / 6 = 4 (left: 4 6)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 3 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 24"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 / 6 = 4 (left: 4 6 24) -> 24 / 4 = 6 (left: 6 24)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 * 24 = 144 (left: 144 6)"
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No more possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 / 4 = 1.75 (left: 1.75 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 "
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 7 12  -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 6 = 18 (left: 18 70)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> Not enough numbers provided for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11.67 (left: 11.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "20 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "0.86 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 7 = 0.86 (left: 0.86 10 12) -> 12 / 10 = 1.2 (left: 0.86 1.2",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "0.86 1.2"
                }
            },
            "Step 2": {
                "Step": "6 / 7 = 0.86 (left: 0.86 10 12) -> 12 / 10 = 1.2 (left: 0.86 1.2 -> 0.86 * 1.2 = 1.032 (left: 1.032)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number given (36), so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 4 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11.67 (left: 11.67 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps, 36 is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 7 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one possible next step: 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 8 = 288 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 7 = 0.86 (left: 0.86 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one possible step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "20 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 - 12 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "20 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No more possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None - 36 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 2 72) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "20 12"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "20 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 * 6 = 60 (left: 7 12 60)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "20 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 12 - 7 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 / 12 = 4.67 (left: 8 4.67)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 11"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 12"
                }
            },
            "Step 1": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 / 7) + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 2": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 * 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 7 2 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 12"
                }
            },
            "Step 1": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 1 12"
                }
            },
            "Step 1": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 11"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 2 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 / 7) + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 8 = 1.5 (left: 1.",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 / 7) + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 7 = 1 (left: 1 1 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "8 10.86"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 12 - 1.14 = 10.86 (left: 8 10.86) -> 8 - 10.86 = -2.86 (left: -2.86)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 / 7) + 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no valid next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 11"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 / 7) + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "1 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1."
                }
            },
            "Step 1": {
                "Step": "12 / 8 = 1.5 (left: 1. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 1) * 12 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.14 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 12 - 1.14 = 10.86 (left: 8 10.86)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 / 7 = 1 (left: 1 1 12) -> 1 + 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 / 7 + 8 / 8) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 8 10) -> 3 * 8 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8) * 3 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) + (3 * 8) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 8 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 4 2) -> 3 + 4 = 7 (left: 2 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 4 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 2"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 4 2) -> 3 / 2 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 3) * (8 - 6) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 4 2) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 8 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 + 8 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 3) * (8 - 6) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "24 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 12 - 6 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 6"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 12 - 6 = 6 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 + 3 = 27 (left: 8 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 3) * (8 - 6) = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 4 2) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 + 24 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 7 2"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 4 2) -> 3 + 4 = 7 (left: 2 7 2) -> Input: 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "8 16"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 6"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 12 - 6 = 6 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 3) * (8 - 6) = 24"
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 - 8 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 - 8 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 + 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 + 5 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 * 5 = 10 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "14 / 2 = 7 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 - 11 = -2 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 9 3"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 8 9 3) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 / 7 = 1.43 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> Input: 5 3 7 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 * 11 = 110 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 14 + 7 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "14 / 2 = 7 (left:"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left: -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 8 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 14 / 2 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 - 7 = 1 (left: 2 1 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 - 7 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 + 11 = 20 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 / 9 = 0.7777777777777778 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 / 2 = 3.5 (left: 3.5 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 - 8 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "14 / 2 = 7 (left:"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 / 9 = 0.88888 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 - 8 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 * 5 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "14 / 2 = 7 (left:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 6 * 20 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 * 5 = 10 (left: 10 14) -> 24 + 140 = 164 (left: 4 164 1.4)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 9 3"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 8 9 3) -> 9 + 3 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "8 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 + 7 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 + 11 = 20 (left: 1 7 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> Input: 4 16 20 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 7 20"
                }
            },
            "Step 2": {
                "Step": "9 + 11 = 20 (left: 1 7 20) -> 20 - 1 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 / 7 = 1.57 (left: 1.57 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 + 5 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143 14)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 + 11 = 20 (left: 1 7 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 7 20"
                }
            },
            "Step 4": {
                "Step": "9 + 11 = 20 (left: 1 7 20) -> 20 - 1 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 2 + 7 = 9 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 21"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 14 + 7 = 21 (left: 8 21) -> 21 - 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 * 5 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 * 1 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> Input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "7 * 1 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 14 - 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "14 / 2 = 7 (left:"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 / 2 = 7 (left: -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "7 * 1 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 / 2 = 3.5 (left: 3.5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 5 * 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 / 7 = 1.42857142857 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 + 7 = 8 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 * 7 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 14 - 2 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 7 = 14 (left: -> 7 - 2 = 5 (left: 2 5 14) -> 2 * 5 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "7 14"
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 * 6 = 30 (left: 30 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> Input: 4 5 6 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 6 + 5 = 11 (left: 11 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number left."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)  -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 6 - 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 8 = 4.5 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 + 3) + 6) + 13 = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> Input: 5 10"
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 - 3 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 3 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 / 3 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 / 3 = 5.33 (left: 3 5.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 * 10 = 20 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 / 3 = 5.33 (left: 3 5.33)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10 2) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 10) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24 2"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24 2) -> 24 - 2 = 22 (left: 22 2)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 5 = 0.4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 2 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 2 + 5 = 7 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "10 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 / 3 = 5.33 (left: 3 5.33)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 * 10 = 20 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 3 * 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 2 + 5 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 - 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 5.33"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 / 3 = 5.33 (left: 3 5.33) -> 3 + 5.33 = 8.33 (left: 8.33)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "14.7",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 10"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "10 2"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 2 5  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "16 3"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 16 * 3 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 2 10  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 - 2 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24 2) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24 2"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "12 2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 5  -> 7 + 9 = 16 (left: 16 3) -> 7 + 5 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 48 + 2 = 50 (left: 50 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 2 + 48 = 50 (left: 13 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 13 + 2 = 15 (left: 48 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 14 13"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 2 14 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 7 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 2 14 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.8461538461538463 (left: 1.8461538461538463)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 48 - 2 = 46 (left: 13 46)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 2 = 15 (left: 6 8 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 2 + 48 = 50 (left: 13 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "12 8 13"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 13) -> 12 / 8 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 2 48 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 48 13"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 48 / 2 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 8 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 8 7) -> 2 + 8 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 15"
                }
            },
            "Step 2": {
                "Step": "13 + 2 = 15 (left: 6 8 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "13 46"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 2 48 13) -> 48 - 2 = 46 (left: 13 46) -> 13 - 46 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 960)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "16 10 12"
                }
            },
            "Step 4": {
                "Step": "8 + 8 = 16 (left: 16 10 12) -> 16 * 10 = 160 (left: 160 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "12 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 960) -> 12 * 80 = 960",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 divided by 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 2 = 120",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 2 = 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 12 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 * 18 = 216 (left: 8 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "8 + 8 = 16 (left: 16 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 - 2 = 238 (left: 238)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "22"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 * 2 = 480 (left: 2)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps with the input of 22 as there are no other numbers provided for operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "22"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps for the number 22.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 3 * 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> Input: -> There is no input provided. Please provide the numbers you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 12 16"
                }
            },
            "Step 3": {
                "Step": "8 + 8 = 16 (left: 10 12 16) -> Input: 6 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 / 8 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 2 * 4 = 8 (left: 8 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> Input: -> There is no input provided. Please provide a set of numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps for the input 240.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 10 = 1.2 (left: 8 1.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> Input: 5 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None - the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 2 + 2 = 4 (left: 4 22)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 + 2 = 8.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps with the input of 240.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 4 + 0 + 2 = 6 (left: ",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 8 = 1 (left: 10 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "10 1 12"
                }
            },
            "Step 3": {
                "Step": "8 / 8 = 1 (left: 10 1 12) -> 12 - 10 = 2 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 8 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps for the input 240 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 / 8 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 64 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 10 12"
                }
            },
            "Step 1": {
                "Step": "8 / 8 = 1 (left: 1 10 12) -> 1 * 10 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 8 = -1.33333333333 (left: -1.33333333333 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 1 12"
                }
            },
            "Step 4": {
                "Step": "8 / 8 = 1 (left: 10 1 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 4 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "22"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 8 12 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 8 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 / 8 = 1 (left: 10 1 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> Input: -> There is no input provided. Please provide a set of numbers to calculate the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 24 * 0 = 0 (left: 0 240)",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 10 = -2 (left: -2 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 - 12 = -4 (left: -4 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 960)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 10 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 8 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 4 + 0 = 4 (left: 240 4)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps for the input 6.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "22"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 + 240 = 480 (left: 480)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 * 2 = 44 (left: 2)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 8 / 8 = 1 (left: 1 16 24)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 2": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 960 = 76800 (left: 76800)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "12 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 960) -> 12 * 80 = 960",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 / 2 = 11 (left: )",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 + 1 = 241",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 / 8 = 1 (left: 10 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 64 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 64 12) -> 10 * 64 = 640 (left: 640 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 + 30 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 - 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps for the number 240 as it is a single number and cannot be combined with any other numbers using the operations of addition, subtraction, multiplication, or division.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 / 8 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 12 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 10 12 18) -> 12 / 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 30"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "12 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 960) -> 12 + 960 = 972 (left: 972)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 10 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "22"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 10 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "240"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There is only one possible next step for 240: 240 divided by 2 equals 120.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 - 1.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 + 1.5 = 4.5 (left: 1.5 4.5)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 8 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step:"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 - 1.5 = 1.5 (left: 1.5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 + 1.5 = 4.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 8 13)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 8 = 24 (left: 1 24 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 4": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 / 3 = "
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 3 + 8 = 11 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 * 8 = 24 (left: 1 24 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as the input is a single number."
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 3": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 3 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No more possible next steps."
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 3 + 8 = 11 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 - 1.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 5 + 6 = 11 (left: 11 10)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 3": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 3 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 / 4 = 0.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.5 7"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 / 1.5 = 4.666666666666667 (left: 4.666666666666667 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 4 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3) -> 5 + 10 = 15 (left: 15)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 - 8 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 * 4 = 16 (left: 16 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3) -> 3 * 0 = 0 (left: 0)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 8 / 3 = 2.67 (left: 2.67 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 4 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (7 - 10) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 - 4 = 0 (left: 0 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 7 6"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 7 / 4 = 1.75 (left: 1.75 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 10 / 3 = 3.33 (left: 3.33 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There are no possible next steps with just one number provided. More numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 1.43 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3) -> 3 * 0 = 0 (left: 0)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 28 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 * 4 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 4 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0 7 10"
                }
            },
            "Step 1": {
                "Step": "4 - 4 = 0 (left: 0 7 10) -> 7 / 0 is undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There are no possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 / 4 = 0.75 (left: 0.75 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 3 * 8 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 8 - 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10) -> 10 - 3 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 4 = 0 (left: 0 3) -> 3 * 3 = 9 (left:"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 1.43 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (7 - 10) = 24"
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 11 - 7 = 4 (left: 4 11 13) -> 11 + 4 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "8 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 11 - 7 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 * 10 = 70 (left: 12 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 11 - 7 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "-2 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13) -> -2 / 13 \u2248 -0.154 (left: -0.154)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "9 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 10 6) -> 10 - 1 = 9 (left: 9 6) -> 9 * 6 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "7 * 1 = 7 (left: 7 10 13) -> 10 - 7 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (1 + 7) - 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 - 7 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 3 * 1 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13) -> Input: 5 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (1 + 7) - 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 1.3"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 / 10 = 1.3 (left: 8 1.3) -> 8 + 1.3 = 9.3 (left: 9.3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 1 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 10 6) -> 1 * 10 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 10 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 * 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 / 10 = 1.3 (left: 8 1.3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 10 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "8 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 7 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 10 6) -> 10 - 1 = 9 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 - 7 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 / 10 = 0.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 10 6) -> 1 * 10 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (1 + 7) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 8 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (9 - (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 / 1 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (9 - 1) * (13 - 10) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (9 - 1) * 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 9 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 - 8 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (9 - (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (left: 0.8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 - 8 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (9 - (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 3"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 9 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 / 1 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "9 10 13"
                }
            },
            "Step 2": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 / 9 = 1.444... (left: 1.444... ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 + 8 = 21 (left: 10 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "9 10 13"
                }
            },
            "Step 3": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 - 10 = 3 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 9 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 3"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 9 - 4 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5 20"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 4 + 9 = 13 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 66 - 4 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 20 100)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "5 20"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5 20"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.1818181818181817 (left: 2.18 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 24"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 4 = 7 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "1 5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3 24"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 / 4 = 2.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18 (left: 2.18 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 4 + 20 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 5 + 9 = 14 (left: 14 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 * 11 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 15 - 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 9 - 4 = 5 (left: 5 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.18 (left: 2.18 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 - 27 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "24 11"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 66 / 4 = 16.5 (left: 16.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 9 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 + 4 = 15 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 + 3 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "12.2",
                    "Pruned state": "1 5"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 + 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3 24"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 66 / 4 = 16.5 (left: 16.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 4 / 9 = 0.444 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 - 20 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 4 + 66 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 66"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66) -> 66 / 4 = 16.5 (left: 16.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 9 11"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 4 9 11) -> 11 - 9 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 20"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "5 20"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 * 11 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 4 9 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 + 4 = 15 (left:"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 + 4 = 15 (left: -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 24"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "3 27"
                }
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 1"
                }
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 - 7 = 0 (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 + 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 1"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1) -> 10 + 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 + 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 2 5 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 - 7 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1) -> 10 + 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 / 2 = 17.5 (left: 17.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 / 7 = 0.71 (left: 0.71 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 + 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1) -> 10 + 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 + 7 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 - 7 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> Input: 1 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 2 5 1)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 / 35 = 0.057 (left: 0.057)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 - 2 = 33 (left: 2 33)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "2 5 1"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 + 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 3.5 = 10.5 (left: 3.5 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 - 10 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 1"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1) -> 1 / 10 = 0.1 (left: 0.1)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 7 = 0 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 3.5 = 10.5 (left: 7 10.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 / 2 = 17.5 (left: 17.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 * 5 = 10 (left: 10 1) -> 10 + 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 2 5 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 2 + 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 / 14 = 0.7142857143 (left: 0.7142857143)"
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "9 10 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 50"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 50 - 4 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 50"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 50"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 50 - 4 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "There are no possible next steps with only one number (36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 3"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is not a combination of numbers that can be manipulated using basic arithmetic operations with the numbers 2, 8, 8, and 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 3"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 / 3 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "3 0"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 - 12 = 0 (left: 3 0) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 50"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 50 / 4 = 12.5 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "36"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 3"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> The input is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> No next steps possible with a single value of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps for this number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 50"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 50 / 4 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 10 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 3"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 3"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 50"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 27",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 6 * 6 = 36 (left: 6)",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 50"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 50 - 4 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 + 12 = 22 (left: 22 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 3"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 50"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 5 * 10 = 50 (left: 4 50) -> 4 * 50 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "3 + 0 = 3"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "3 0"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 - 12 = 0 (left: 3 0) -> 3 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps with only one number (36).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No calculations can be made with just one number.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 + 12 = 22 (left: 22 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 is already a single number, no further steps can be taken.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> None - 36 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 10 13 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 - 12 = 0 (left: 3 0)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "3 0"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 - 12 = 0 (left: 3 0) -> 3 + 0 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> Input: 6 2 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 * 4 = 20 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0.6667 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 / 6 = 0.6667 (left: 0.6667 7) -> 0.6667 + 7 = 7.6667 (left: 7.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 3) * (2 + 4) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 7 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 / 6 = 0.6667 (left: 0.6667 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.5 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 3) * (2 + 4) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 * 7 = 21 (left: 1 21)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 2 + 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 3) * (2 + 4) = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 3 5 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 4 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "3 + 2 = 5 (left: 4 5  -> 7 / 3 = 2.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 + 2 = 5 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 * 4 = 20 (left:"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 * 4 = 20 (left: -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + (7 - 3)) * 4 = 24"
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666) -> 16 / 0.6666666666666666 = 24 (left: 24) -> Answer: (4 * 4) / (8 / 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 4) * (8 / 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 16 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 12) -> 4 * 4 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "16 0.6666666666666666"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666) -> 16 * 0.6666666666666666 = 10.666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "8 12 20"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 12 20) -> 20 - 12 = 8 (left: 8 20)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 4) * (8 / 12) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 12 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "96 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666) -> 16 / 0.6666666666666666 = 24 (left: 24) -> Answer: (4 * 4) / (8 / 12) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4 12) -> 4 + 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 4) * (8 / 12) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "96 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 / 16 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 4) * (8 / 12) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 12) -> 4 + 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666) -> 16 / 0.6666666666666666 = 24 (left: 24) -> Answer: (4 * 4) / (8 / 12) = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "112"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112) -> 1 + 1 + 2 = 4 (left:"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 12 / (4 / 8) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "16 0.6666666666666666"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 / 12 = 0.6666666666666666 (left: 16 0.6666666666666666) -> 16 / 0.6666666666666666 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 * 8 = 32 (left: 4 32 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24"
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 1 4 10) -> Input: 3 6 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 6 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 - 2 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 - 2 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 + 16 = 18 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 1 4  -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 + 31 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 / 8 = 0.125 (left: 0.125 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 / 2 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 - 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> No possible next steps as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 * 1 = 9 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 6 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 + 31 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 31 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 6 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 / 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 5 - 3 = 2 (left: 2 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There is only one possible next step: 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 1 * 2 = 2 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 / 2 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 - 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> None possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> No possible next steps, the input is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "No possible next steps, the input is the final result."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "3 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 6 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "1 31"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "14.0",
                    "Pruned state": "1 2 16"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 - 1 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 / 2 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps since there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 / 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 6 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: -> 16 + 2 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 - 1 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 1 4 10) -> 4 - 1 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 * 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1 2 4"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 * 2 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 2 * 16 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 1 * 12 = 12 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) / (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "12 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 / 1 = 12 (left"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "12 / 1 = 12 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 1 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) - (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 * 5) + 12) + 12 = 24",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2.4 (left: 1 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 - 1 = 11 (left: 11",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 12 = 0 (left: 0) -> No further steps can be taken as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 5 * 11 = 55 (left: 55 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 1 = 5 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 * 7 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 4": {
                "Step": "5 * 1 = 5 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 7": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 12 * 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "24 1"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24 1"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 - 1 = 23 (left: 1 23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 * 12 = 144 (left: 12 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) - (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 8": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 12 / 1 = 12 (left: 1 12)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24 1"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24 1"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 / 1 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 / 1 = 12 (left"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((5 * 12) / 1) + 12 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "12 / 1 = 12 (left"
                }
            },
            "Step 7": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) / (12 / 1) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "60 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24 1"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "12 12"
                }
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 5 / 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 25 * 5 = 125 (left: 125 125)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "24 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 + 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 + 2 = 50",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 5 / 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "24 8"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 * 8 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "48 48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 * 1 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 5 12 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 5 1 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 5 1 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "24 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 5 1 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 * 6 = 180 (left: 180 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 8 / 6 = 1.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 5 1 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 1 / 8 = 0.125 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 48 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33333 (left: 11 1.33333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 5 - 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 8 - 16 = -8 (left: -8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "-8 8"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 5 - 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 * 1 = 48 (left: 48 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "48 48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 * 1 = 48 (left: 48 48) -> 48 - 48 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 48 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 30 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 * 8 = 48 (left: 1 48) -> 48 / 1 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (7 - 11 + 7) * 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 3 2.67)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 8 "
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 8  -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Input: 5 10"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 / 7 = 0.57 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 / 8 = 0.375 (left: 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 5 + 20 = 25 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 - 7 = 0 (left: 0 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 / 4 = 1.75 (left: 1.75 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 11 - 8 = 3 (left: 3 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 * 3 = 24 (left: 24)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 7 3 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Input: 5 9"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 - 7 = 0 (left: 0 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 4 - 8 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (7 - (11 - 7)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.67 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 4 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 * 7 = 28 (left: 10 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.0",
                    "Pruned state": "1 4 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "4 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0.44 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 9 - 0.44 = 8.56 (left: 8.56)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 - 1 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 7 / 3 = 2.33 (left: 2.33",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 9 - 0.44 = 8.56 (left: 8.56 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 3 * 7 = 21 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 * 7 = 28 (left: 10 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "12.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10) -> 10 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 5 15)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 1 21 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 - 10 = -6 (left: -6 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 3 "
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 3  -> 6 * 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5 5)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 / 4 = 2.5 (left: 2.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 4 = 2.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 - 1 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 0.44 + 9 = 9.44 (left: 9.44)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 - 4 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.3333 (left: 0.3333 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 - 4 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 0.44 + 9 = 9.44 (left: 9.44)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 0.44 + 9 = 9.44 (left: 9.44)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.44 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 / 9 = 0.44 (left: 0.44 9) -> 0.44 * 9 = 3.96 (left: 3.96)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 * 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "10 - 5 = 5"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 + 3 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 + 1 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 4 + 10 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 - 5 = 5 (left: 5 5)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 3 7 10) -> 3 * 7 = 21 (left: 21 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 20 + 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 5"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5) -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * 9) + (12 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 + 3 = 15 (left: 15 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * (12 / 3)) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (3 * 9) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "3 12 27"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (3 * 9) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * 4) + (9 + 12) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (12 / 3) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 12) = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 12 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 12 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + 12 = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12) -> 12 / 9 = 1.33333 (left: 1.33333 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 9 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 4) = 24",
                "Pruning": {
                    "Idx": "13.0",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "12 36"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> Input: 48 24 3 0.3333 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (12 / 3) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 + (12 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 12) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 12) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "12 36"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 / 36 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 + (12 * 3)) = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 3 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 24"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 3 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 - 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 4) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 12) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * 4) + (9 + 12) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 4) + 3) + 12 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "12 24"
                }
            },
            "Step 6": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 3 = 24 (left: 12 24) -> 12 - 24 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 / 3) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * (12 / 3)) + 9 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 * 3) + (3 * 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.14 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 8 / 1.14 = 7.02 (left: 7.02 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 8 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "5 10 "
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 5 10  -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 5 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "5 - 7 = -2 (left: 3 -2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "5 10 "
                }
            },
            "Step 2": {
                "Step": "7 + 3 = 10 (left: 5 10  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 7 + 5 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) * 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 + 7 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 48"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 35 + 3 = 38 (left: 3 10 38) -> 10 + 38 = 48 (left: 3 48) -> 48 / 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "4 5 10"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 -2 10"
                }
            },
            "Step 2": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 / -2 = -1.5 (left: -1.5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 5 7 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 5 17"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 5 * 3 = 15 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 5 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 5 * 3 = 15 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) * 10 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 + 10) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) + 10 = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 5 17"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) + 10 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 3 5 17)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 5 17"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((3 + 5) - 7) * 10 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there is only one number given."
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 10 35"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 35 + 3 = 38 (left: 3 10 38)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 48"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 35 + 3 = 38 (left: 3 10 38) -> 10 + 38 = 48 (left: 3 48) -> 48 / 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "3 48"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 35 + 3 = 38 (left: 3 10 38) -> 10 + 38 = 48 (left: 3 48) -> 48 - 3 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 7)) - 10 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 3 7 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 - 10 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 7) * (3 + 5) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 7 + 5 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 35)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 3 = 10 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "3 10 38"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 35 + 3 = 38 (left: 3 10 38) -> 10 + 38 = 48 (left: 3 48)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 3 5 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 7 5"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 7 + 5 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "5 10 "
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 5 10  -> 5 * 10 = 50 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 7 + 5 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 - 5 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps."
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 10 - 8 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 22 13"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 22 13) -> 13 + 4 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "12 40 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (13 - 10) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 40 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 12 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (10 - 13) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 22 13"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 22 13) -> 22 / 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 - 3 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (13 - 10) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (left: 0.8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (10 - 13) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 13 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (13 - 10) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 / 4 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (10 - 13) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 22 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 4 - 7 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (13 - 10) * (12 - 4) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 13 16"
                }
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 + 13 = 23 (left: 16 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 / 4 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 / 4 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (12 - 4) * (13 - 10) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 40 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 4 22 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 13 16"
                }
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 16 / 10 = 1.6 ("
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 13 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 4 + 12 = 16 (left: 16 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 - 4 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)"
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * 10) * 12 = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 48."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 22"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There are no possible next steps for the number 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "There are no possible next steps with 48 as the input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 12 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "60 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There are no possible next steps with the input of 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 6) = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 3 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 48."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 3 * 12 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "60 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * (10 / 6)) * 12 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "There are no possible next steps with 48 as the input."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 12 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "60 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 + 2.6666666666666665 = 14.666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * 10) + 12 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 5": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 6) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((3 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * 10) * 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps for the number 48."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * 10) + 12 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 48."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 / 6 = 1.67 (left: 1.67 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 12 = 0 (left: 3 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There are no possible next steps with the input of 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (3 * 10 - 12) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 6) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((3 * 2) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps with the input of 48."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 3 - 8 = -5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.6666666666666665 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "There are no possible next steps with 48 as the input."
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There are no possible next steps with 48 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((3 * 2) / 12) * 10 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 48."
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 3 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "8 3 12"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.6666666666666665 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) * 10) / 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps for the number 48."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((3 * 2) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps for the number 48."
                }
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "30 6"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 30 / 6 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is already a single number and cannot be combined further with the initial numbers provided."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 10 6"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 + 10 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 4) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no initial input given."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: ((3 * 4) + 6) + 6 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "30 6"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> Input: 1 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "6 18"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 10 6"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> Input: 3 5 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: ((3 * 4) + 6) + 6 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 10 6"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 4) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "13.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: ((3 * 4) + 6) + 6 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 5 - 10 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "30 6"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 - 30 = -24 (left: -24 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36/2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "6 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "4 5"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: ((3 * 4) + 6) + 6 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> Input: 1 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> There are no possible next steps because there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 6 * 6 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 4) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "6 18"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 9 * 4 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 12 = 72 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 6) -> 3 * 10 = 30 (left: 30 6) -> 6 + 30 = 36 (left: 36) -> 36 / 2 = 18"
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> Input: 3 9 1 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (8 * 5) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "64 40"
                }
            },
            "Step 7": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 1": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> Input: 8 40 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "0.625 8 8"
                }
            },
            "Step 3": {
                "Step": "5 / 8 = 0.625 (left: 0.625 8 8) -> 8 / 0.625 = 12.8 (left: 12.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "64 40"
                }
            },
            "Step 7": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((8 * 5) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "64 40"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 8 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 1": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (8 * 5) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 + 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "16 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40) -> 40 / 16 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "64 40"
                }
            },
            "Step 7": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 1": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "64 40"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 + 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (8 * 5) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 8 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 8 = 0.625 (left: 0.625 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "64 40"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 8 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) * ((8 * 8) - 40) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 8 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "64 40"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (8 * 5) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "14.1",
                    "Pruned state": "8 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 + 3 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((8 * 5) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 8 / 8 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 40 64)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 5": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "16 40"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: ((5 * 8) - 8) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.33 8 12"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((12 - 6) * (8 - 6)) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "48 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1.33 8 12"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 1.33 * 8 = 10.64 (left: 10.64 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "48 48"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (8 - (12 - 6)) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "48 96"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 48 8 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 * 6 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "48 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "48 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 14 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "48 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "48 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 48 8 12) -> 12 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "48 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "48 8 12"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 48 8 12) -> 48 * 8 = 384 (left: 384 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "48 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33333 (left: 1.33333 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 12 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "48 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 - 48 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48 96"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 48 96) -> 96 / 48 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "48 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - (12 - 6)) * 8 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "48 48"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "48 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 48 8 12) -> 8 + 12 = 20 (left: 48 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "48 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "48 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "48 48"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 6) * (6 + 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 48 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24.03"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "2 3 "
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 3  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left:  -> It appears that you did not provide any input. If you would like to continue the sequence, please provide the numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24.03"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "11.1",
                    "Pruned state": "3 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 * 12 = 60 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 2 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 2 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67 8) -> 15 + 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24.03"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 5 = 0 (left: 0)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left:  -> It seems like there was no input provided. Can you please provide the numbers you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps with the given input of 24.03."
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 \u2248 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left:  -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 6 = 3 (left: 2 3 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 6 7 9) -> 7 + 9 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 6 - 4 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 16 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 6 + 16 = 22 (left: 22 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 12 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 + 2 = 8 (left: 2 8 18) -> 2 + 8 = 10 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18 / 6 = 3 (left:"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 + 2 = 8 (left: 2 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 6 7 9) -> 9 / 3 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 16 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 6 * 16 = 96 (left: 96 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "18 / 6 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: -> No possible next steps as the equation is already simplified.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just the number 11."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 16 18"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18 / 6 = 3 (left:"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: -> 18 + 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "18 / 6 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: -> 18 * 6 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "18 / 6 = 3 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 7 - 8 = -1 (left: -1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "2 12 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12 18) -> 2 * 12 = 24 (left: 24 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "18 / 6 = 3 (left:"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "18 / 6 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left: -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "2 12 18"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12 18) -> 2 + 12 = 14 (left: 14 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) ",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 7 + 8 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 11"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 11 42)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 16 18"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 - 16 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 + 7 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 16 18"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 2 = 16 (left: 6 16 18) -> 18 / 6 = 3 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 * 6 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "No possible next steps as the equation is already simplified."
                }
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((5 - 9) * 12) + 12 = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.4 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 12 + 2.4 = 14.4 (left: 12 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 28.8"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 12 + 28.8 = 40.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (4 * (9 - 5)) - 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 12 - 2.4 = 9.6 (left: 9.6 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "16 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "168 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 12 168)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 + 14 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.16667 (left: 1.16667 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 8 * 16 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 9 12 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3.75 (left: 3.75 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 5 = 2.4 (left: 2.4 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 28.8"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28.8 / 12 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "13.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "16 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "10.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 + 12 = 14.4 (left: 12 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "168 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "10.0",
                    "Pruned state": "4 9 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 28.8"
                }
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 2.4 12 12) -> 2.4 * 12 = 28.8 (left: 12 28.8) -> 28 - 12 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "16 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((9 - 5) * 12) - 12 = 24",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (9 - 5) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 9 "
                }
            },
            "Step 6": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 + 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 / 6 = 0.16667 (left: 0.16667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 2 19"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 19 / 2 = 9.5 (left: 1 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 1 - 10 = -9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 5 / 1 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 7": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "Possible"
                }
            },
            "Step 8": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operation you would like to perform?",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 5": {
                "Step": "7 + 2 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 5": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 9 "
                }
            },
            "Step 6": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 - 7 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "57"
                }
            },
            "Step 8": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19) -> 3 * 19 = 57 (left: 57) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 2 19"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 1 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "3 19"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19) -> 3 * 19 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 7": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "1 + 7 = 8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 -> 1 - 7 = -6 (left: -6)",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 5": {
                "Step": "2 - 1 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 6 - 4 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 1 10 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "0.9"
                }
            },
            "Step 8": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9) -> 0.9 * 0.9 = 0.81",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 2 19"
                }
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 6": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "1 + 7 = 8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 -> 7 / 1 = 7 (left: 7 7 8)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 19"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "1 10 "
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 1 10  -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 - 3 = 6 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 / 14 = 0.714 (left: 0.714)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 7 9\nSteps:\n3 * 9 = 27 (left: 3 7 27)\n7 - 3 = 4 (left: 4 27)\n27 - 4 = 23 (left: 23)\nAnswer: (3 * 9) - (7 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (5 + 2)) = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 + 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\nAnswer: (3 * 3) * (3 + 3) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) / 8 * 24 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 6) + (5 + 7)) - 6 = 24",
                "Pruning": {
                    "Idx": "14.0",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n21 - 5 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 9 - 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 9 - 3 = 6 (left: -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "7 10"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "10.0",
                    "Pruned state": "2 5 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 * 4) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * 5) * (6 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "7 10"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 9 - 3 = 6 (left: -> 3 - 3 = 0 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 4 7\nSteps:\n4 + 3 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 21 7)\n21 + 7 = 28 (left: 28)\nAnswer: ((3 + 3) + 4) * 7 = 28",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> Input: 2 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: (3 + 7) * (4 - 3) + 10 = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 4 = 24 (left: 24)\nAnswer: ((3 * 7) + 4) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2)\n2 * ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((4 * 5) - 6 + 3) + 7 = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 - 3 = 6 (left:"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n18 - 15 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 + 3 = 8.33 (left: 8.33)\n8.33 * 3 = 24.99 (left: 24.99)\n",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.5 7"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 5 8\nSteps:\n3 * 3 = 9 (left: 5 8 9)\n5 + 9 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 3) + 5) + (8 + 14) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * 5) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * (6 * 8)) / 6 * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 5 7 9\nSteps:\n5 - 3 = 2 (left: 2 7 9)\n7 - 2 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 - 21 = 24 (left: 24)\nAnswer: ((5 - 3) * (7 - 2)) - 21 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 5 6 7\nSteps:\n6 * 3 = 18 (left: 5 7 18)\n7 - 5 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((6 * 3) / (7 - 5)) *",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10 240"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 4 6 8\nSteps:\n4 * 6 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * 5) * (4 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n5 + 7 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (6 - 3) * (5 + 7) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> Input: 3 9 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 9) - 8) * 3 * 2 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Overall, there are multiple ways to obtain the number 24 using the given numbers and basic arithmetic operations. It just requires some creativity and thinking outside the box to find the solution.",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 4) + 5) * 3 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 240"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240) -> 240 - 10 = 230 (left: 230)",
                "Pruning": {
                    "Idx": "14.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> Input: 3 9 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 3 = 18 (left: 4 18)\n18 / 4 = 4.5\n4.5 * 3 = 13.5\nAnswer: ((3 * 7) - 3) * 4.5 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\nAnswer: (5 + 7) * (6 * 3) = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 14 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) + (7 + 14)) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 10 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + 5 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (5 + 2) * 4 * 6 = 24 -> Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 3 = 12 (left: 6 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 5) - 3 * 2 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 6 7) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (5 + 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24) -> Answer: (2 * 5) * (6 + 4) = 24 -> Input: 3 3 6 7\nSteps:\n6 - 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 9 7)\n9 + 7 = 16 (left: 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 3) + 7) + (5 +",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 40 / 8 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "8 25 13"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 25 13) -> 25 / 8 = 3.125 (left: 3.125 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "40 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8) -> 40 / 5 = 8 (left: 40 8) -> 40 * 8 = 320 (left: 8 320)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "40 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 40 8) -> 40 - 8 = 32 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 13 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "8 * 5 = 40 (left: 40 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 - 3 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (5 - 8) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 25 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8) -> 40 - 8 = 32 (left: 8 "
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 25 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "40 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 40 8) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 40 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8) -> 40 / 5 = 8 (left: 40 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "8 13"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "40 8 13"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 40 8 13) -> 13 + 8 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "40 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8) -> 40 / 5 = 8 (left: 40 8) -> Possible next steps:"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 8 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 40 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 13 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 25 - 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 40 / 8 = 5 (left: 8 5 8)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 + 13 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 - 8 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> Input: 2 5 7 9"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 5 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 / 40 = 0.2 (left: 0.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 10 - 5 = 5 (left:"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 40 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 40 / 5 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "40 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40 8) -> 8 * 5 = 40 (left: 8 40 8) -> 40 / 5 = 8 (left: 40 8) -> 40 * 8 = 320 (left: 8 320)"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)"
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 * 2 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 10 - 3 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 10 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 3 + 8 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 - 4 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 * 128 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "4 128"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32 128)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 - 2 = 1 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 * 6 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 128"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "18"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 3 "
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 3  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "4 128"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 128"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 3 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 8 - 3 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 - 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 128"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 10 - 3 = 7 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "4 128"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "4 128"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 * 128 = 512 (left: 128 512)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "3 - 2 = 1 (left: 1 3 10) -> Input: 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 10 - 3 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "18"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 - 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No possible next steps as there are no more numbers left to operate on.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 128"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "4 128"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 * 4 = 16 (left: 16 128)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 * 128 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 3 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 / 3 = 2.67 (left: 2.67 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible next step: 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.4",
                    "Resampled state": "4 128"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "18"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 * 128 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 128"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 3 * 5 = 15 (left: 15 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 / 3 = 2.67 (left: 2.67 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 - 3 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 / 128 = 0.03125 (left: 0.03125)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 3 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None, as there are no more numbers to use for calculations.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "10 18"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 8 - 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None, since there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 3 4 7 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 10 - 3 = 7 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 128"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "11.4",
                    "Pruned state": "4 128"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 + 4 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 128)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 5 * 3 = 15 (left: 15 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 4 + 128 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 + 4 = 132 (left: 4 132)",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 3 "
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 3  -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 128"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 128"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 / 3 = 1.333 (left: 1.333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there are no numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 2.99 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "7 / 5 = 1.4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) ",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> Input: 5 10 15",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "12.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "7 / 5 = 1.4"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 12 - 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 5 + 5 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 3 12  -> Input: 4 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 7 / 5 = 1.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "10.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 9 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 15 - ",
                "Pruning": null
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 8 + 6 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 - 0 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 12 11"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 / 4 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "4 4 11"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 2 24 11) -> 24 - 2 = 22 (left: 22 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 * 0 = 0 (left: 11) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 - 24 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 - 0 = 11 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 2 * 24 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 - 24 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 27 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 / 24 = 0.5416666666666666 (left: 0.5416666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 2 24 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 24 / 2 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 24 - 2 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 6 * 11 = 66 (left: 8 66)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 36 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 - 11 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There is only one possible next step: 11 + 2 = 13 (left: 11 13)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 12 11"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 4 + 11 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 2 24 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 * 24 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 / 0 = undefined (division by zero is undefined)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 0 + 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 2 24 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 * 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 / 24 = 0.5417 (left: 0.5417)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 10 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 + 10 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 0 + 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1 + 11 = 12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 -> Input: 3",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 4 11) -> 4 / 4 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "102"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 11 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 102 - 2 = 100 (left: 100)",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 2 24 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 4 11) -> 4 / 4 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 12 11"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 4 + 12 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 * 0 = 0 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 2 * 11 = 22 (left: 22 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 6 + 11 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "2 24 11"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 24 - 11 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 8 9)",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "4 4 11"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 4 11) -> 4 / 4 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 11 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "6 17"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 11 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 11 * 0 = 0 (left: 11) -> None. The input is not compatible with any of the previous steps.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 2 24 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 6 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 6 - 11 = -5 (left: -5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 11) -> 11 + 2 = 13 (left: 13 24) -> 13 / 24 = 0.5416666666666666 (left: 0.5416666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 / 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 1"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "4 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 1"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.0",
                    "Pruned state": "0."
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 1"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 1 + 16 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 8 + 9 = 17 (left: 17 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 24 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "8 9 8"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 9 / 8 = 1.125 (left: 1.125 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "4 1"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "1.125 8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "4 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "4 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 8 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 7"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 16 - 1 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "11.7",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 9 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 1 / 4 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "4 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "0."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with an input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 16 - 1 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 4)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 1"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "16 1"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 - 8 = 1 (left: 16 1) -> 16 * 1 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 1"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "11.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 8 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0."
                }
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers given after the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "12.7",
                    "Pruned state": "3 1"
                }
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 5": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 5 + 7 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "1.16666666667 5.14285714286"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 / 6.30952380953 = 0.81481481481 (left: 0.81481481481)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 5": {
                "Step": "5 * 1 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 / 0 = undefined (cannot divide by 0)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 7"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 11 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> None - since there is only one number in the input, there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 * 6.30952380953 = 32.380952",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 / 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps for the number 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 3 + 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 + 6.30952380953 = 11.45238095239 (left: 11.45238095239)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "1 30 7"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 1 30 7) -> 1 * 30 = 30 (left: 30 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1.16666666667 5.14285714286"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 5.14285714286 - 1.16666666667 = 3.97619047619 (left: 3.97619047619)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 * 6.30952380953 = 32.38095238092 (left: 32.38095238092)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1.16666666667 5.14285714286"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 / 0 = undefined (left: 7)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> Input: 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 0 * 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 10 - 3 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 3 + 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 + 6.30952380953 = 11.45238095239 (left: 11.45238095239)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 0 - 7 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 1.16666666667"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 5.14285714286 - 6.30952380953 = -1.16666666667 (left: -1.16666666667)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 / 0 = undefined ",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 36 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 3 + 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 1.16666666667"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 3 + 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 5 + 7 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1.16666666667 5.14285714286"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 * 5.14285714286 = 6 (left: 5.142857142",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "0 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.14285714286 6.30952380953"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 1.16666666667 + 5.14285714286 = 6.30952380953 (left: 5.14285714286 6.30952380953) -> 6.30952380953 + 5.14285714286 = 11.452380",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> Input: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 1 30 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "1.16666666667 5.14285714286"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 6 1.16666666667) -> 6 / 1.16666666667 \u2248 5.14285714286 (left: 1.16666666667 5.14285714286) -> 5",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5.14285714286 6.30952380953"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "5.14285714286 6.30952380953"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 7 = 42 (left: 6 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 7"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 0 7) -> 7 / 0 = undefined",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "1.1 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 / 10 = 1.1 (left: 1.1 40) -> 1.1 + 40 = 41.1 (left: 41.1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 13 / 11 = 1.1818 (left: 1.1818)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 / 8 = 0.75 (left: 0.75 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 8 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 5 8 21) -> 21 - 8 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: 5 10 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "13 - 11 = 2 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: -> 5 * 3 = 15 (left: 15 * 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 + 10 = 18 (left: 5 11 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "1.1 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 / 10 = 1.1 (left: 1.1 40) -> 1.1 * 40 = 44 (left: 40 44)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1.6 10 11"
                }
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 / 1.6 = 6.25 (left: 6.25 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 * 10 = 80 (left: 5 11 80)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 / 2 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.333 10"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.333 (left: 1.333 10) -> 1.333 * 10 = 13.33 (left: 13.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 8 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 5 8 21) -> 21 / 5 = 4.2 (left: 8 4.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "13 - 11 = 2 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: -> 11 / 13 = 0.846153846154 (left: 0.846153846154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "5 11 18"
                }
            },
            "Step 4": {
                "Step": "8 + 10 = 18 (left: 5 11 18) -> 18 - 5 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 143"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 / 143 = 0.069930 (left: 0.069930)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 10"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((8 - 5) + 10) + 11 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.333 (left: 1.333 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5) + (10 + 11) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 11 = 29 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0.75 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 / 8 = 0.75 (left: 0.75 10) -> 10 / 0.75 = 13.33 (left: 13.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "1.6 10 11"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 1.6 + 10 = 11.6 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.2",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 / 10 = 1.1 (left: 1.1 40)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 8 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 5 8 21) -> 5 * 8 = 40 (left: 40 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 + 10 = 18 (left: 5 11 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 5 11 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 * 10 = 30 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5) + (10 + 11) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5) + (10 + 11) = 24"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 3"
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 5 10 3) -> 10 / 5 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 143"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> Input: 5 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 - 5 + 10) + 11 = 24"
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 6 / 3 = 2 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 + 20 = 24 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9 - 12) * 4 = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "20 4"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4) -> 20 * 4 = 80 (left: 4 80)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 80"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5  -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left: -> 4 / 12 = 0.3333 (left: 0.3333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "3 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There is only one number given (0.75), so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20 4"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4) -> 20 * 4 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 80"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 80"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "3 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 - 4 = 8 (left: 36 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5  -> Input: 10 2 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: ((4 * 9) - 12) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "20 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9 - 12) * 4 = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "4 24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9 - 12) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 / 9 = 3.5555555555555554 (left: 3.5555555555555554)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 + 20 = 24 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 4 = 40 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "4 24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 80"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24 / 4 = 6 (left"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "20 4"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4) -> 20 / 4 = 5 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> Input: 5 25 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9 - 12) * 4 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left: -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "4 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "36 * 4 = 144 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 80"
                }
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left:",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24 / 4 = 6 (left"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "4 24"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 / 4 = 3 (left: -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There are no possible next steps for the input 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24 / 4 = 6 (left"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 / 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "20 4"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4) -> 20 + 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20 4"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left -> 24 - 4 = 20 (left: 20 4) -> 20 - 4 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "4 24"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "4 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 4"
                }
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "14.1",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "6 18"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 6 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "36 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 5 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "13.1",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 6 = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "36 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 6 6  -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": {
                    "Idx": "14.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 6 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "10.1",
                    "Pruned state": "36 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 * 6) - 12 = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 5 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "6 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "13.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "11.6",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.1",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "12.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + 6 * 2) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 18"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 / 2)) * 5 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 + (6 * 2)) + 5 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: ((6 / 2) * 6) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * (4 + (12 - 9)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 * 2 = 6 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left:"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "12.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 5 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4)"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 5 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "14.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> Possible next steps:"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "12.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) * ((13 - 2) + 12) = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 / 11 = 1.09090909091 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - (13 - 11))) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "13.3",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 * 4 = 32 (left: 11 13 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "12 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 8) + (11 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) * (13 - 2) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 4 = 32 (left: 11 13 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 + 11 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "11.3",
                    "Pruned state": "12 11 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "14.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 12 11 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "12.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 8) + (11 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8 15 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "10.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) * (13 - 2) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 + (13 - (13 - 11)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 11 * 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 15 13"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 8 15 13) -> 8 * 15 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + 2) + 11 = 24",
                "Pruning": {
                    "Idx": "10.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + 2) + 13 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 8 15 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "14.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - (13 - 11))) = 24",
                "Pruning": {
                    "Idx": "10.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "10.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * 2) + 13 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "14.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "13.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 + 11 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "12 11 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "13.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "12.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + 2) + 11 + 13 = 24",
                "Pruning": {
                    "Idx": "12.6",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "14.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 + (13 - (13 - 11)) = 24",
                "Pruning": {
                    "Idx": "14.3",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - (13 - 2))) = 24",
                "Pruning": {
                    "Idx": "11.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - (13 - 11)) = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "10.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 12 11 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) * (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "10.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "13.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "12.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (13 - 11) + (13 - 2) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 11) + (13 - 2)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7.5 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 * 13 = 97.5 (left: 97.5)",
                "Pruning": {
                    "Idx": "12.1",
                    "Pruned state": "9 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "10.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 9 13) -> 1.5 * 9 = 13.5 (left: 13.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 * 4 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 / 10 = 0.1 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input: 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "13.0",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 + 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2.25 10 "
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10  -> 2.25 + 10 = 12.25 (left: 10 12.25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "13.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 10": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "10 12.25"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10  -> 2.25 + 10 = 12.25 (left: 10 12.25) -> 10 - 12.25 = -2.25 (left: -2.25 12.25)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 11": {
            "Step 0": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 9 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 12": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "11.1",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 2": {
                "Step": "10 - 9 = 1 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as the input value is already the final result.",
                "Pruning": null
            }
        },
        "Agent 13": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 9 = 1 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "11.2",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "11.3",
                    "Resampled state": "6 22"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 22 - 6 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 + 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 14": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "12.1",
                    "Resampled state": "9 10"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 / 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 8)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "11.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 3302849,
        "output_tokens": 1345072.8661838043,
        "total_cost": 3.6690337992757067
    }
}