{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 7 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54) -> 54 - 7 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "47"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54) -> 54 - 7 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54) -> 54 - 7 = 47 (left: 47) -> 47 + 2 = 49 -> 47 * 2 = 94 (left: 94 + 2 = 96)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 20 240)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> No next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> No next steps as there is only one number given. -> No valid operations can be performed with only one number given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "47"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54) -> 54 - 7 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 9 * 6 = 54 (left: 7 54) -> 54 - 7 = 47 (left: 47) -> 47 + 2 = 49 -> 47 * 2 = 94",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 110 + 54 = 164 (left: 164)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20.13 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> Possible next steps: -> There seems to be a duplication in the input. It appears that the numbers are already in a valid equation form.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 -> 21 / 9 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20.13 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> 90 / 20.13 = 4.46823734729 (left: 4.46823734729 20.13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> 90 / 20.13 = 4.46823734729 (left: 4.46823734729 20.13) -> 20.13 - 4.46823734729 = 15.6617626527 (left: 15.6617626527)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 - 10 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 - 10 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20.13 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> 20.13 + 90 = 110.13 (left: 110.13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "20.13 90"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 11 90) -> 1.83 * 11 = 20.13 (left: 20.13 90) -> 20.13 / 90 = 0.22366666666667 (left: 0.22366666666667)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 / 2 = 2 (left: 2 2 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 / 2 = 2 (left: 2 2 16) -> Input: 4 4 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 / 2 = 2 (left: 2 2 16) -> Input: 4 4 4 -> 4 + 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "96 - 6 = 90"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 * 16 = 96 -> 96 - 6 = 90 -> 96 * 6 = 576 (left: 576 90)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 * 16 = 96 -> 96 - 6 = 90 -> 96 * 6 = 576 (left: 576 90) -> 90 - 576 = -486 (left: -486)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 * 16 = 96",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 * 16 = 96 -> 96 - 6 = 90",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> 9 / 3 = 3 (left: 3 5 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 16"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 / 2 = 2 (left: 2 2 16) -> Input: 4 4 4 -> 4 + 4 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 / 2 = 2 (left: 2 2 16) -> Input: 4 4 4 -> 4 + 4 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 7.5 13"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 7.5 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 7.5 13"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13) -> 4 + ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 + 3 = 13 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 + 3 = 13 (left: -> 3 / 10 = 0.3 (left: 0.3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 7.5 13"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 7.5 - 2 = 5.5 (left: 5.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 7.5 - 2 = 5.5 (left: 5.5 13) -> 13 / 5.5 = 2.36363636364 (left: 2.36363636364)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 7.5 13"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 7.5 / 2 = 3.75 (left: 3.75 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 7.5 / 2 = 3.75 (left: 3.75 13) -> 3.75 * 13 = 48.75 (left: 48.75)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, as the result of 13 divided by 2 is already given as 6."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 7.5 13"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 13 / 2 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 13 / 2 = 6 -> None, as the result of 13 divided by 2 is already given as 6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, as the result of 13 divided by 2 is already given as 6."
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 * 5 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 * 5 =  -> -5 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 - 2 = -0.8 (left: -0.8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.2"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67) -> There are no possible next steps with the input 1.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There are no possible operations that can be performed with the input 1.2.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There are no possible operations that can be performed with the input 1.2. -> There are no possible operations that can be performed with the input 1.2.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 / 156 \u2248 0.122 (left: 0.122)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13  -> 13 - 7 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13  -> 13 - 7 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)  ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0) -> No operation can be performed with just one input value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 3 -> 3 * 3 = 9  -> 9 / 3 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 3"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 15) -> 12 + 15 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667) -> 6 - 1.66666666667 = 4.33333333333 (left: 4.33333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667) -> 6 - 1.66666666667 = 4.33333333333 (left: 4.33333333333) -> There seems to be an error in the input. Please provide a valid sequence of numbers for me to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.666666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.666666666666666 -> 1.666666666666666 * 2 = 3.333333333333332 (left: 3.333333333333332)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.666666666666666 -> 1.666666666666666 * 2 = 3.333333333333332 (left: 3.333333333333332) -> 3.333333333333332 is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There seems to be an error in the input. Please provide a valid sequence of numbers for me to continue."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 - 4 = 16 (left: 16 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 - 4 = 16 (left: 16 20) -> 16 + 20 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 20"
                }
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 =  -> 3 / 7 = 0.42857142857142855",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 * 2 = 20 -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 * 1 = 1 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 8 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left -> 1 / 1 = 1 (left: 1 1)",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 - 13 = -11.67 (left: -11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78) -> 78 / 7 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8) -> 8 - 0.75 = 7.25 (left: 7.25)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 10 10 13) -> 13 / 10 = 1.3 (left: 10 1.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 10 10 13) -> 13 / 10 = 1.3 (left: 10 1.3) -> 10 - 1.3 = 8.7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 - 1.3 = 8.7"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 10 10 13) -> 13 / 10 = 1.3 (left: 10 1.3) -> 10 - 1.3 = 8.7 -> 10 + 1.3 = 11.3 (left: 11.3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 - 1.3 = 8.7"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 10 10 13) -> 13 / 10 = 1.3 (left: 10 1.3) -> 10 - 1.3 = 8.7 -> 10 - 1.3 = 8.7 is already a completed equation and there are no more next steps to consider.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> 75 - 2 = 73 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 - 1.3 = 8.7"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 10 10 13) -> 13 / 10 = 1.3 (left: 10 1.3) -> 10 - 1.3 = 8.7 -> 8.7 + 1.3 = 10 (left: 10 8.7)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714) -> 2.85714285714 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.85714285714 / 2"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714) -> 2.85714285714 / 2 -> 2.85714285714 / 2 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "90 is a single number, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 is a single number, so there are no possible next steps. -> 90 is a single number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 1 + 4 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> There are no possible next steps for the input 2.85714.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 + 2 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 / 3.34 = 0.5988 (left: 0.5988)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 - 2 = 1.34 (left: 1.34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 / 2 = 1.67 (left: 1.67 3.34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5.5 9"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 5.5 / 9 = 0.6111 (left: 0.6111)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 5.5 / 9 = 0.6111 (left: 0.6111) -> There are no possible next steps for the input 0.6111.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 * 3.34 = 6.68 (left: 6.68)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5.5 9"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 9 - 5.5 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 9 - 5.5 = 3.5 (left: 3.5) -> 3.5 + 8 = 11.5 (left: 3.5 8 11.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 + 3.34 = 5.34 (left: 5.34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 - 2 = 1.34 (left: 1.34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5.5 9"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 5.5 / 9 = 0.611111 (left: 0.611111)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 9) -> 5.5 / 9 = 0.611111 (left: 0.611111) -> 0.611111 - 0.611111 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.67 3.34"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 5 + 16 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 5 + 16 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "104.4"
                }
            },
            "Step 7": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6) -> 9 * 11.6 = 104.4 (left: 104.4) -> 104.4 / 2 = 52.2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6) -> 9 * 11.6 = 104.4 (left: 104.4) -> 104.4 / 2 = 52.2 -> 104.4 + 2 = 106.4",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 9 35 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 35 / 9 = 3.88888888889 (left: 3.88888888889 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 35 / 9 = 3.88888888889 (left: 3.88888888889 13) -> 3.88888888889 / 13 = 0.299145299",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.88888888889 / 13 = 0.299145299"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 35 / 9 = 3.88888888889 (left: 3.88888888889 13) -> 3.88888888889 / 13 = 0.299145299 -> 3.88888888889 + 13 = 16.88888888889 (left: 16.88888888889)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "104.4"
                }
            },
            "Step 8": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6) -> 9 * 11.6 = 104.4 (left: 104.4) -> There are no possible next steps for the input 104.4 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 7 1.125)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 7 1.125) -> 7 / 1.125 = 6.222 (left: 6.222)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6) -> 9 * 11.6 = 104.4 (left: 104.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.88888888889 / 13 = 0.299145299"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 35 / 9 = 3.88888888889 (left: 3.88888888889 13) -> 3.88888888889 / 13 = 0.299145299 -> 3.88888888889 - 13 = -9.11111111111 (left: -9.11111111111)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "273"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 5 + 16 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273) -> 7 - 3 = 4 (left: 2 4)",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 12 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 + 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 100 = 1 (left: 1 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 100 = 1 (left: 1 100) -> 100 / 1 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 100"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18) -> 18 - 12 = 6 (left: 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 100"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "None - there is only one number given."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59) -> None - there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1.25"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25) -> There are no possible next steps with just the input of -1.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25) -> There are no possible next steps with just the input of -1.25. -> There are no possible next steps with just the input of -1.25.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 * 11 = 55 (left: 12 55)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 * 11 = 55 (left: 12 55) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 - 10 = 0 (left: 0 10) -> 10 / 0 = undefined",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "173"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56) -> 117 + 56 = 173 (left: 173) -> 17 + 3 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.125"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9) -> 9 / 8 = 1.125 (left: 1.125) -> There are no possible next steps for the input 1.125 as it is already a single number and not a combination of numbers to calculate.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.125"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 * 2 = 2.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 * 2 = 2.25 -> 2.25 + 1.125 = 3.375 (left: 1.125 3.375)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56) -> 117 + 56 = 173 (left: 173)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 7 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 7 = 10 (left: 10 13) -> 10 / 13 = 0.769230769 (left: 0.769230769)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 7 = 10 (left: 10 13) -> 10 / 13 = 0.769230769 (left: 0.769230769) -> 0.769230769 / 2 = 0.3846153845 (left: 0.3846153845)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19) -> There are no possible next steps with just one number given. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 12 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "26 / 2 = 13"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 / 2 = 13 -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "26 / 2 = 13"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "26 / 2 = 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 / 2 = 13 -> 26 - 13 = 13 (left: 13 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 / 2 = 13 -> 26 - 13 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169)  ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)  -> There are no possible next steps as there are no remaining numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no remaining numbers to operate on."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)  -> There are no possible next steps as there are no remaining numbers to operate on. -> There are no possible next steps as there are no remaining numbers to operate on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)  -> There are no possible next steps as there are no remaining numbers to operate on. -> There are no possible next steps as there are no remaining numbers to operate on. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 -> 12 + 7 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 20"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 - 3 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 26.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 26.67) -> There are no possible next steps for the input 26.67 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16 16) -> 16 + 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17) -> 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17) -> 4 -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16 -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 4.8."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8) -> -8 / 2 = -4 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.66666666667 12 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 - 1.66666666667 = 10.3333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333 -> 12 / 1.66666666667 = 7.19999999999",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333 -> 12 / 1.66666666667 = 7.19999999999 -> 12 * 1.66666666667 = 19.99999999999 (left: 19.99999999999 7.19999999999)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 10 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164) -> 1 + 6 + 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 4.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step for 240:"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240: -> 240 / 2 = 120",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240: -> 240 / 2 = 120 -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step for 240:"
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "450 * 2 = 900"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 + 2 = 452 (left: 452 * 2 = 904)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 + 2 = 452 (left: 452 * 2 = 904) -> 452 + 2 = 454 (left: 454 * 2 = 908)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 4 = 20 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 4 = 20 (left: -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 4 = 20 (left: -> 5 - 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 * 8 = 168 (left: 8 168)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 * 8 = 168 (left: 8 168) -> 8 + 168 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "450 * 2 = 900"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777 -> 2.777777777777777 + 2 = 4.777777777777777 (left: 2 4.777777777777777)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4"
                }
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 6  -> 6 - 5 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 11"
                }
            },
            "Step 8": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330) -> 3 * 30 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 11"
                }
            },
            "Step 8": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the number 17."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11) -> 1.67 + 11 = 12.67 (left: 12.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 -> 6 + 5 = 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 11"
                }
            },
            "Step 8": {
                "Step": "6 + 5 -> 6 + 5 = 11 -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the number 17."
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 1.125 * 15 = 16.875 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 1.125 * 15 = 16.875 (left: 15) -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 1.125 * 15 = 16.875 (left: 15) -> There are no possible next steps as there is only one number. -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 14 - 9 = 5 (left: 9 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 14 - 9 = 5 (left: 9 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. You would need at least two numbers to perform an operation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. You would need at least two numbers to perform an operation. -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number. -> Please provide at least two numbers to continue with the calculations. -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "11 + 6 = 17 (left: 8 9 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 6 = 17 (left: 8 9 17) -> 17 - 8 = 9 (left: 9 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 6 = 17 (left: 8 9 17) -> 17 - 8 = 9 (left: 9 17) -> 9 * 17 = 153 (left: 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.222"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 11 / 9 = 1.222 (left: 1.222) -> 1.222 - 1 = 0.222 (left: 0.222)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "153"
                }
            },
            "Step 8": {
                "Step": "11 + 6 = 17 (left: 8 9 17) -> 17 - 8 = 9 (left: 9 17) -> 9 * 17 = 153 (left: 153) -> 15 - 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8  -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There are no possible next steps with just the number 48 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 48 provided."
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There are no possible next steps with just the number 48 provided. -> 48 / 24 = 2 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There are no possible next steps with just the number 48 provided. -> 48 / 24 = 2 (left -> 24 / 48 = 0.5 (left: 0.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11) -> 11 / -2 = -5.5 (left: -5.5)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 11 / 9 = 1.222 (left: 1.222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.222"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 11 / 9 = 1.222 (left: 1.222) -> There are no possible next steps for the input 1.222 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 11 / 9 = 1.222 (left: 1.222) -> There are no possible next steps for the input 1.222 as it is already a single number. -> There are no possible next steps for the input 1.222 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 4 4 6 -> 4 + 4 = 8 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "23"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There is only one possible next step: 23 divided by 2 = 11.5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 / 1 = 3 (left: 3 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 + 23 = 46 (left: )",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 4 4 6 -> 4 + 4 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 1 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 4 4 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 4 4 6 -> 4 + 4 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11) -> 5 + 5 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 4 4 6 -> 4 + 4 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 13 - 11 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 13 - 11 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 13 - 11 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 =  -> 11 - 6 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 =  -> 11 - 6 = 5 -> 11 * 6 = 66 (left: 66 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "66 5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 =  -> 11 - 6 = 5 -> 11 * 6 = 66 (left: 66 5) -> 66 * 5 = 330 (left: 330)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number, so no next steps can be performed."
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> There is only one number, so no next steps can be performed. -> No further steps can be taken as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13) -> 29 - 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> There is only one number, so no next steps can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number, so no next steps can be performed."
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> There is only one number, so no next steps can be performed. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> There is only one number, so no next steps can be performed. -> There are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "66 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 40) -> 40 - 1.1818181818181819 = 38.81818181818182 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "66 5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 =  -> 11 - 6 = 5 -> 11 * 6 = 66 (left: 66 5) -> 66 - 5 = 61 (left: 61)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.1818181818181819"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 40) -> 40 - 1.1818181818181819 = 38.81818181818182 (left: 1.1818181818181819) -> 1.1818181818181819 + 2 = 3.181818181818182",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 3.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps for the input 3.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 18"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 + 6 = 7.75 (left: 7.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 + 6 = 7.75 (left: 7.75) -> 7.75 - 8 = -0.25 (left: -0.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10 20) -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 50 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 50 12) -> 50 + 12 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.71428571429"
                }
            },
            "Step 7": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 12 * 10 = 120 (left: 120 70) -> 120 / 70 = 1.71428571429 (left: 1.71428571429) -> 1.71428571429 / 2 = 0.85714285715",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 12 * 10 = 120 (left: 120 70) -> 120 / 70 = 1.71428571429 (left: 1.71428571429) -> 1.71428571429 / 2 = 0.85714285715 -> 1.71428571429 * 2 = 3.42857142858",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "40"
                }
            },
            "Step 4": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40) -> There are no possible next steps for the input 40 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40) -> There are no possible next steps for the input 40 as it is a single number and cannot be combined with any other numbers. -> 40 / 2 = 20 (left: 8 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40) -> There are no possible next steps for the input 40 as it is a single number and cannot be combined with any other numbers. -> 40 / 2 = 20 (left: 8 8 14) -> 8 + 8 = 16 (left: 16 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "62"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 50 12) -> 50 + 12 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 10 12 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 12 * 10 = 120 (left: 120 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 12 * 10 = 120 (left: 120 70) -> 120 / 70 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "62"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 50 12) -> 50 + 12 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 50 12) -> 50 + 12 = 62 (left: 62) -> 6 + 2 = 8 -> 3 * 8 =",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left: -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left: -> 6 + 11 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 2.125)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "110 - 2 = 108"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 110 * 2 = 220 (left: 220)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "110 - 2 = 108"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 110 / 2 = 55 (left: 55 108)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 1 + 5 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "110 - 2 = 108"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 108 * 2 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "110 - 2 = 108"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 2 + 110 = 112 (left: 108 112)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> There are no possible next steps with the input 90.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 / 6 = 2 (left: 2 16 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 / 6 = 2 (left: 2 16 9) -> 16 / 2 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 / 6 = 2 (left: 2 16 9) -> 16 / 2 = 8 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.5 + 8 = 9.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.5 + 8 = 9.5"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 * 8 = 12 (left: 12 8 9.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 * 8 = 12 (left: 12 8 9.5) -> 9.5 - 8 = 1.5 (left: 12 1.5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> Input: -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> Input: -> Please provide a set of numbers to generate possible next steps. -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.769"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 * 2 = 1.538 (left: 1.538)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.769"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 + 2 = 2.769",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.5 + 8 = 9.5"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.1875 (left: 0.1875 8 9.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.1875 (left: 0.1875 8 9.5) -> 0.1875 * 8 = 1.5 (left: 1.5 9.5)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7 -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 / 11.33 = 1.68 (left: 1.68 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 / 11.33 = 1.68 (left: 1.68 19) -> Input: 5 25 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 / 11.33 = 1.68 (left: 1.68 19) -> Input: 5 25 3 -> 25 / 5 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 4 3"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 3 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 3 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "16 4 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 - 11.33 = 7.67 (left: 7.67",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 * 19 = 215.27 (left: 215.27)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> Input: 4 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 4 3"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 4 = 12 (left: 12 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 4 = 12 (left: 12 4 3) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 7 * 6 = 42 (left: 42 76) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 * 11.33 = 215.27 (left: 215.27)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 4 3"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 4 = 12 (left: 12 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 5 + 3 = 8 (left -> 7 + 9 = 16 (left: 16 4 3 -> 16 - 4 = 12 (left: 12 3) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps with just one number. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 * 3 = 18 (left: 3 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 * 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 (left: 2 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 (left: 2 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "135 - 5 = "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 135) -> 135 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "135 - 5 = "
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 2) + (6 + 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> No possible next steps with input 1."
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "34"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "34"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps with the input 34.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps with the input 34. -> There are no possible next steps with the input 34.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "34"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.75"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75 as it is a single number and not an operation with other numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75 as it is a single number and not an operation with other numbers. -> There are no possible next steps for the input 2.75 as it is a single number and not an operation with other numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 5 * 6 = 30 (left: 2 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 5 * 6 = 30 (left: 2 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2.75"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "34"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps for the input 34 as it is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps for the input 34 as it is only one number. -> There are no possible next steps for the input 34 as it is only one number.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10) -> 5",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 * 2 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 * 2 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 10 / 6 = 1.67 (left: 1.67 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 10 / 6 = 1.67 (left: 1.67 10) -> 1.67 * 10 = 16.7 (left: 16.7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 8 / 9 = 0.8888888889 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 * 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 + 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 + 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 / 3 = 2 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.25"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 + 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the number 2.25 as it is already a decimal number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 + 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the number 2.25 as it is already a decimal number. -> There are no possible next steps for the number 2.25 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 * 4 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 * 4 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 * 4 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.25"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 + 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 8 10.25)",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8) ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Provide another number to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Provide another number to perform operations. -> 7 * 8 = 56 (left: 8 56 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next step.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next step. -> - Add the two numbers",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> None.",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input has already been evaluated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the input has already been evaluated."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> N/A - Input has already been evaluated.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 21 - 4 = 17 (left: 9 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 21 - 4 = 17 (left: 9 17) -> 9 * 17 = 153 (left: 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 4 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 4 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 1.22 + 14 = 15.22 (left: 15.22) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 4 + 9 = 13 (left: 13 21) -> 13 - 21 = -8 (left: -8) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 4 + 9 = 13 (left: 13 21) -> 13 - 21 = -8 (left: -8) -> There are no possible next steps as there is only one number provided. -> Provide more numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left:  -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left:  -> Please provide a set of numbers to determine the possible next steps. -> Without a set of numbers provided, I am unable to determine the possible next steps. Please provide a set of numbers for me to analyze.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 4 11 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 19 - 4 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 19 - 4 = 15 (left: 11 15) -> 11 / 15 = 0.73333 (left: 0.73333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 4 + 9 = 13 (left: 13 21) -> 13 - 21 = -8 (left: -8) -> -8 / 2 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.73333"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 19 - 4 = 15 (left: 11 15) -> 11 / 15 = 0.73333 (left: 0.73333) -> 0.73333 * 2 = 1.46666",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 90 / 4 = 22.5 (left: 11 22.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 90 / 4 = 22.5 (left: 11 22.5) -> 22.5 - 11 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 4 + 9 = 13 (left: 13 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 4 + 9 = 13 (left: 13 21) -> 13 - 21 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.73333"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 19 - 4 = 15 (left: 11 15) -> 11 / 15 = 0.73333 (left: 0.73333) -> There are no possible next steps for the input 0.73333 as it is a single number and not an expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 19 - 4 = 15 (left: 11 15) -> 11 / 15 = 0.73333 (left: 0.73333) -> There are no possible next steps for the input 0.73333 as it is a single number and not an expression. -> There are no possible next steps for the input 0.73333 as it is a single number and not an expression.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 * 10 = 110 (left: 110 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 * 10 = 110 (left: 110 63) -> 110 / 63 \u2248 1.746 (left: 1.746)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> There is no possible next step as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> There is no possible next step as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 19 - 11 = 8 (left: 7 8 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 19 - 11 = 8 (left: 7 8 19) -> 7 * 8 = 56 (left: 56 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 - 9 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5) -> 5 - 1.25 = 3.75 (left: 3.75 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5) -> 5 - 1.25 = 3.75 (left: 3.75 5) -> 3.75 - 5 = -1.25 (left: -1.25 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1.25 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5) -> 5 - 1.25 = 3.75 (left: 3.75 5) -> 3.75 - 5 = -1.25 (left: -1.25 5) -> -1.25 / 5 = -0.25 (left: -0.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 - 1.42857142857 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714) -> 2 - 2.85714285714 = -0.857142857",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 * 8 = 72 (left: 72) -> 72 / 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1.25 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5) -> 5 - 1.25 = 3.75 (left: 3.75 5) -> 3.75 - 5 = -1.25 (left: -1.25 5) -> 5 - (-1.25) = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 -",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 - 2 = -1.111111111111111",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "It seems like you have provided the initial sequence already (2 8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence. -> It seems like you have provided the initial sequence already (2 8 8 14). If you would like to continue the sequence, please provide the next number or numbers in the sequence. -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence. -> It seems like you have provided the initial sequence already (2 8 8 14). If you would like to continue the sequence, please provide the next number or numbers in the sequence. -> 2 + 8 = 10 (left: 8 10 14) -> 14 / 10 = 1.4 (left: 8 1.4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps. -> - Dividing the fourth number by the first number: 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence. -> It seems like you have provided the initial sequence already (2 8 8 14). If you would like to continue the sequence, please provide the next number or numbers in the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "It seems like you have provided the initial sequence already (2 8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence. -> It seems like you have provided the initial sequence already (2 8 8 14). If you would like to continue the sequence, please provide the next number or numbers in the sequence. -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left:  -> Please provide a list of numbers to continue the sequence. -> It seems like you have provided the initial sequence already (2 8 8 14). If you would like to continue the sequence, please provide the next number or numbers in the sequence. -> 14 + 2 = 16 (left: 8 8 16) -> 16 / 8 = 2 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2. -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2. -> 2 / 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2. -> 2 / 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2. -> 2 / 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-16 + 2 = -14"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> -2 * 8 = -16 (left: -16) -> -16 + 2 = -14 -> -16 * 2 = -32 (left: -32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> -2 * 8 = -16 (left: -16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> -2 * 8 = -16 (left: -16) -> -16 + 2 = -14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-16 + 2 = -14"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> -2 * 8 = -16 (left: -16) -> -16 + 2 = -14 -> -16 * 2 = -32",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> -2 * 8 = -16 (left: -16) -> -16 + 2 = -14 -> -16 * 2 = -32 -> -16 / 2 = -8 (left: -8 * 2 = -16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There is only one number, so no next steps are possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 8) -> 3 + 6 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 8) -> 3 + 6 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> 7 + 8 = 15 (left: 8 15 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 7 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 + 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 + 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 6 -> 6 + 6 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 6 -> 6 + 6 = 12 -> 6 + 6 = 12 (left: 12 12 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> Input: 4 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> Input: 4 7 -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 + 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 27"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> Input: 4 7 -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 + 6"
                }
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60) -> 10 / 10 = 1 (left: 1 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 / ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 /  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.4"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.4"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 * 1 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 + 4 = 14 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 + 4) = 24 -> \nGreat job on finding all these different ways to get to 24 using the given numbers and basic arithmetic operations!",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 60"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 4": {
                "Step": "10 + 4 = 14 (left: 4 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 4 = 14 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 4 = 14 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 + 4) = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.4"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 2 = 3.4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 2 = 3.4 -> 2 / 1.4 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 * 1 = 1"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 ( -> Input: 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 ( -> Input: 1 + 1 = 2 -> 1 * 1 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.4"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 * 8 = 11.2 (left: 8 11.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 * 8 = 11.2 (left: 8 11.2) -> 8 * 11.2 = 89.6 (left: 89.6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 * 1 = 1"
                }
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 / 8 = 4.375 (left: 3 4.375)\n4.375 * 3 = 13.125 (left: 13.125)\n13.125 * 2 = 26.25 (left: 26.25)\n26.25 - 2 = 24.25 (left",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 6 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + 6) - 4) * 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 4.875."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13 -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 * 8 = 72 (left: 72 9)\n72 / 9 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 3) * 8) * 9 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + 8 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 4.875."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19) -> 13 - 19 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 / 24 = 4.875 (left: 4.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 / 24 = 4.875 (left: 4.875) -> There are no possible next steps for the input 4.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 5 6 8\nSteps:\n3 * 8 = 24 (left: 5 6 24)\n5 + 6 = 11 (left: 11 24)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 8) - (5 + 6) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 5 = 15 (left: 4 6 15)\n15 - 6 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 4 = 9 (left: 9)\n9 - 5 = 4 (left: 4)\n4 + 9 = 13 (left: 13)\n13 - ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 4.875."
                }
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 + 17 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 * 2 = 1.0909090909090908",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 5 5) -> Input: 12 6 -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 5 5) -> Input: 12 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 5 5) -> Input: 12 6 -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 * 8 = 64 -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.5454545454545454 * 2 = 1.0909090909090908"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 * 2 = 1.0909090909090908 -> 0.5454545454545454 - 2 = -1.4545454545454546",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 * 2 = 1.0909090909090908 -> 0.5454545454545454 - 2 = -1.4545454545454546 -> 0.5454545454545454 + 2 = 2.5454545454545454",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 5 13) -> 7 / 5 = 1.4 (left: 1.4 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 5 13) -> 7 / 5 = 1.4 (left: 1.4 13) -> 13 - 1.4 = 11.6 (left: 11.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 / 8 = 0.625"
                }
            },
            "Step 7": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 =  -> 5 / 8 = 0.625 -> There are no valid next steps for the input \"5/8 = 0.625\" as it is already simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 =  -> 5 / 8 = 0.625 -> There are no valid next steps for the input \"5/8 = 0.625\" as it is already simplified to its simplest form. -> There are no valid next steps for the input \"5/8 = 0.625\" as it is already simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There is only one possible next step: 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 + 1 = 14 (left: 5 8 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 =  -> 5 / 8 = 0.625",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 / 8 = 0.625"
                }
            },
            "Step 7": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 =  -> 5 / 8 = 0.625 -> None, as the calculation is already complete.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 / 8 =  -> 5 / 8 = 0.625 -> None, as the calculation is already complete. -> The calculation is already complete.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 8 13) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 8 13) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps for the input 14.33 as it is a single number and not an equation with operands.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation with operands."
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps for the input 14.33 as it is a single number and not an equation with operands. -> There are no possible next steps for the input 14.33.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps for the input 14.33 as it is a single number and not an equation with operands. -> There are no possible next steps for the input 14.33. -> There are no possible next steps for the input 14.33.",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> There are no possible next steps as the input is incomplete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps given the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.076923 14"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 / 13 = 0.076923 (left: 0.076923 14) -> 14 - 0.076923 = 13.923077",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 / 13 = 0.076923 (left: 0.076923 14) -> 14 - 0.076923 = 13.923077 -> 14 + 0.076923 = 14.076923",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 13 = -4 (left: -4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 13 = -4 (left: -4 -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 13 = -4 (left: -4 -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the input is incomplete."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> There are no possible next steps as the input is incomplete. -> Input is incomplete. Please provide more numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> There are no possible next steps as the input is incomplete. -> Input is incomplete. Please provide more numbers to continue the calculation. -> 10 / 2 = 5 (left: 5 8 8 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 / 13 = 0.076923 (left: 0.076923 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is incomplete."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps given the input of 5."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps given the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps given the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "50"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number. -> There are no possible next steps for the input 50 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps for the input 1."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps for the input 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "50"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There is only one possible next step: 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "50"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> 50 - 2 = 48 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps for the input 1."
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 320744,
        "output_tokens": 123205.36269841272,
        "total_cost": 0.3451800440476191
    }
}