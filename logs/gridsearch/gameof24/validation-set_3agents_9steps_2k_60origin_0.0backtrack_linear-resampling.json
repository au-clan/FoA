{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11 -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 / 1 = 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4 -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "- Divide a number by another number"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid. -> Please provide a valid mathematical equation to continue. -> - Divide a number by another number -> - Multiply a number by another number",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid. -> Please provide a valid mathematical equation to continue. -> - Divide a number by another number -> - Multiply a number by another number -> - Subtract a number from another number",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid."
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid. -> Please provide a valid mathematical equation to continue.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid. -> Please provide a valid mathematical equation to continue. -> - Divide a number by another number",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 + 2 = 18"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> 16 + 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid. -> There seems to be an error in the input provided. The equation \"2 = 1\" is not mathematically valid.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 / 1 = 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4 -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 + 2 = 18"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> 16 + 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11 -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 19 - 9.17 = 9.83 (left: 9.17 9.83)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 19 - 9.17 = 9.83 (left: 9.17 9.83) -> 9.17 * 9.83 = 90.1511 (left: 90.1511)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9.17 19"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 - 19 = -9.83 (left: -9.83)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "48 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19) -> 48 - 19 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "17 / 6 = 2.83"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> There is only one possible next step: 36 divided by 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 * 19 = 174.23 (left: 174.23)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 - 19 = -9.83 (left: -9.83)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 - 19 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 - 19 = -2 (left: -2) -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 + 19 = 28.17 (left: 28.17)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "48 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19) -> 48 * 19 = 912 (left: 912)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "48 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9.17 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 - 19 = -9.83 (left: -9.83)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 13 "
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13  -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323) -> 3 + 2 = 5 (left: 5 3)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154 -> 0.846 + 2 = 2.846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.846 + 2 = 2.846"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154 -> 0.846 + 2 = 2.846 -> 0.846 * 2 = 1.692 (left: 1.692 2.846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154 -> 0.846 + 2 = 2.846 -> 0.846 * 2 = 1.692 (left: 1.692 2.846) -> 1.692 * 2.846 = 4.814632 (left: 4.814632)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 4 9 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.846"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 + 2 = 2.846",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 + 2 = 2.846 -> 0.846 - 2 = -1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> Input is not valid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.846 + 2 = 2.846"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154 -> 0.846 + 2 = 2.846 -> 2 * 0.846 = 1.692 (left: 1.692 2.846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 2 = -1.154 -> 0.846 + 2 = 2.846 -> 2 * 0.846 = 1.692 (left: 1.692 2.846) -> 1.692 + 2.846 = 4.538 (left: 4.538)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.846"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input is not valid."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27) -> Input: 4 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input: 4 9 3"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27) -> Input: 4 9 3 -> 4 / 9 = 0.444444",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27) -> Input: 4 9 3 -> 4 / 9 = 0.444444 -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 4 9 3"
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> - 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.5333333333333333 (left: 0.5333333333333333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": ""
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> 2.5 - 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> - 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 15"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> - 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.53 (left: 0.53)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 / 3 = 3.33 ("
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 ( -> 10 * 3 = 30 (left: 30 3.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 ( -> 10 * 3 = 30 (left: 30 3.33) -> 30 + 3.33 = 33.33 (left: 3.33 33.33)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> 8 / 3 = 2.6666666666666665 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> - 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> - 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 / 3 = 3.33 ("
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 ( -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 ( -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 16"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 = 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 = 4"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 = 4) -> 1 + 4 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 = 4) -> 1 + 4 = 5 -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.75 - 2 = -0.25"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25 -> -2 * 1.75 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 = 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.75"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.75 - 2 = -0.25"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25 -> 1.75 + 2 = 3.75 (left: -0.25 3.75)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.75"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 1 = 2.75",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 1 = 2.75 -> 1 - 1.75 = -0.75 (left: -0",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 - 2 = -0.25"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25 -> 1.75 / -2 = -0.875 (left: -0.875)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.75"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> There are no possible next steps with the input 1.75.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666 -> 6.99999999999 + 15.166666 = 22.16666599999 (left: 22.16666599999)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 12 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 12 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 - 7 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "65 + 2 = 67"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 + 2 = 67 -> 65 * 2 = 130 (left: 130 + 2 = 132)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 + 2 = 67 -> 65 * 2 = 130 (left: 130 + 2 = 132) -> 130 + 8 = 138 (left: 2 138)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 *",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 * -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 12 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 1 = 2.71 (left: 2.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.71"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 1 = 2.71 (left: 2.71) -> 2.71 - 8 = -5.29 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-91"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91) -> -91 + 2 = -89 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "65 + 2 = 67"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666667 (left: 32.91666666667)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "13 18 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 + 2 = 67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.71"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 1 = 2.71 (left: 2.71) -> 2.71 / 2 = 1.355",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 1 = 2.71 (left: 2.71) -> 2.71 / 2 = 1.355 -> 2.71 / 2 = 1.355 (already done)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input of 22."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "43"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 43."
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with the input 43. -> There are no possible next steps with the input 43. -> There are no possible next steps with the input 43.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with the input 43. -> There are no possible next steps with the input 43. -> There are no possible next steps with the input 43. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "43"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Please provide at least two numbers to perform an operation."
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Please provide at least two numbers to perform an operation."
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> - Add two numbers together",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> - Add two numbers together -> - Subtract two numbers",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "43"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with the input 43.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with the input 43. -> There are no possible next steps with the input 43.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Please provide at least two numbers to perform an operation."
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> - Division: 8 / 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> - Division: 8 / 2 = 4 -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 4"
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> - Division: 8 / 2 = 4 -> 8 - 4 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 13)",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13 - 10 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13 - 10 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "75"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> There are no possible next steps with just the number 75.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> There are no possible next steps with just the number 75. -> There are no possible next steps with just the number 75.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 - 10 = 3"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3 -> 13 * 10 = 130 (left: 130 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3 -> 13 * 10 = 130 (left: 130 3) -> 130 + 3 = 133 (left: 3 133)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "75"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> 75 + 2 = 77 (left: 2) ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "75"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> 75 + 2 = 77",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.85714"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714 -> 2.85714 + 2 = 4.85714 (left: 0.85714 4.85714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.85714 4.85714"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714 -> 2.85714 + 2 = 4.85714 (left: 0.85714 4.85714) -> 4.85714 - 0.85714 = 4 (left: 0.85714 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714 -> 2.85714 + 2 = 4.85714 (left: 0.85714 4.85714) -> 4.85714 - 0.85714 = 4 (left: 0.85714 4) -> 0.85714 * 4 = 3.42856 (left: 3.42856)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 5 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 / 6 = 0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 * 6 = 24 (left: 24) -> Answer: (4 / 6) * 7 * 10 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.85714 4.85714"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "90"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 2) ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.85714 4.85714"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714 -> 2.85714 + 2 = 4.85714 (left: 0.85714 4.85714) -> 0.85714 * 4.85714 = 4.166668 (left: 4.166668)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 / 6"
                }
            },
            "Step 6": {
                "Step": "4 / 6 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 / 6 = 0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 * 6 = 24 (left: 24) -> Answer: (4 / 6) * 7 * 10 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.85714 4.85714"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "90"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.85714 4.85714"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> 2.85714 - 2 = 0.85714 -> 2.85714 + 2 = 4.85714 (left: 0.85714 4.85714) -> 0.85714 + 4.85714 = 5.71428 (left: 5.71428)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 / 6"
                }
            },
            "Step 6": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.85714 4.85714"
                }
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "121"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 * 2 * 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "121"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24.83333"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 11 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24.83333"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> 24.83333 - 2 = 22.83333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> 24.83333 - 2 = 22.83333 -> 24.83333 * 2 = 49.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please enter numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please enter numbers to continue the calculation. -> No input provided. Please enter numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 -> 1.67 - 2 = -0.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 11"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11 -> 0 * 11 = 0 (left: 0 11) -> 0 * 11 = 0 (left: 11)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.67 - 2 = -0.33"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 * 0.875 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 * 0.875 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 0 + 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.67 - 2 = -0.33"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67 (left: 2 3.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11 -> 0 * 11 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.875 8"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.143 (left: 9.143)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.67 - 2 = -0.33"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80) -> 80 * 2 = 160 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 - 13 = -11"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> -11 - 2 = -13 (left: -13 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> -11 - 2 = -13 (left: -13 2) -> -13 + 2 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 - 13 = -11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> None - 16 is the final result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> None - 16 is the final result. -> There are no possible next steps because 16 is the final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80) -> 80 * 2 = 160 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 - 13 = -11"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 - 13 = -11"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> -11 + 13 = 2 (left: 2 = 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> -11 + 13 = 2 (left: 2 = 2) -> There is only one possible next step: 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 4."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 - 13 = -11"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> 2 * 13 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 - 13 = -11"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> -11 - 13 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 - 13 = -11"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> 2 - 13 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 4."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 13 - 5 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. -> It seems like you did not provide any input for this calculation. Can you please provide the numbers you would like to work with?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. -> It seems like you did not provide any input for this calculation. Can you please provide the numbers you would like to work with? -> It seems like you did not provide any input for this calculation. Can you please provide the numbers you would like to work with?",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the input is 0 and there are no numbers to perform operations on."
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on. -> There are no possible next steps as the input is 0 and there are no numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 (left: 21 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 (left: 21 23) -> 21 + 23 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.6388888888888888"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.6388888888888888 * 2 = 1.2777777777777776"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776 -> 0.6388888888888888 - 2 = -1.3611111111111112",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776 -> 0.6388888888888888 - 2 = -1.3611111111111112 -> 0.6388888888888888 + 2 = 2.6388888888888888",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.6388888888888888"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 + 0.6388888888888888 = 1.2777777777777776",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 3 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "45"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps with just the input of \"45\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the input of \"45\"."
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps with just the input of \"45\". -> There are no possible next steps with just the input of \"45\".",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps with just the input of \"45\". -> There are no possible next steps with just the input of \"45\". -> 45 / 8 = 5.625 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 - 2 = 19 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.6388888888888888"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.6388888888888888"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.6388888888888888 * 2 = 1.2777777777777776"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776 -> 0.6388888888888888 - 2 = -1.3611111111111112",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 * 2 = 1.2777777777777776 -> 0.6388888888888888 - 2 = -1.3611111111111112 -> 0.6388888888888888 * 2 = 1.2777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 3 = 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 3 = 7 -> 21 * 3 = 63 (left: 63 = 7)",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps: -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as all combinations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps: -> There are no possible next steps as all combinations have been exhausted. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps: -> There are no possible next steps as all combinations have been exhausted. -> There are no possible next steps as all combinations have been exhausted. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the number 2.66666666667."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.97"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as all combinations have been exhausted."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more numbers to generate possible next steps. -> x+y, x-y, x*y, x/y",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-102"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 - 2 = -104 (left: -104)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the number 2.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the number 2.66666666667."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the number 2.66666666667. -> There are no possible next steps with the number 2.66666666667.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the number 2.66666666667. -> There are no possible next steps with the number 2.66666666667. -> There are no possible next steps with the number 2.66666666667.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 - 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 0"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0) -> There are no possible next steps since there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 0 0."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 0"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps since there is no input given."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0) -> There are no possible next steps since there is no input given. -> No input given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0) -> There are no possible next steps since there is no input given. -> No input given. -> There are no possible next steps as no input was provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 0"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 0 0."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 12 = 0 (left: 2 0) -> 2 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 *"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> Input: 24 +",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> Input: 24 + -> 24 / 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> Input: 24 + -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "38 * 3 = 114 (left"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 * 3 = 114 (left -> 38 + 3 = 41 (left: 41)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6.67 17 20.01"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "38"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "38"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 * 3 = 114 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 *"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> 24 - 42 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> 24 - 42 = -18 (left: -18) -> There are no possible next steps as the input does not match any of the previous results.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.67 17 20.01"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 ( -> 20 - 3 = 17 (left: 3 6.67 17) -> 3 * 6.67 = 20.01 (left: 6.67 17 20.01) -> 17 - 6.67 = 10.33 (left: 10.33 20.01)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 ( -> 20 - 3 = 17 (left: 3 6.67 17) -> 3 * 6.67 = 20.01 (left: 6.67 17 20.01) -> 17 - 6.67 = 10.33 (left: 10.33 20.01) -> 10.33 + 20.01 = 30.34 (left: 30.34)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6.67 17 20.01"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "38"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 / 3 = 12.67 (left: 12.67)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "20 / 3 = 6.67 ("
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 ( -> 20 - 3 = 17 (left: 3 6.67 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 ( -> 20 - 3 = 17 (left: 3 6.67 17) -> 3 * 6.67 = 20.01 (left: 6.67 17 20.01)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * -> Input: 24 + -> 24 / 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 - 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There is only one possible next step for the input 240:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There is only one possible next step for the input 240: -> 240 / 2 = 120",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 2 = 120",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 2 = 120 -> 240 - 2 = 238 (left: 238)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 + 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 12 = 20 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 12 = 20 (left -> 240 + 12 = 252 (left: 12 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 12 = 20 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 12 = 20 (left -> 12 + 240 = 252 (left: 20 252)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 - 8 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There are no possible next steps for the number 240.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There are no possible next steps for the number 240. -> None.",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "450"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 - 2 = 448 (left: 448 * 2 = 896)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 + 1.8 = 2.8 (left: 2.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.8"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 + 1.8 = 2.8 (left: 2.8) -> There are no possible next steps for the input 2.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 + 1.8 = 2.8 (left: 2.8) -> There are no possible next steps for the input 2.8 as it is already a single number. -> There are no possible next steps for the input 2.8 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 / 4 = 0.5825 (left: 0.5825)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 5 9"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 - 1.5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "448 * 2 = 896"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 + 5 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 + 5 = 14 (left: 4 14) -> Input: 18 3.5 56 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 - 1.8 = -0.8 (left: -0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.8"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 + 1.8 = 2.8 (left: 2.8) -> There are no possible next steps with the input of 2.8 as it is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8) -> 1 + 1.8 = 2.8 (left: 2.8) -> There are no possible next steps with the input of 2.8 as it is only one number. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "448 * 2 = 896"
                }
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input: -> Please provide numbers for the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Please provide numbers for the input."
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input: -> Please provide numbers for the input. -> It seems like you haven't provided any numbers for the input. Please provide the numbers so I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input: -> Please provide numbers for the input. -> It seems like you haven't provided any numbers for the input. Please provide the numbers so I can generate possible next steps for you. -> It seems like you haven't provided any numbers for the input. Please provide the numbers so I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 5 5"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 + 5 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 5 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps: -> - 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Please provide numbers for the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "It seems like you haven't provided any numbers for the input. Please provide the numbers so I can generate possible next steps for you."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> Input: 5 5 5 5 -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> No possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 9 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 / 15 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.5 + 2 = 5.5"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 3.5 + 2 = 5.5 -> 3.5 / 2 = 1.75 (left: 1.75 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 3.5 + 2 = 5.5 -> 3.5 / 2 = 1.75 (left: 1.75 2) -> 1.75 * 2 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 / 8 = 1.875"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 14"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 18 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 - 2 = -1 (left: -1) ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 3.5 + 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4.8"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 / 15 = 4.8 (left: 4.8) -> Sorry, I'm unable to provide possible next steps for the input \"4.8\" as it is not a valid input for the calculations provided. Please input a valid set of numbers for me to provide possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 / 15 = 4.8 (left: 4.8) -> Sorry, I'm unable to provide possible next steps for the input \"4.8\" as it is not a valid input for the calculations provided. Please input a valid set of numbers for me to provide possible next steps. -> Input: 4 8 10 20",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: 2 * ((3 + 6) - 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 5 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 14 8)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24\nAnswer: (2 * 7) - (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\nAnswer: (2 * 4) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n20 / 5 = 4 (left: 3 4)\n4 + 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 10 = 31 (left: 31)\n31 - 10 = 21 (left: 21)\n21 + ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) +  (13 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) +  (13 - 3) = 24 -> Input: 7 7 3 5\nSteps:\n7 + 7 = 14 (left: 3 5 14)\n5 + 3 = 8 (left: 8 14)\n8 * 14 = 112 (left: 112)\n112 / 5 = 22.4 (left: 22.4)\n22.4 + 3 = 24.4 (left: 24.4)\n24.4 - 0",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4666666666666667"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> 10 + 15 = 25 (left: 5 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 11 14"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 * 9 = 99 (left: 99 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 * 9 = 99 (left: 99 14) -> 99 - 14 = 85 (left: 85)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "70"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 14 - 9 = 5 (left: 5 14) -> 5 * 14 = 70 (left: 70) -> There is only one possible next step for the input 70, which is 70 divided by 2, resulting in 35 (left: 35).",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.4666666666666667"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> 0.4666666666666667 + 2 = 2.4666666666666668 (left: 2.4666666666666668)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.57"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 57 - 1.57 = 55.43 (left: 1.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.57"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1.57 / 2 = 0.785 (left: 0.785)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 11 14"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 11 14"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 14 - 1.22 = 12.78 (left: 12.78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12.78"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 14 - 1.22 = 12.78 (left: 12.78) -> 12 + 78 = 90",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 14 - 1.22 = 12.78 (left: 12.78) -> 12 + 78 = 90 -> 12 + 78 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.57"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 57 - 1 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 11 14"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22222 (left: 1.22222 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 11 14"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 14 - 9 = 5 (left: 5 14) -> 5 * 14 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12.78"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 14 - 1.22 = 12.78 (left: 12.78) -> 12 + 78 = 90",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14) -> 14 - 1.22 = 12.78 (left: 12.78) -> 12 + 78 = 90 -> 12 - 78 = -66",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 11"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 / 2 = 11.5 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "132"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 132 / 2 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "None - 21 is a single number and cannot be combined with any of the other numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "132"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 / 23 = 1 (left: )",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 21 = 0 (left: )",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "None - 21 is a single number and cannot be combined with any of the other numbers."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> None - 21 is a single number and cannot be combined with any of the other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "132"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "None - 21 is a single number and cannot be combined with any of the other numbers."
                }
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19.5"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "19.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17 - 11 = 6"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 + 11 = 28",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 + 11 = 28 -> 17 - 11 = 6 (left: 6 + 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "187 = 6"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 * 11 = 187 (left: 187 = 6) -> 18 - 7 = 11 (left: 11 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 * 11 = 187 (left: 187 = 6) -> 18 - 7 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "17 - 11 = 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.17"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17 - 11 = 6"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 - 11 = 6 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 - 11 = 6 ( -> 17 * 11 = 187 (left: 187)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "187 = 6"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 * 11 = 187 (left: 187 = 6) -> 187 / 6 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 * 11 = 187 (left: 187 = 6) -> 187 / 6 =  -> 31.166666666666668",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "17 - 11 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19.5"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> 19.5 - 2 = 17.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> 19.5 - 2 = 17.5 -> 19.5 - 2 = 17.5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19.5 - 2 = 17.5"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> 19.5 - 2 = 17.5 -> 19.5 - 2 = 17.5 -> 19.5 / 2 = 9.75 (left: 9.75)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "17 - 11 = 6"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 * 11 = 187 (left: 187 = 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 + 28"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 + 11 = 28 -> 17 - 11 = 6 (left: 6 + 28) -> 6 + 28 = 34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 - 11 = 6 -> 17 + 11 = 28 -> 17 - 11 = 6 (left: 6 + 28) -> 6 + 28 = 34 -> 28 - 6 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "187 = 6"
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "70"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "5 11"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 - 8 = -1 (left: -1 8) -> 8 / -1 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 * 5 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input: 3 9 27"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 2 - 70 = -68 (left: -68)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "70"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> Input: 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> Input: 48 -> 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12) -> 12 - 14.2857142857 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 / 10 = 1.2"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 = 120"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128 -> 8 * 8 = 64 (left: 2 * 64 = 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 * 64 = 128"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128 -> 8 * 8 = 64 (left: 2 * 64 = 128) -> 64 * 2 = 128",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128 -> 8 * 8 = 64 (left: 2 * 64 = 128) -> 64 * 2 = 128 -> 2 / 64 = 0.03125 (left: 0.03125 * 2 = 0",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 - 1.42857142857 = 8"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 / 1.42857142857 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 / 1.42857142857 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 - 1.42857142857 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps for the number 19 as it is a prime number and cannot be divided evenly by any other number besides 1 and itself.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps for the number 19 as it is a prime number and cannot be divided evenly by any other number besides 1 and itself. -> 19 is a prime number and cannot be divided evenly by any other number besides 1 and itself.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 - 14.2857142857 ="
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12) -> 12 - 14.2857142857 = -> 12 - 14.2857142857 = -2.2857142857",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12) -> 12 - 14.2857142857 = -> 12 - 14.2857142857 = -2.2857142857 -> 12 * 14.2857142857 = 171.4285714284 (left: 171.4285714284)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.42857142857 10 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 / 12 = 0.714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 * 64 = 128"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128 -> 8 * 8 = 64 (left: 2 * 64 = 128) -> 64 * 2 = 128 (left: 128 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 * 10 = 120 -> 12 - 10 = 2 (left: 2 = 120) -> 2 * 8 * 8 = 128 -> 8 * 8 = 64 (left: 2 * 64 = 128) -> 64 * 2 = 128 (left: 128 128) -> 128 - 128 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 * 64 = 128"
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> The input -3 does not have any possible next steps as it is a single number and cannot be combined with any other numbers using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> -5 / 8 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 + 7 = 13"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 13 / 7 = 1.857 (left: 1.857 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 13 / 7 = 1.857 (left: 1.857 13) -> 13 / 1.857 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 16 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 5 + 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.11"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 / 9 = 1.11 (left: 1.11) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 / 9 = 1.11 (left: 1.11) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 + 7 = 13"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13) -> 42 * 13 = 546 (left: 546)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 5 + 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "90"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> 90 - 90 = 0 (left: )",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 + 7 = 13"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 13 / 7 = 1.85714285714 (left: 1.85714285714)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.5"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 16 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 / 6 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 / 6 = 2.67 (left: 2.67 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 5 + 3 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "90"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> There are no possible next steps with the input of 90.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "76"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 76 / 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 76 / 2 = 38 -> 76 + 2 = 78 (left: 78 / 2 = 39)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.16666666667"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 / 6 = 2.16666666667 (left: 2.16666666667) -> 2.16666666667 - 8 = -5.83333333333",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 / 6 = 2.16666666667 (left: 2.16666666667) -> 2.16666666667 - 8 = -5.83333333333 -> 8 / 2.16666666667 = 3.69230769232 (left: -5.83333333333 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 + 22 = 37"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 22 - 15 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 22 - 15 = 7 -> 22 - 15 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 / 6 = 1.5 (left: 1.5 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 / 6 = 1.5 (left: 1.5 22) -> 1.5 * 22 = 33 (left: 22 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "22 33"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 / 6 = 1.5 (left: 1.5 22) -> 1.5 * 22 = 33 (left: 22 33) -> 22 - 33 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "76"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> There are no possible next steps with the input 76.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "76"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 76 - 7 = 69 (left: 69) ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 / 6 = 2.16666666667 (left: 2.16666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "76"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> There are no possible next steps for the input 76.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> There are no possible next steps for the input 76. -> There are no possible next steps for the input 76.",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "108 135"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 108 - 135 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "27 35.91"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "108 135"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 108 / 135 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "108 135"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 108 / 135 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 36."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "27 35.91"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "108 135"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 135 * 108 = 14580 (left: 14580)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "27 35.91"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 36."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18 21"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21) -> 18 - 21 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 * 8 = 72 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "108 135"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "108 135"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 108 - 135 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "108 135"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 135 + 108 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 36."
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 * 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "It seems like you did not provide a set of numbers. Please provide a set of numbers so we can determine the possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "It appears that the input is not clear. Please provide a valid input for the next steps to be determined."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Please provide a set of numbers to determine the possible next steps. -> It seems like you did not provide a set of numbers. Please provide a set of numbers so we can determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 + 5 = 9"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 -> 5 - 4 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 -> 5 - 4 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 4 = 4 (left: 4",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 + 5 = 9"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 -> 4 - 5 = -1 (left: -1 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 1 = 7"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 + 5 = 9"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 -> 4 - 5 = -1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 -> 4 - 5 = -1 -> -5 - 4 = -9 (left: -1 -9)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There is only one number given (32), so there are no possible next steps to consider.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There is only one number given (32), so there are no possible next steps to consider. -> 32 + 1 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "32 + 1 = 33"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There is only one number given (32), so there are no possible next steps to consider. -> 32 + 1 = 33 -> 1 + 32 = 33 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 32."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16 -> 16 * 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps for the number 32."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps for the number 32."
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> None, as 32 cannot be formed using the numbers 2, 8, 8, 14.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> None, as 32 cannot be formed using the numbers 2, 8, 8, 14. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps for the number 32."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 32."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16 -> 16 + 16 = 32",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8 -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "32 + 1 = 33"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There is only one number given (32), so there are no possible next steps to consider. -> 32 + 1 = 33 -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps for the number 32."
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> There are no possible next steps for the number 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 32."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is a single number and cannot be combined with any of the other numbers. -> No possible next steps for the number 32. -> 32 / 2 = 16 -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "32 + 1 = 33"
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 5.01 - 3 = 2.01 (left: 2.01)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.33333333333"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333) -> 1.33333333333 + 2 = 3.33333333333 (left: 2 3.33333333333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 / 3 = 1.33 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 / 3 = 1.33 ( -> 4 + 3 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 3 + 5.01 = 8.01 (left: 8.01)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.33333333333"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333) -> There are no possible next steps for the input 1.33333333333. It is already a single number and cannot be combined with other numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4) -> 10 - 5 = 5 (left: 5 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4) -> 10 - 5 = 5 (left: 5 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.33333333333"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333) -> 1.33333333333 * 2 = 2.66666666667",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 3 + 5.01 = 8.01 (left: 8.01)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 5.01"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 3 + 5.01 = 8.01 (left: 8.01)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4) -> 10 - 5 = 5 (left: 5 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 5.01"
                }
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 3 + 5.01 = 8.01 (left: 8.01)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 3.33333333333"
                }
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no more possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5) -> 2 + 2.5 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no more possible next steps for the given input."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no more possible next steps for the given input. -> There are no more possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 10 + 5 = 15 (left: 3 2 15)",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 5 25 3"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - -> 25 - 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "25 - 2 = 23"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - -> 25 - 2 = 23 -> 25 * 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "130"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "128 132"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "128 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 -> 130 - 2 = 128 (left: 128 132) -> 128 / 132 = 0.9696969696969697 (left: 0.9696969696969697)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "128 132"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 -> 130 - 2 = 128 (left: 128 132) -> 128 - 132 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "128 132"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> Input: 20 6 4 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "128 132"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 -> 130 - 2 = 128 (left: 128 132) -> 128 / 132 = 0.9696969696969697 (left: 0.9696969696969697)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 26 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "26 11"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 26 11) -> 26 - 11 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 26 11) -> 26 - 11 = 15 (left: 15) -> None - the input does not have enough numbers to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "130"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 -> 130 - 2 = 128 (left: 128 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Input: 20 6 4 24"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> Input: 20 6 4 24 -> 24 / 6 = 4 (left: 20 4 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> Input: 20 6 4 24 -> 24 / 6 = 4 (left: 20 4  -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "130"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "26 11"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 26 11) -> 26 * 11 = 286 (left: 286)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 26 11) -> 26 * 11 = 286 (left: 286) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input: 20 6 4 24"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83) -> 83 - 7 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 * 8 = 8 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 * 8 = 8 (left: 8 90) -> 8 + 90 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8.18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8.18) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 11 76"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83) -> 83 - 7 = 76 (left: 7 11 76) -> 7 + 11 = 18 (left: 18 76)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83) -> 83 - 7 = 76 (left: 7 11 76) -> 7 + 11 = 18 (left: 18 76) -> 18 / 76 = 0.23684210526 (left: 0.23684210526)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 * 8 = 8 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 * 8 = 8 (left: 8 90) -> 8 * 90 = 720 (left: 720)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 / 90 = 0.8555555555555556 (left: 0.8555555555555556)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.14285714286 8"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8.18) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 8) -> 8 - 1.14285714286 = 6.85714285714 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8.18) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 8) -> 8 - 1.14285714286 = 6.85714285714 (left: -> 8 * 1.14285714286 = 9.14285714288 (left: 9.14285714288)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 - 11 = 1.857 (left: 1.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 / 8 = 0.125 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 / 8 = 0.125 ( -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83) -> 83 - 7 = 76 (left: 7 11 76)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 11 76"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83) -> 83 - 7 = 76 (left: 7 11 76) -> 7 * 11 = 77 (left: 77 76)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 11 83) -> 83 - 7 = 76 (left: 7 11 76) -> 7 * 11 = 77 (left: 77 76) -> 77 / 76 = 1.01315789474 (left: 1.01315789474)",
                "Pruning": "NA"
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There is only one possible next step with the input 9:"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 - 9 = 0",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 - 9 = 0 -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.42857142857"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857142857"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> There are no possible next steps for the input 1.42857142857 as it is already a decimal number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> There are no possible next steps for the input 1.42857142857 as it is already a decimal number. -> There are no possible next steps for the input 1.42857142857 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 - 1.42857142857 = 0.571428"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857 -> 2 - 1.42857142857 = 0.571428 -> 2 - 0.571428",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857 -> 2 - 1.42857142857 = 0.571428 -> 2 - 0.571428 -> 2 - 0.571428 = 1.428572",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There is only one possible next step with the input 9:"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 9 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 9 = 18 -> 9 * 9 = 81 (left: 18 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857142857"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857 -> 2 - 1.42857142857 = 0.571428",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There is only one possible next step with the input 9:"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857142857"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 2 = 3.42857142857 -> 1.42857142857 * 2 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 1 = 10 -> Possible next steps: -> There are no possible next steps with the given input. -> Input is not valid. Please provide a valid input with at least two numbers.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 + 4.67 = 7.67 (left: 7.67)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.67 14.01"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> 4.67 * 14.01 = 65.5487 (left: 65.5487)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0.8888888888888888 / 0.8888888888888888 = 1"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1 -> 0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input: 5 10 15"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> Input: 5 10 15 -> 15 / 5 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> Input: 5 10 15 -> 15 / 5 = 3 (left: 3 15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4.67 14.01"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 - 4.67 = -1.67 (left: -1.67)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3 4.67"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.67 14.01"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> 14.01 - 4.67 = 9.34 (left: 9.34)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4.67 14.01"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1 -> 0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776 -> 1.7777777777777776 - 0.8888888888888888 = 0.8888888888888888",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1 -> 0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776 -> 1.7777777777777776 - 0.8888888888888888 = 0.8888888888888888 -> 1.7777777777777776 + 0.8888888888888888 = 2.6666666666666664",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 - 4.67 = -1.67 (left: -1.67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.8888888888888888"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.67 14.01"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 4.67 14.01) -> 4.67 * 14.01 = 65.5287 (left: 65.5287)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9 9"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1 -> 0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776 -> 1.7777777777777776 / 0.8888888888888888",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 / 0.8888888888888888 = 1 -> 0.8888888888888888 + 0.8888888888888888 = 1.7777777777777776 -> 1.7777777777777776 / 0.8888888888888888 -> 1.7777777777777776 * 0.8888888888888888 = 1.5833333333333333",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.1875"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 / 2 = 0.09375 (left: 0.09375)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 * 6 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 * 6 =  -> 8 * 6 = 48 -> 6 - 8 = -2 (left: -2 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 * 6 =  -> 8 * 6 = 48 -> 6 - 8 = -2 (left: -2 48) -> 48 / -2 = -24 (left: -24 48)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5) -> There are no possible next steps with just one number. -> Addition, Subtraction, Multiplication, Division of the available numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.1875"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 + 2 = 2.1875 (left: 2.1875)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.1875"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 * 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 * 6 =  -> 8 * 6 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 * 6 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 * 6 =  -> 8 * 6 = 48 -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5555555555555556"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556) -> ",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 56."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 7 8"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 56."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number provided, so there are no possible next steps to calculate. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 56."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> 56 / 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 8"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps since there is only one number given."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number given. -> There are no possible next steps since there is only one number given. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number given. -> There are no possible next steps since there is only one number given. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1 8 14"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14) -> 7 * 14 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-1 8 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number given. -> There are no possible next steps since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 7"
                }
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1 8 14"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14) -> 7 * 14 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-1 8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> 21 - 2 = 19 (left: 19 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 2"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> 21 - 2 = 19 (left: 19 2) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "19 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1 8 14"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 - 3 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 + 2 = -1 (left: -1 8 14) -> -1 + 8 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "19 2"
                }
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 2.66666666667 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 3.33."
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input of 3.33. -> There are no possible next steps with the input of 3.33.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input of 3.33. -> There are no possible next steps with the input of 3.33. -> Unfortunately, there are no possible next steps with the input of 3.33 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.66666666667"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps as there is only one number given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 2.66666666667 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> There are no possible next steps for the input 2.66666666667 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> There are no possible next steps for the input 2.66666666667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input of 3.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 2.66666666667 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> There are no possible next steps for the input 2.66666666667 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> There are no possible next steps for the input 2.66666666667 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 2.66666666667 as it is already a single number."
                }
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 20."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20. -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "7"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 20."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> 20 / 2 = 10",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 15 + 8 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 20."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "20"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 20."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14.33"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 6.6923076923076925 / 1.2307692307692308",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 6.6923076923076925 / 1.2307692307692308 -> 6.6923076923076925 - 1.2307692307692308 = 5.461538461538461 (left: 5.461538461538461)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1.2307692307692308 3 6.6923076923076925"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 3 * 6.6923076923076925 = 20.076923076923077 (left: 1.2307692307692308 20.076923076923077)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 3 * 6.6923076923076925 = 20.076923076923077 (left: 1.2307692307692308 20.076923076923077) -> 20.076923076923077 - 1.2307692307692308 = 18.846153846",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.6923076923076925"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 - 3 = 0.6923076923076925",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 - 3 = 0.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.230769230769231 (left: 4.230769230769231 6.6923076923076925)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.230769230769231 (left: 4.230769230769231 6.6923076923076925) -> 4.230769230769231 / 6.6923076923076925 = 0.631578947368421 (left: 0.631578947368421 6.6923076923076925)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 3 * 6.6923076923076925 = 20.076923076923077 (left: 1.2307692307692308 20.076923076923077)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 3 * 6.6923076923076925 = 20.076923076923077 (left: 1.2307692307692308 20.076923076923077) -> 1.2307692307692308 + 20.076923076923077 = 21.307692307692307 (left: 21.307692307692307)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.2307692307692308 3 6.6923076923076925"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.6923076923076925"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.2307692307692308 (left: 4.2307692307692308 6.6923076923076925)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.2307692307692308 (left: 4.2307692307692308 6.6923076923076925) -> 6.692307",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.2307692307692308 3 6.6923076923076925"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.230769230769231 (left: 4.230769230769231 6.6923076923076925)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 + 3 = 6.6923076923076925 -> 3.6923076923076925 / 3 = 1.2307692307692308 (left: 1.2307692307692308 3 6.6923076923076925) -> 1.2307692307692308 + 3 = 4.230769230769231 (left: 4.230769230769231 6.6923076923076925) -> 4.230769230769231 / 6.6923076923076925 = 0.6324786324786325 (left: 0.6324786324786325 6.6923076923076925)",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.72222 * 2 = 1.44444"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 / 18 = 0.72222 (left: 0.72222) -> 0.72222 * 2 = 1.44444 -> 0.72222 * 2 = 1.44444",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 / 18 = 0.72222 (left: 0.72222) -> 0.72222 * 2 = 1.44444 -> 0.72222 * 2 = 1.44444 -> 0.72222 + 2 = 2.72222",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 18"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 / 18 = 0.72222 (left: 0.72222)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 / 18 = 0.72222 (left: 0.72222) -> 0.72222 * 2 = 1.44444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 0"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 2 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 - 1 = 139 (left: 1 139)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 0"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 0"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 * 2 = 280 (left: 2 280)",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 353054,
        "output_tokens": 115277.64999999998,
        "total_cost": 0.34944347499999995
    }
}