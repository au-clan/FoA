{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number. -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.66667 (left: 16.66667)\nAnswer: (3 + 7) * (5 * 10 / 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 4 6 8\nSteps:\n4 * 6 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 4 5 7\nSteps:\n4 + 7 = 11 (left: 3 5 11)\n5 - 3 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((4 + 7) - 5) * (3 + 2) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 4 * 6 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300) -> 300 * 2 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (4 * 2) * (3 + 6) = 72",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n3 + 42 = 45 (left: 45)\n45 - 5 = 40 (left: 40)\n40 / 3 = 13.333333333333334 (left:",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n15 + 18 = 33 (left: 33)\nAnswer: ((6 * 3) + (7 + 8)) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n6 * 48 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 * 6 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 13 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) - 3 +",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 3) - 4) * 6 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 5 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 6 6 7\nSteps:\n6 * 7 = 42 (left: 3 42)\n42 / 3 = 14 (left: 14)\n14 - 6 = 8 (left: 8)\n8 - 6 = 2 (left: 2)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((((3 * 6",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 * 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / (16 -",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 - 21 = 15 (left: 15)\nAnswer: ((3 * 7) - 9) * 3 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) * (6 - 3) = 63",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n3 + 5 = 8 (left: 8 21)\n8 * 21 = 24 (left: 24)\nAnswer: (3 * 7) * (3 + 5) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 + 2 = 7.26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5.26 * 8 = 42.08"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08 -> 5.26 - 8 = -2.74 (left: -2.74 * 8 = -21.92)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08 -> 5.26 - 8 = -2.74 (left: -2.74 * 8 = -21.92) -> -2.74 / 8 = -0.3425 (left: -0.3425 * 8 = -2.74)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5.26 * 8 = 42.08"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08 -> 8 * 5.26 = 42.08",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08 -> 8 * 5.26 = 42.08 -> 8 / 5.26 = 1.52",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.26 + 2 = 7.26"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 + 2 = 7.26 -> 5.26 - 2 = 3.26",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 + 2 = 7.26 -> 5.26 - 2 = 3.26 -> 5.26 / 2 = 2.63",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 * 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 * 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 * 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No more possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833) -> 0.5833 * 2 = 1.1666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.5833 * 2 = 1.1666"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833) -> 0.5833 * 2 = 1.1666 -> 0.5833 - 2 = -1.4167",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833) -> 0.5833 * 2 = 1.1666 -> 0.5833 - 2 = -1.4167 -> -1.4167 + 2 = 0.5833 (left: 0",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5.26 + 2 = 7.26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 7 * 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 7"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 / 8 = 1"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "5.26 * 8 = 42.08"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 7 / 1.33 = 5.26 (left: 5.26) -> 5.26 * 8 = 42.08 -> 5.26 + 8 = 13.26 (left: 13.26 * 8 = 106.08)",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 2 = 24 -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> The input is already a single number, so no further steps can be taken.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> The input is already a single number, so no further steps can be taken. -> The input is already a single number, so no further steps can be taken.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None - since there is only one number provided, there are no possible arithmetic operations that can be performed.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None - since there is only one number provided, there are no possible arithmetic operations that can be performed. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> There are no possible next steps as there are no other numbers to combine or operate with. The result is 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> There are no possible next steps as there are no other numbers to combine or operate with. The result is 22. -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2.2 + 2 = 4.2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) ->  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) ->  -> There are no possible next steps with the given input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30) -> 8 - 30 = -22 (left: -22)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 / 2 = 11 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "22"
                }
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 5 + 2 = 7 -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to calculate."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 17) -> There are no possible next steps with the input 17. -> None.",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 * 16 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9) -> 9 + 1.3333 = 10.3333 (left: 10.3333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 / 4 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 / 4 = 3 (left: 3 13) -> 3 - 13 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "13 - 4 = 9 (left"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 / 2 = 26 (left: 26",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 / 2 = 26 (left: 26 -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17) -> 10 -> 10 - 8 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-9 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 / 15 = -0.6 (left: -0.6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "I'm sorry, but without the numbers for calculations, it is not possible to provide specific next steps. Please provide the missing numbers so we can assist you further."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "7 / 6 = 1.1666666666666667 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 6 = 1.1666666666666667 ( -> 6 - 7 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 6 = 1.1666666666666667 ( -> 6 - 7 = -1 (left: -1) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 + 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 + 6 = 15 (left: 15) -> 15 + 2 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 + 15 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-9 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 21"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45)  -> 45 + 2 = 47",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 8 9) -> 8 / 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 8 9) -> 8 / 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 / 15 = -0.6 (left: -0.6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-9 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 21"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps? -> I'm sorry, but without the numbers for calculations, it is not possible to provide specific next steps. Please provide the missing numbers so we can assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 - 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-9 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 - 15 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 21"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 8 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-9 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 * 15 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 21"
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 * 23 = 299 (left: 299)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 * 23 = 299 (left: 299) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 + 2 = 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 14"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 14"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input -10."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 * 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "13 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13 -> 11 - 2 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13 -> 11 - 2 = 9 (left: 9 13) -> 9 / 13 \u2248 0.6923 (left: 0.6923)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 / 18 = 0.72 (left: 0.72)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left:  -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left:  -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13 -> 11 + 2 + 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input -10."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps for the input -10. -> There are no possible next steps for the input -10.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps for the input -10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 14"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "13 14"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 - 14 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input -10."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> -10 / 2 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119) -> 1 * 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "13 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 14"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left:  -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> It seems you haven't provided any input for the next step calculation. Please enter a set of numbers to continue.",
                "Pruning": null
            },
            "Step 3": {
                "Step": " -> It seems you haven't provided any input for the next step calculation. Please enter a set of numbers to continue. -> No valid input provided. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 4 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9.625 11"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 9.625 * 11 = 105.875 (left: 105.875)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9.625 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 11 - 9.625 = 1.375 (left: 1.375)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 1.375 + 11 = 12.375 (left: 11 11 12.375)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 7": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 -> 22 - 2 = 20 (left: 2 20 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 / 1.375 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9.625 11"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 9.625 - 11 = -1.375 (left: -1.375)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9.625 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 9.625 + 11 = 20.625 (left: 20.625)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 4 8 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 4 8 14 -> 14 - 8 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 4 8 14 -> 14 - 8 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 7": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9.625 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 7": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 -> 2 * 22 = 44 (left: 44 24)",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 3) ->  -> It seems like the input was not provided. Please provide the numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "It seems like the input was not provided. Please provide the numbers to continue."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 * 9 = 36"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> 4 - 9 = -5 (left: -5 = 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> 4 - 9 = -5 (left: -5 = 36) -> -5 - 36 = -41 (left: -41)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 - 0 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 - 0 = 6 (left: 6 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "4 * 9 = 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29 -> 2 * 27 = 54 (left: 29 54)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29 -> 2 * 27 = 54 (left: 29 54) -> 29 - 54 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "4 * 9 = 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 * 9 = 36"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> ",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 * 9 = 36"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> 4 ^ 9 = 262144 (left: 262144 36)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 * 9 = 36"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> 4 - 9 = -5 (left: -5 = 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36 -> 4 - 9 = -5 (left: -5 = 36) -> -5 - 36 = -41 (left: -41)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 * 3 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 * 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 * 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 - 1.5 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 * 15 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "It seems like the input was not provided. Please provide the numbers to continue."
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) ->  -> It seems like the input was not provided. Please provide the numbers to continue. -> Input: 4 6 10 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) ->  -> It seems like the input was not provided. Please provide the numbers to continue. -> Input: 4 6 10 12 -> 4 * 6 = 24 (left: 10 12 24)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 4 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 4 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "81"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)  -> 8 + 1 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)  -> 8 + 1 = 9 -> 8 - 1 = 7 (left: 7 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 15 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "81"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)  -> 8 + 1 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)  -> 8 + 1 = 9 -> 8 - 1 = 7 (left: 7 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 + 9 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 + 9 = 23 (left: 23) -> There are no possible next steps with the input of 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.5555555555556 + 1 = 2.5555555555556"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555556 (left: 1.5555555555556) -> 1.5555555555556 + 1 = 2.5555555555556 -> 1.5555555555556 * 1 = 1.5555555555556 (left: 1.5555555555556 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555556 (left: 1.5555555555556) -> 1.5555555555556 + 1 = 2.5555555555556 -> 1.5555555555556 * 1 = 1.5555555555556 (left: 1.5555555555556 1) -> 1.5555555555556 + 1 = 2.5555555555556 (left: 1 2.5555555555556)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7 -> 10 - 3 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) / (1 + 9) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps without an input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 23."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 + 9 = 23 (left: 23) -> There are no possible next steps with the input of 23. -> There are no possible next steps with the input of 23.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 + 9 = 23 (left: 23) -> There are no possible next steps with the input of 23. -> There are no possible next steps with the input of 23. -> There are no possible next steps with the input of 23.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8) -> 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555556 (left: 1.5555555555556)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555556 (left: 1.5555555555556) -> 1.5555555555556 + 1 = 2.5555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Input: 7 3 5 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Input: 7 3 5 2 -> 7 + 3 = 10 (left: 5 2 10)",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 63."
                }
            },
            "Step 8": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 + 2 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 - 2 = 46 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "48"
                }
            },
            "Step 8": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, there are no more possible operations to be performed on the number 48.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 63."
                }
            },
            "Step 7": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 7\nSteps:\n2 * 7 = 14 (left: 3 6 14)\n6 - 3 = 3 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 7) - (6 - 3)) +",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "No possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 6 - 3 = 3 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 6 - 3 = 3 ( -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 6 - 3 = 3 ( -> 6 + 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input has already been evaluated."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> N/A - Input has already been evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> N/A - Input has already been evaluated. -> N/A - Input has already been evaluated.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> 9 - 8 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9) ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)  -> -5 * 9 = -45 (left: -45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)  -> -5 * 9 = -45 (left: -45) -> -45 * 2 = -90 (left: -90)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input has already been evaluated."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> There are no possible next steps as the input has already been evaluated. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 * 5 ="
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input has already been evaluated."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated. -> There are no possible next steps as the input has already been evaluated. -> Input has already been evaluated.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3 -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18 -> 15 * 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 13 * 24 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 13 * 24 = 312 (left: 312) -> 31 + 2 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13) -> 13 / 2.6666666666666665 = 4.874999999999999 (left: 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5 as there are no valid operations that can be performed on the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 2 - 5 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 2"
                }
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "24 6 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 + 18 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There are no further possible next steps with the input 3.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 6 - 18 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 * 3 = 4.5 (left: 4.5 9 -> 4.5 / 9 = 0.5 (left: 0.5 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 * 3 = 4.5 (left: 4.5 9 -> 4.5 / 9 = 0.5 (left: 0.5 9) -> 0.5 * 9 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 * 6 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 * 6 = 54 (left: 54) -> None - this is a single number and cannot be combined further.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 * 6 = 54 (left: 54) -> None - this is a single number and cannot be combined further. -> None - this is a single number and cannot be combined further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 * 3 = 4.5 (left: 4.5 9",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 15 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 15 18) -> 15 / 18 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 32 / ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 32 /  -> 32 / 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 16 = 0.5 (left: 0.5 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 16 = 0.5 (left: 0.5 16) -> 0.5 + 16 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9 -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9 -> 2 + 7 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9 -> 2 + 7 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 / 5 = 0.8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8 -> 4 - 5 = -1 (left: -1 = 0.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8 -> 4 - 5 = -1 (left: -1 = 0.8) -> -1 / 0.8 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 3 + 9 = 12 (left: 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 3 + 9 = 12 (left: 12 -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 3 + 9 = 12 (left: 12 -> 12 + 8 = 20 (left: 8 20) -> 8 - 20 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 * 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 / 5 = 0.8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 / 5 = 0.8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8 -> 5 / 4 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8 -> 5 / 4 = 1.25 -> 5 / 4 = 1.25 (left: 1.25 = 1.25)",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 2 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you."
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> Possible next steps: -> There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you. -> It looks like the input is missing. Please provide the numbers for me to generate possible next steps. Thank you.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> Possible next steps: -> There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you. -> It looks like the input is missing. Please provide the numbers for me to generate possible next steps. Thank you. -> I'm sorry, but I need the numbers to generate possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 48 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 121 / 1 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> Possible next steps: -> There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step: 3."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 1 * 3 = 3 (left: 3 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 ( -> 6 - 10 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step: 3."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 - 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 - 1 = 2 -> 3 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible step for this input: 0.6875 * 2 = 1.375"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> There is only one possible step for this input: 0.6875 * 2 = 1.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there are not enough numbers provided."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one possible next step: 3."
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60) -> No possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.666666666666666 * 3.666666666666666 = 13.444444444444443"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666 -> 3.666666666666666 * 3.666666666666666 = 13.444444444444443 -> 3.666666666666666 / 3.666666666666666 = 1 (left: 1 * 3.666666666666666 = 3.666666666666666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666 -> 3.666666666666666 * 3.666666666666666 = 13.444444444444443 -> 3.666666666666666 / 3.666666666666666 = 1 (left: 1 * 3.666666666666666 = 3.666666666666666) -> 1 + 3.666666666666666 = 4.666666666666666 (left: 3.666666666666666 4.666666666666666)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 7) -> Input: 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.666666666666666 * 3.666666666666666 = 13.444444444444443"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666 -> 3.666666666666666 * 3.666666666666666 = 13.444444444444443 -> 3.666666666666666 /",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666 -> 3.666666666666666 * 3.666666666666666 = 13.444444444444443 -> 3.666666666666666 / -> 3.666666666666666 + 3.666666666666666 = 7.333333333333332 (left: 7.333333333333332)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 + 5 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 + 5 = 9 (left: 3 9) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 17 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 17 12) -> 17 + 12 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 17 12) -> 17 + 12 = 29 (left: 29) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 15"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 7) -> Input: 15 -> There is only one number given as input, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 7) -> Input: 15 -> There is only one number given as input, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666 -> 3.666666666666666 * 3.666666666666666 = 13.444444444444443",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 17 12) -> 17 + 12 = 29 (left: 29) -> There are no possible next steps with only one number provided. -> Please provide more than one number to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 17 12) -> 17 + 12 = 29 (left: 29) -> There are no possible next steps with only one number provided. -> Please provide more than one number to find possible next steps. -> Please provide the numbers you would like to find possible next steps for.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 - 14 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> There are no possible next steps for the input 1.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> There are no possible next steps for the input 1.25. -> 1.25 * 1 = 1.25 (left: 1.25 1.25)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 + 4) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 8 = 32 (left: 2 32 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 8 = 32 (left: 2 32 9) -> 2 * 32 = 64 (left: 9 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 8 = 32 (left: 2 32 9) -> 2 * 32 = 64 (left: 9 64) -> 9 * 64 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Without the input numbers, we are unable to provide the possible next steps for the calculation. Please provide the numbers to continue."
                }
            },
            "Step 7": {
                "Step": " -> There are no possible next steps as the input is missing. Can you please provide the numbers to continue the calculation? -> Without the input numbers, we are unable to provide the possible next steps for the calculation. Please provide the numbers to continue. -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> There are no possible next steps as the input is missing. Can you please provide the numbers to continue the calculation? -> Without the input numbers, we are unable to provide the possible next steps for the calculation. Please provide the numbers to continue. -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 8 9) -> 8 - 2 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 8 9) -> 8 - 2 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "576"
                }
            },
            "Step 7": {
                "Step": "4 * 8 = 32 (left: 2 32 9) -> 2 * 32 = 64 (left: 9 64) -> 9 * 64 = 576 (left: 576) -> 5 * 7 = 35",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 8 = 32 (left: 2 32 9) -> 2 * 32 = 64 (left: 9 64) -> 9 * 64 = 576 (left: 576) -> 5 * 7 = 35 -> 7 / 5 = 1.4 (left: 1.4 = 35)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 / 2 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 / 2 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 / 2 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 4": {
                "Step": "",
                "Pruning": null
            },
            "Step 5": {
                "Step": " -> There are no possible next steps as the input is missing. Can you please provide the numbers to continue the calculation?",
                "Pruning": null
            },
            "Step 6": {
                "Step": " -> There are no possible next steps as the input is missing. Can you please provide the numbers to continue the calculation? -> Without the input numbers, we are unable to provide the possible next steps for the calculation. Please provide the numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> 1.25 + 1 = 2.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> 1.25 + 1 = 2.25 -> 1.25 * 1 = 1.25 (left: 1.25",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 1.25."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 -> There are no possible next steps with only one number provided. -> Please provide more numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.1875"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875) -> 0.1875 + 2 = 2.1875",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875) -> 0.1875 + 2 = 2.1875 -> 2.1875 / 2 = 1.09375 (left: 1.093",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 1.25."
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide more than one number to generate possible next steps."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None - this is the final number."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left:  -> There are no more possible next steps with the given input."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142) -> 1.7142857142857142 - 1 = 0.7142857142857142"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Input: 5 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Input: 5 10 -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Input: 5 10 -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.28571428571 1"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1 / 1.28571428571 \u2248 0.77777777778 (left: 0.77777777778 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1 / 1.28571428571 \u2248 0.77777777778 (left: 0.77777777778 1) -> 1 / 0.77777777778 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63) -> 6 + 63 = 69 (left: 69)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.28571428571 1"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 1 2.28571428571)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.28571428571 1"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 1 2.28571428571)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 1 2.28571428571) -> 1 * 2.28571428571 = 2.28571428571 (left: 2.28571428571 2.28571428571)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 + 3 = 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.28571428571 1"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 * 1 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 / 1 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.28571428571 1"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 7 = 21 (left: -> 5 + 2 = 7 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 1) -> 1.28571428571 + 1 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.28571428571 1"
                }
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 - 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "33 is a single number, so there are no possible next steps to calculate."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 46 - 13 = 33 (left: 33) -> 33 is a single number, so there are no possible next steps to calculate. -> 33 - 2 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "32 / 2 = 16"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> 32 / 2 = 16 -> 16 + 16 = 32 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 46 - 13 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 46 - 13 = 33 (left: 33) -> 33 is a single number, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the number 32 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is already a single number. -> There are no possible next steps for the number 32 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is already a single number. -> There are no possible next steps for the number 32 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the number 32 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> 32 / 2 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46) -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression. -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46) -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression. -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46) -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 0"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 0) -> 9 - 0 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression."
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46) -> There are no possible next steps with the input 3.46 as it is a single number and not an equation or expression. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "33 is a single number, so there are no possible next steps to calculate."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32) -> 32 * 2 = 64 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846) -> 3.3846153846153846 * 2 = 6.769230769230769 (left: 6.769230769230769)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65) -> 65 / 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65) -> 65 / 13 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 + 3 = 10 (left: 10 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 + 3 = 10 (left: 10 3) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65) -> 6 + 5 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2.33 (left: 2.33 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2.33 (left: 2.33 3) -> 2.33 + 3 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2.33333 (left: 2.33333 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2.33333 (left: 2.33333 3) -> 2.33333 / 3 = 0.77777 (left: 0.77777)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12 -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> ",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 7 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 7 3) -> 7 / 4 = 1.75 (left: 1.75 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 - 7 = -4 (left: -4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 - 7 = -4 (left: -4 3) -> -4 - 3 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 - 20 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not a combination of numbers with operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> 40 * 2 = 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 5 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 5 8  -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 5 8  -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 - 20 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 12 * 16 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 12 * 16 = 192 (left: 192) -> 19 + 2 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12) -> 0.25 * 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> It appears that you did not provide any input. Please enter a set of numbers to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> 8 / 4 = 2 (left: 2 6 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with only one number. -> Please provide more numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> Input: 1 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> Input: 1 12 -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> Input: 1 12 -> 1 + 12 = 13 (left: 12 13) -> 12 / 13 = 0.9230769230769231 (left: 0.9230769230769231)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> It appears that you did not provide any input. Please enter a set of numbers to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> It appears that you did not provide any input. Please enter a set of numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 * 4 = 12 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3 -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.714285714285714"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 / 7 = 0.7142857142857143 (left: 0.714285714285714 -> 0.714285714285714 -> 0.714285714285714 + 0.714285714285714 = 1.428571428571428",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 / 7 = 0.7142857142857143 (left: 0.714285714285714 -> 0.714285714285714 -> 0.714285714285714 + 0.714285714285714 = 1.428571428571428 -> 0.714285714285714 / 0.714285714285714 = 1 (left: 1 0.714285714285714)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 15 - 4 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 15 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 15 11) -> 11 / 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 15 11) -> 11 / 6 =  -> 11 / 6 = 1.8333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "88"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> None, as there is only one number in the input. -> There is only one number in the input, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 11 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 - 5.09 = 0.91 (left: 0.91)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 / 7 = 0.7142857142857143 (left: 0.714285714285714",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 / 7 = 0.7142857142857143 (left: 0.714285714285714 -> 0.714285714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.714285714285714"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 / 7 = 0.7142857142857143 (left: 0.714285714285714 -> 0.714285714285714 -> 0.714285714285714",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "88"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19) -> 13 / 19 \u2248 0.6842 (left: 0.6842)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "88"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "11 / 6 = 1.8333"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 15 11) -> 11 / 6 =  -> 11 / 6 = 1.8333 -> 11 / 6 = 1.8333 (left: 1.8333)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 / 2 = 0.5833333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 + 8 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 + 8 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 8 - 4 = 4 (left: 4",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 9 13"
                }
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (13 + 2)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (13 - 7)) + 9 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 9 13"
                }
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (13 + 2)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.3846153846154"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 * 2 = 2.7692307692308",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (13 + 2)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.5555555555555556",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.5555555555555556 -> 0.7777777777777778 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: 9 + (13 + (9 - 7)) = 24"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9) -> 9 - 1.5 = 7.5 (left: 7.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9) -> 9 - 1.5 = 7.5 (left: 7.5 9) -> 9 - 7.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 5 * 7 = 35 (left: 3",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18) -> 9 - 18 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: 9 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: 9 6) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 9 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers for the next calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 15 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 15 18) -> 15 + 18 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 27"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 9 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 9 9"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5. -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 93"
                }
            },
            "Step 7": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 11 - 3 = 8 (left: 8 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 11 - 3 = 8 (left: 8 7 -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 1.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) / 2) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "15 93"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 93"
                }
            },
            "Step 7": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 15 * 93 = 1395 (left: 1395)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 93"
                }
            },
            "Step 8": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 93 - 15 = 78 (left: 15 78)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "15 93"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 93"
                }
            },
            "Step 7": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 15 + 93 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 93"
                }
            },
            "Step 8": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 93 * 15 = 1395 (left: 1395)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 1.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "15 93"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 93"
                }
            },
            "Step 7": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 93 / 15 = 6.2 (left: 6.2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 93"
                }
            },
            "Step 8": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 15 / 93 = 0.161290 (left: 0.161290)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 1.5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "15 93"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 93"
                }
            },
            "Step 7": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 93 - 15 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 93"
                }
            },
            "Step 8": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93) -> 50 * 25 =",
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16) -> 16 - 9 = 7 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "42 + 2 = 44 "
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44  -> 2 - 42 = -40 (left: -40)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.375"
                }
            },
            "Step 8": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 9 / 24 = 0.375 (left: 0.375) -> 0.375 + 2 = 2.375",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 - 3 = 10 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 - 3 = 10 (left: -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "42 + 2 = 44 "
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44  -> 42 - 2 = 40 (left: 40 + 2 = 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44  -> 42 - 2 = 40 (left: 40 + 2 = 42) -> 2 * 40 = 80 (left: 80 = 42)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 9 / 24 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 9 11 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 9 11  -> 6 - 4 = 2 (left: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 9 11  -> 6 - 4 = 2 (left: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 7"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16) -> 16 - 9 = 7 (left: 9 7) -> 9 - 7 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 22.75. It is already a single number."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. It is already a single number. -> There are no possible next steps with the input 22.75. It is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 7 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "42 + 2 = 44 "
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44  -> None, the equation is already simplified.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 7  -> 6 * 7 = 42 (left: 42) -> 42 + 2 = 44  -> None, the equation is already simplified. -> None, the equation is already simplified.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. It is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 22.75."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.33"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 - 3 = 10 (left: -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 - 3 = 10 (left: -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number. -> There are no possible next steps for the input 4.33 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 12 30"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 12 24) -> 12 * 12 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 12 24) -> 12 * 12 = -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5 -> 2 / 1.5 = 1.3333 (left: 1.3333 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5 (left: 2 3.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5 (left: 2 3.5) -> 2 - 3.5 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 - 8 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5 (left: 2 3.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5 (left: 2 3.5) -> 2 + 3.5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 - 8 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5 = 2"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 1.5 + 2 = 3.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 2 - 1.5 = 0.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 ( -> 6 - 4 = 2 -> 6 / 4 = 1.5 (left: 1.5 = 2) -> 2 - 1.5 = 0.5 -> 2 / 1.5 = 1.33333 (left: 0.5 1.33333)",
                "Pruning": null
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. No more steps can be taken.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5) -> 1.5 / 5 = 0.3 (left: 0.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5) -> 1.5 / 5 = 0.3 (left: 0.3) -> 0.3 + 0.3 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "40"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> 40 + 2 = 42",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> 40 + 2 = 42 -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9 -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9 -> 16 / 4 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8) -> 8 - -1 = 9 (left: 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "40"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8) -> 8 - -1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 12"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9 -> 16 / 4 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 -> 5 + 4 = 9 (left: 9 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 -> 5 + 4 = 9 (left: 9 1) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 8 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 1 - 8 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 / 1.7 = 5.88 (left: 1.7 5.88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 / 1.7 = 5.88 (left: 1.7 5.88) -> 5.88 / 1.7 = 3.4588 (left: 3.4588)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 8 = 9 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 1.7 + 10 = 11.7 (left: 11.7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20) -> 10 * 20 = 200 (left: 200)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 8 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 8 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 8 + 8 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 8 + 8 = 16 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 8 = 9 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.7 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 - 1.7 = 8.3 (left: 8.3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 - 1.7 = 8.3 (left: 8.3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.7 10"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 1.7 + 10 = 11.7 (left: 11.7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 8 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 8 * 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 8 * 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 8 = 9 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.7 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 - 1.7 = 8.3 (left: 8.3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.7 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 / 1.7 = 5.88235294118 (left: 5.88235294118)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 10 - 1.7 = 8.3 (left: 8.3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 8 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18) -> 1 + 8 = 9 (left: -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 1.7 + 10 = 11.7 (left: 11.7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.7 10"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 1.7 + 10 = 11.7 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.7 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.7 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 / 10 = 1.7 (left: 1.7 10) -> 1.7 + 10 = 11.7 (left: 11.7)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 10"
                }
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38 -> -36 + 2 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615) -> 0.4615 + 2 = 2.4615 (left: 2.4615)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Subtract a number to get a new difference"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 7 - 8 = -1 (left: -1 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 7 - 8 = -1 (left: -1 8 8) -> -1 * 8 = -8 (left: -8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 44."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Subtract a number to get a new difference"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "- Subtract a number to get a new difference"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 12 - 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "- Subtract a number to get a new difference"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There are no possible next steps for the number 48.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There are no possible next steps for the number 48. -> There are no possible next steps for the number 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Subtract a number to get a new difference"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> - Divide a number to get a new quotient",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> - Divide a number to get a new quotient -> - Add a number to get a new sum",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> No further steps can be taken with the input of 8.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> No further steps can be taken with the input of 8. -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Subtract a number to get a new difference"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 2 - 8 = -6 (left: -6 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> 2 - 8 = -6 (left: -6 8 14) -> 14 * (-6) = -84 (left: -84)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "- Subtract a number to get a new difference"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Subtract a number to get a new difference"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> - Divide a number to get a new quotient",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> No possible next steps with just one number. -> - Subtract a number to get a new difference -> - Divide a number to get a new quotient -> - Add a number to get a new sum",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> 4.909 + 4 = 8.909",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 22.5"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 - 2 = 20.5 (left: 20.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 22.5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 / 2 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.909 + 4 = 8.909"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 * 11 = 297 (left: 297)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 11 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 22.5"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 / 2 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 22.5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 / 2 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.909 + 4 = 8.909"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12) -> 11 + 12 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 + 11 = 20 (left: 5 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 + 11 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 22.5"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 - 2 = 20.5 (left: 20.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 22.5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 / 2 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.909 + 4 = 8.909"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 - 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 11 * 3 = 33 (left: 3 33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 22.5"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 2 + 22.5 = 24.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 2 + 22.5 = 24.5 -> 2 * 22.5 = 45.0 (left: 22.5 45.0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 * 9 = 45 (left: 9 9 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 * 9 = 45 (left: 9 9 45) -> 9 + 9 = 18 (left: 18 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 22.5"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 22.5 / 2 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 22.5"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 * 5 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2 22.5) -> 2 + 22.5 = 24.5 (left: 24.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.909 + 4 = 8.909"
                }
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40) -> 23 + 40 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 11 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 11 2) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 11 2) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input of 5.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 13."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> There are no possible next steps with the input of 13. -> 13 / 2 = 6.5 (left: 2 6.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> There are no possible next steps with the input of 13. -> 13 / 2 = 6.5 (left: 2 6.5) -> 2 + 6.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 5.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 5 + 4 = 9 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40) -> 23 + 40 = 63 (left: 63) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "- 11 / 2 = 5.5"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5 -> -11 / 2 = -5.5 (left: -5.5 = 5.5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> There are no possible next steps with the input of 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 5.5."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 11 2) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input of 5.5. -> There are no possible next steps with the input of 5.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 11 2) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input of 5.5. -> There are no possible next steps with the input of 5.5. -> There are no possible next steps with the input of 5.5.",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left:  -> It looks like you didn't provide an input. Could you please enter a set of numbers for me to find possible next steps for you?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left:  -> It looks like you didn't provide an input. Could you please enter a set of numbers for me to find possible next steps for you? -> It looks like you didn't provide an input. Could you please enter a set of numbers for me to find possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 / 2 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 / 2 = 5 (left: 6 5) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 5 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 5 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 5 4 8) -> 5 + 4 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 5 4 8) -> 5 + 4 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 * 10 = 50 (left: 50 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 * 10 = 50 (left: 50 48) -> 50 + 48 = 98 (left: 98)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 5 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 5 4 10) -> 4 + 10 = 14 (left: 5 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 5 4 10) -> 4 + 10 = 14 (left: 5 14) -> 5 * 14 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 10) -> Input:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 10) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 5"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19) -> 11 / 19 = 0.5789473684210527 (left: 0.5789473684210527)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 + 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 5"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input: -> Please provide a set of numbers to find the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 5"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132) -> 132 / 2 = 66 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 5"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> Possible next steps: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 5"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 5"
                }
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number. -> Please provide more numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number. -> Please provide more numbers to continue finding possible next steps. -> - 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 7 + 9 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 7 + 9 = 16 (left: 3 16) -> 16 - 3 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 7 + 9 = 16 (left: 3 16) -> 16 - 3 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "96"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 + 2 = 98",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 + 2 = 98 -> 98 - 2 = 96 (left: 96 96)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "96"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the number 96 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the number 96 as it is already a single number. -> There are no possible next steps for the number 96 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "96"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96. -> There are no possible next steps with the input 96.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "96"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 / 6 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "96"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 - 9 = 87 (left: 87)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 - 14 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left:  -> There are no more possible next steps with the current input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left:  -> There are no more possible next steps with the current input. -> There are no more possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no more possible next steps with the current input."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left:  -> There are no more possible next steps with the current input. -> There are no more possible next steps with the current input. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "34"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 13 = 25 (left: 9 25) -> 25 + 9 = 34 (left: 34) -> There are no possible next steps with the input of 34.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 / 7 = 1 (left: 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 / 7 = 1 (left: 1 -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "34"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 13 = 25 (left: 9 25) -> 25 + 9 = 34 (left: 34) -> There are no possible next steps for the input 34 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 13 = 25 (left: 9 25) -> 25 + 9 = 34 (left: 34) -> There are no possible next steps for the input 34 as it is a single number. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 13 = 25 (left: 9 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 13 = 25 (left: 9 25) -> 25 + 9 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5. -> There are no possible next steps with the input 6.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5) -> 6.5 - 8 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, the game is complete.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, the game is complete. -> No possible next steps, the game is complete.",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> 5.33 - 8 = -2.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Equation is already solved."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved. -> Equation is already solved. No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Equation is already solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 28."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28. -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5.33 - 8 = -2.67"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> 5.33 - 8 = -2.67 -> 5.33 + 8 = 13.33 (left: 13.33 - 8 = 5.33)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.67 (left: 0.67 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.67 (left: 0.67 12) -> 0.67 * 12 = 8.04 (left: 8.04)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 + 6 + 8 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Equation is already solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Equation is already solved."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 - -> 6 - 8 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 - -> 6 - 8 = -2 (left: -2) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Equation is already solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Equation is already solved."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Equation is already solved."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4) -> 4 + 4 = 8 -> 4 ^ 4 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "37"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 - 8 = 29 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "37"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 + 8 = 45 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> None, as there is only one number left. -> The only possible next step is to output the remaining number: 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is already a single number. -> There are no possible next steps for the input 5.33 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39) -> 39 - 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 150 / 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 4) -> 1.3333333333333333 * 4 = 5.333333333333333 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 - 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17) -> 6 - 17 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17) -> 6 - 17 = -11 (left: -11) -> -11 * 2 = -22 (left: -22)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 2 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 4 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 4 10 12) -> 4 * 10 = 40 (left: 10 12 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 4 10 12) -> 4 * 10 = 40 (left: 10 12 40) -> Input: 22 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72/2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42 -> 40 - 2 = 38 (left: 2 38 42)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 9 * 10 = 90 (left: 12 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 9 * 10 = 90 (left: 12 90) -> 12 + 90 = 102 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible -> There are infinite possible next steps depending on the specific rules or operations you want to apply to the input \"Possible\". Without additional context or constraints, it is not possible to determine a specific next step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8) -> Possible next steps: -> There seems to be some confusion in the input provided. Could you please clarify or provide a new set of numbers for me to suggest possible next steps?",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> No possible next steps for the number 0.6363636363636364.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 + 4 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 + 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 1 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 1 7 10) -> 10 - 1 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 1 7 10) -> 10 - 1 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "63"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 1 7 10) -> 10 - 1 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 7 10) -> 10 - 1 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9 -> 9 + 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 + 12 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 - 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1) -> Sorry, please provide a valid input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 10 * 3 = 30",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 3 * 6 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 3 * 6 = 18 -> 6 + 18 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 * 30 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 6 8) -> 8 / ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 6 8) -> 8 /  -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 2 = 4.67 (left: 4.67)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 30) -> 0.5 - 30 = -29.5 (left: -29.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 - 4 = 4 (left: 4 30) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 120 / 6 = 20 (left: 20 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 120 / 6 = 20 (left: 20 13) -> 20 + 13 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "17 29"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17 29) -> 17 + 29 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.08"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 (left: 1.08) -> 1 / 0.08 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "130 / 2 = 65"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 2280 / 19 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "33"
                }
            },
            "Step 7": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 120 / 6 = 20 (left: 20 13) -> 20 + 13 = 33 (left: 33) -> 33 / 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "130 / 2 = 65"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 + 6 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 / 2 = 65 -> 130 / 10 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 52."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 (left: 1.08)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 * 6 = 78 (left: 78 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 * 6 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: 1716)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 * 6 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: 1716) -> 17 + 16 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "17 29"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "41 + 2 = 43"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 + 2 = 43 -> 41 + 2 = 43 (left: 43 43)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 + 2 = 43 -> 41 + 2 = 43 (left: 43 43) -> 43 / 43 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "130 / 2 = 65"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 + 6 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 + 6 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 + 6 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 / 2 = 65",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "17 29"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17 29) -> 17 + 29 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 52."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 52."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 - 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 - 6 =  -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 52."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 3 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.66667 (left: 2.66667 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.66667 (left: 2.66667 9) -> 9 - 2.66667 = 6.33333 (left: 6.33333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.66667 (left: 2.66667 9) -> 9 - 2.66667 = 6.33333 (left: 6.33333) -> 6.33333 * 2 = 12.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "99 + 1 = 100"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> 99 + 1 = 100 -> 99 - 1 = 98 (left: 98 1 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> 99 + 1 = 100 -> 99 - 1 = 98 (left: 98 1 100) -> 98 - 1 = 97 (left: 97 100)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.33 * 2 = 12.66"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66 -> 6.33 * 2 = 12.66 (left: 12.66 12.66)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66 -> 6.33 * 2 = 12.66 (left: 12.66 12.66) -> 12.66 + 12.66 = 25.32",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> 1 + 3 + 6 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 5 5 5 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 5 5 5 5 -> 5 * 5 = 25 (left: 5 5 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 5 5 5 5 -> 5 * 5 = 25 (left: 5 5 25) -> 5 + 5 = 10 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "99 + 1 = 100"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> 99 + 1 = 100 -> 1 * 99 = 99 (left: 99 1 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> 99 + 1 = 100 -> 1 * 99 = 99 (left: 99 1 100) -> 100 - 99 = 1 (left: 1 100)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 6."
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6.33333 * 2 = 12.66666"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> 99 + 1 = 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 + 2 = 35 -> 33 * 2 = 66 (left: 66 35)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 + 2 = 35 -> 33 * 2 = 66 (left: 66 35) -> 66 + 35 = 101 (left: 101)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 - 10 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 10"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 10"
                }
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 4": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33) -> 33 - 10 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33) -> 33 - 10 = 23 (left: 23) -> There are no possible next steps with just the number 23.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33) -> 33 - 10 = 23 (left: 23) -> There are no possible next steps with just the number 23. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "33 + 2 = 35"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "33 + 2 = 35"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step: 33 - 33 = 0"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> There is only one possible next step: 33 - 33 = 0 -> 33 * 33 = 1089",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> There is only one possible next step: 33 - 33 = 0 -> 33 * 33 = 1089 -> 33 + 33 = 66 (left: 66 = 1089)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)  -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)  -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)  -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16) -> 8 - 1 = 7 (left: 7 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> There is only one possible next step: 33 - 33 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33) -> 33 - 10 = 23 (left: 23) -> None - there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 2 = 11 (left: 3 11 10) -> 3 * 11 = 33 (left: 10 33) -> 33 - 10 = 23 (left: 23) -> None - there is only one number provided. -> There is only one number provided, so there are no possible next steps as there are no operations that can be performed on a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)  -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 5 + 7 = 12 (left: 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 5 + 7 = 12 (left: 10 -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39) -> 39 / 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 * 9 = 27"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 3 * 9 = 27 -> 3 + 9 = 12 (left: 12 = 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 3 * 9 = 27 -> 3 + 9 = 12 (left: 12 = 27) -> 12 - 27 = -15 (left: -15 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps with the input -4.",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 48"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 20 - 10 = 10 (left: 10 30",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 20 - 10 = 10 (left: 10 30 -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 20 - 10 = 10 (left: 10 30 -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 7 -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 7 - -> 7 + 2 = 9 (left: -)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 48"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 48"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Input: 7 3 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Input: 7 3 2 -> 3 - 2 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 + 27 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 2 2 8) -> 8 / 2 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 2 2 8) -> 8 / 2 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 4": {
                "Step": "9 / 1 = 9 (left: 2 2 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 1 = 9 (left: 2 2  -> 2 * 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 1 = 9 (left: 2 2  -> 2 * 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There is only one possible next step: 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 9) -> 2 * 4 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 9) -> 2 * 4 = 8 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 11 + 19 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 11 + 19 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 * 6 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 6) -> 7 * 6 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 20"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 2.75",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 2.75 -> There are no possible next steps with the input of 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 20"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20) -> 2 + 20 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 5 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 1 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 12 13) -> 13 / 1 = 13 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 12 13) -> 13 / 1 = 13 (left: -> There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 12 13) -> 13 / 1 = 13 (left: -> There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated. -> 13 * 1 = 13 (left: 13 / 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 1 12 13) -> 13 / 1 = 13 (left: -> There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated. -> 13 * 1 = 13 (left: 13 / 1) -> 13 - 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "17 / 3 = 5.666666666666667"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 + 2 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 10 = 23 (left: 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 10 = 23 (left: 17) -> 17 * 8 = 136 (left: 8 136)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 10 = 23 (left: 17) -> 17 * 8 = 136 (left: 8 136) -> 8 * 17 = 136 (left: 17)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "40 + 2 = 42"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 1 12 13) -> 13 / 1 = 13 (left: -> There are no possible next steps as the equation 13 / 1 = 13 is already simplified and cannot be further manipulated. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "40 + 2 = 42"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 + 2 = 42 -> 40 - 2 = 38 (left: 38 42)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 2 12 13) -> 13 + 2 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 2 12 13) -> 13 + 2 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 3 * 17 = 51 (left: 51)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 3 * 17 = 51 (left: 51) -> 7 + 2 = 9 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input -4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input -4."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no valid operations that can be performed with the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no valid operations that can be performed with the input -4. -> There are no valid operations that can be performed with the input -4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80) -> 80 / 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 17"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17) -> 17 - 0.769 = 16.231 (left: 0.769)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17) -> 17 - 0.769 = 16.231 (left: 0.769) -> 0.769 - 0.769 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input -4."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left:  -> - Multiplying the first two numbers: 2 * 8 = 16 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 17 / 3 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 17 / 3 = -> 17 / 3 = 5.666666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input -4."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with. -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 4 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 4 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 4 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no more possible next steps with the current input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None, as there is only one number left. -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 3 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 3 = 18 (left: 4 18) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 * 3 = 18 (left: 4 18) -> Possible next steps: -> There are no more possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps for the input 18 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps for the input 18 as it is a single number. -> There are no possible next steps for the input 18 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156) -> 10 * 156 = 1560 (left: 1560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12  -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12  -> 12 / 6 = 2 (left: 2) -> There are no possible next steps with only one number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.18518518518518517"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 + 42 = 54 (left: 10 54) -> 10 / 54 = 0.18518518518518517 (left: 0.18518518518518517) -> 0.18518518518518517 - 2 = -1.8148148148148148",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 + 42 = 54 (left: 10 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 + 42 = 54 (left: 10 54) -> 10 / 54 = 0.18518518518518517 (left: 0.18518518518518517)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 + 5 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 120 / 13 = 9.23 (left: 9.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 / 12 = 0.8333 (left: 0.8333 12 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 / 12 = 0.8333 (left: 0.8333 12 42) -> 0.8333 * 12 = 10 (left: 10 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 / 12 = 0.8333 (left: 0.8333 12 42) -> 0.8333 * 12 = 10 (left: 10 42) -> 10 * 4 = 40 (left: 40 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "40 42"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 / 12 = 0.8333 (left: 0.8333 12 42) -> 0.8333 * 12 = 10 (left: 10 42) -> 10 * 4 = 40 (left: 40 42) -> 40 * 42 = 1680 (left: 1680)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 7 12 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 12 - 7 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 5 -> There are no possible next steps with only one number provided. Please provide more numbers for further calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 5 -> There are no possible next steps with only one number provided. Please provide more numbers for further calculations. -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "40 42"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 / 12 = 0.8333 (left: 0.8333 12 42) -> 0.8333 * 12 = 10 (left: 10 42) -> 10 * 4 = 40 (left: 40 42) -> 40 + 42 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 5 -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 + 8 = 20"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 -> 20 / 2 = 10 (left: 12 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 -> 20 / 2 = 10 (left: 12 10) -> 12 * 10 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 = 96 (left: 96) -> 96 / 2 = 48",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 = 96 (left: 96) -> 96 / 2 = 48 -> 96 - 2 = 94 (left: 94)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 9.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 + 8 = 20"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 -> 20 / 8 = 2.5 (",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 + 12 = 19",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 + 12 = 19 -> 7 * 12 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "96"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 + 8 = 20"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 9.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5) -> No possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "No possible next steps with the input 5."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5) -> No possible next steps with the input 5. -> No possible next steps with the input 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5) -> No possible next steps with the input 5. -> No possible next steps with the input 5. -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5) -> There are no possible next steps for the input 9.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 9.5."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5) -> There are no possible next steps for the input 9.5. -> There are no possible next steps for the input 9.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5) -> There are no possible next steps for the input 9.5. -> There are no possible next steps for the input 9.5. -> There are no possible next steps for the input 9.5.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with just the number 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.33 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 * 6 \u2248 7.98 (left: 7.98 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 * 6 \u2248 7.98 (left: 7.98 8) -> 7.98 / 8 = 0.9975 (left: 0.9975)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 * 6 \u2248 7.98 (left: 7.98 8) -> 7.98 / 8 = 0.9975 (left: 0.9975) -> There is only one number given, so there are no possible arithmetic operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192) -> 1 * 9 + 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 10 = 50",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 - 5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 / 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 / 5 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 / 5 \u2248 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99) -> 7 * 99 = 693 (left: 693)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 - 5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 / 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 - 5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 % 3 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 63 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 63 11) -> 63 * 11 = 693 (left: 693)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 ^ 3 = 125 (left: 2 125)",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20 -> 20 / 2 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "13 / 3 = 4.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as there are no other numbers provided to perform operations with. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 21."
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No calculations can be done without numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input given. -> There are no possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input given. -> There are no possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 + 5 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 2 4 7) -> 4 / 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 2 4 7) -> 4 / 2 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3  -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps as all numbers are the same.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.8888888888888888"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> There are no more possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 4": {
                "Step": "8 + 13 = 21 (left: 2 6 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 13 = 21 (left: 2 6 21) -> 21 - 2 = 19 (left: 6 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 13 = 21 (left: 2 6 21) -> 21 - 2 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no more possible next steps with the current input."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> There are no more possible next steps with the current input. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> There are no more possible next steps with the current input. -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 2"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.8888888888888888"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 / 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8888888888888888"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776 -> 0.8888888888888888 / 2 = 0.4444444444444444",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "11 / 2 = 5.5"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 / 2 = 5.5 -> 2 + 11 = 13 (left: 13 5.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 / 2 = 5.5 -> 2 + 11 = 13 (left: 13 5.5) -> 13 + 5.5 = 18.5 (left: 18.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 2"
                }
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> There are no possible next steps for the number 92 with the given operators.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> There are no possible next steps for the number 92 with the given operators. -> There are no possible next steps for the number 92 with the given operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 2.6666 * 2 = 5.3332 (left: 2.6666 5.3332)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 2.6666 * 2 = 5.3332 (left: 2.6666 5.3332) -> 2.6666 + 5.3332 = 8.9998 (left: 8.9998)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.3333 * 2 = 2.6666"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 8 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 8 4 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 + 2 = 3.3333",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 + 2 = 3.3333 -> 1.3333 + 2 = 3.3333 (left: 3.3333)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the number 92 with the given operators."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> - Input new numbers to continue the calculation",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 8 6) -> 8 / 6 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "12 + 8 = 20 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 8 = 20 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.3333 * 2 = 2.6666"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64) -> 120 * 64 = 7680 (left: 7680)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 4": {
                "Step": "12 + 8 = 20 (left: 8 10 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 8 = 20 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 8 = 20 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 8 4 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 8 4 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6 10) -> 0.6 + 10 = 10.6 (left: 10.6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the number 92 with the given operators."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160) -> 12 + 160 = 172 (left: 160 172)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> There is only one number, so there are no possible next steps. -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> There is only one number, so there are no possible next steps. -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333) -> None - unable to perform any operations with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 / 2.67 = 4.49 (left: 4.49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 / 2.67 = 4.49 (left: 4.49) -> 4 + 49 = 53",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.33 + 2 = 3.33"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33 -> 1.33 + 2 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps for calculations."
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 8 * 14 = 112 (left: 112 17)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None - unable to perform any operations with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.33 + 2 = 3.33"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33 -> 1.33 * 2 = 2.66 (left: 2.66 2 3.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33 -> 1.33 * 2 = 2.66 (left: 2.66 2 3.33) -> 2.66 + 2 = 4.66 (left: 3.33 4.66)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps for calculations."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Input: 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Input: 5 -> 5 - 5 = 0 (left: 0 5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 3 + -8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "None - unable to perform any operations with the given input."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333) -> None - unable to perform any operations with the given input. -> None - unable to perform any operations with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333) -> None - unable to perform any operations with the given input. -> None - unable to perform any operations with the given input. -> None - unable to perform any operations with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 * 12 = 32.04 (left: 32.04)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 * 12 = 32.04 (left: 32.04) -> There are no possible next steps with the input 32.04.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 32.04."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 * 12 = 32.04 (left: 32.04) -> There are no possible next steps with the input 32.04. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "None - unable to perform any operations with the given input."
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333) -> None - unable to perform any operations with the given input. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.33 + 2 = 3.33"
                }
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 + 10 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 + 10 = 16 (left: 4 16) -> 4 * 16 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the input numbers so that I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input: -> Please provide a set of numbers to determine possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 6 * 2 = 12 (left: 12 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 6 * 2 = 12 (left: 12 5) -> 12 + 5 = 17 (left: 5 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 6 * 2 = 12 (left: 12 5) -> 12 + 5 = 17 (left: 5 17) -> 5 + 17 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 / 2 = 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 / 6 = 2 (left: 2 2 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There is only one possible next step: you can't perform any operation with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "64"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 + 10 = 16 (left: 4 16) -> 4 * 16 = 64 (left: 64) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 + 10 = 16 (left: 4 16) -> 4 * 16 = 64 (left: 64) -> There is only one number given, so there are no possible next steps to calculate. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> None. The equation is already simplified to its final form: 12 / 2 = 6.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> None. The equation is already simplified to its final form: 12 / 2 = 6. -> No further steps are needed as the equation is already simplified to its final form: 12 / 2 = 6.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further. -> I apologize for the oversight. Please provide the numbers so I can generate possible next steps for you.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 7 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 7 56) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 - 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 16 * 8 = 128 (left",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with just one number. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8) -> 3.5 + 8 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 9 / 3 = 3 (left: 3) -> 8 * 3 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 112 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3.3333333333333335"
                }
            },
            "Step 8": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.3333333333333335 (left: 3.3333333333333335) -> 3.3333333333333335 * 3.3333333333333335 = 11.111111111111112",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)  ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)   -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9.02 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 / 9 = 1.33 (left: 1.33 10 12) -> 12 / 1.33 = 9.02 (left: 9.02 12) -> 9.02 - 12 = -2.98 (left: -2.98)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 / 9 = 1.33 (left: 1.33 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 / 9 = 1.33 (left: 1.33 10 12) -> 12 / 1.33 = 9.02 (left: 9.02 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 - 10 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 - 10 = 3 (left: 3 10) -> 10 / 3 = 3.3333333333333335 (left: 3.3333333333333335)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 16"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 / 8 = 0.21875 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "110 / 2 = 55"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 10 * 20 = 200 (left: 5 200)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 10 * 20 = 200 (left: 5 200) -> 5 * 200 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 / 2 = 55",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 / 3 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Input: 5 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35) -> 35 * 8 = 280 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 26"
                }
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 - 7 = -5.6 (left: -5.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 5 9 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 2 = 9 (left: 5 9 7) -> 5 / 9 = 0.5555555555555556 (left: 0.5555555555555556 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 2 = 9 (left: 5 9 7) -> 5 / 9 = 0.5555555555555556 (left: 0.5555555555555556 7) -> 0.5555555555555556 + 7 = 7.555555555555556 (left: 7.555555555555556) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 7 7"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 +",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 + -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 + -> 7 + 8 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35) -> 35 / 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35) -> 35 / 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 56"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 * 2 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 * 2 = 14 (left: 14 12) -> 14 + 12 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 * 2 = 14 (left: 14 12) -> 14 + 12 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left:  -> Please provide a set of numbers to continue the sequence.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left:  -> Please provide a set of numbers to continue the sequence. -> It appears that the sequence can continue in multiple ways depending on the set of numbers provided. Please provide the next set of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 56"
                }
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48 + "
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) -> 48 +  -> 48 + 8 = 56 (left: )",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "48 + "
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) -> 48 +  -> 48 + 8 = 56 (left: )",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "48 + "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 10 -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 10 -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "48 + "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There is only one number, so no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There is only one number, so no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There is only one number, so no possible next steps. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There is only one number, so no possible next steps. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) -> 48 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the number 50."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 10 -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50. -> There are no possible next steps for the number 50.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 10 -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50. -> There are no possible next steps for the number 50. -> There are no possible next steps for the number 50.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66 -> 1.33 * 2 = 2.66 (left: 2.66)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10 20) -> 0 + 10 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7) -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 2 3 3) -> 3 - 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 2 3 3) -> 3 - 2 = 1 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the number 17, as it is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5 7)  ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5 7)   -> ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step: 2."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7) -> 7 - 5 = 2 (left: 2) -> There is only one possible next step: 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step: 2."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 8 / 5.5 = 1.45454545455 (left: 1.45454545455)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 7 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3.5 7"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Input: 5 2 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 7 7"
                }
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3.5 7"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 3.5 * 7 = 24.5 (left: 24.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step: 2."
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 * 8 = -256 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) + (5 + 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "16 8 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 * 8 = 128 (left: 12 128)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 * 8 = 128 (left: 12 128) -> 128 / 12 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 3 3\nSteps:\n3 + 3 = 6 (left: 3 3 6)\n3 * 3 = 9 (left: 9 6)\n9 - 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Overall, there are many ways to obtain 24 using the given numbers and basic arithmetic operations. The examples provided above showcase some of the possible combinations.",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 + 8 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n12 * 6 = 72 (left: 6 72)\n72 / 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 8 12"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 6) * (9 - 3)) * 2 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\n-9 * -1 = 24 (left: 24)\nAnswer: (3 * 8) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "16 8 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 + 3 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (6 + 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 8) -> 12 + 8 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 8) -> 12 + 8 =  -> 20",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 2 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 2 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 2 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 6 7 2\nSteps:\n6 * 3 = 18 (left: 7 2 18)\n7 + 2 = 9 (left: 9 18)\n9 * 18 = 162 (left: 162)\nAnswer: (6 * 3) + (7 + 2) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 4 8\nSteps:\n4 * 3 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((4 * 3) - 8) * 2 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 + 7) - 8) * 3 * 2 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "27"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11) -> 11 / 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input -> There seems to be an error in the input provided. Please input a valid set of numbers for the next steps to be determined. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 10 - 5 = 5 (left: ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "27"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6 -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 / 12 \u2248 4.91667 (left: 4.91667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 + 2 = 7.5 "
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5  -> 5.5 * 2 = 11 (left: 11 7.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5  -> 5.5 * 2 = 11 (left: 11 7.5) -> 11 + 7.5 = 18.5 (left: 18.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 =  -> 6 + 1.2 = 7.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands."
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands. -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands. -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands. -> There are no possible next steps for the input 1.33 as it is a single number and not an operation with multiple operands.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 / 8 = 0.75 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 / 8 = 0.75 ( -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5.5 + 2 = 7.5 "
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5  -> 2 / 5.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 11 15) -> 11 + 15 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 11 15) -> 11 + 15 = 26 (left: 26) -> 26 + 8 = 34 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "137"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49) -> 88 + 49 = 137 (left: 137) -> 137 / 2 = 68.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49) -> 88 + 49 = 137 (left: 137) -> 137 / 2 = 68.5 -> 137 + 2 = 139 (left: 139 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272 -> 14 / 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49) -> 88 + 49 = 137 (left: 137)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 11 15) -> 11 + 15 = 26 (left: 26) -> 26 + 8 = 34 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 4 7) -> Possible next steps: -> 14 / 2 = 7 (left: 7 8 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41) -> There is only one number given, so there are no possible next steps to perform. The number 41 is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 4 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11) -> 0.57 + 11 = 11.57 (left: 11.57) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11) -> 0.57 + 11 = 11.57 (left: 11.57) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11) -> 0.57 + 11 = 11.57 (left: 11.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11) -> 0.57 + 11 = 11.57 (left: 11.57) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There is only one possible next step: 20 + 2 = 22.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.67 (left: 1.67 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No input provided."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided. -> Please provide input in order to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided. -> Please provide input in order to generate possible next steps. -> It appears that you have not provided any input. Please provide numbers in order to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Input: 1 5 5 7"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 7 - 5 = 2 (left: 1 2 7)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 1 5 5 7"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 10 - 7 = 3 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 2 = 11 (left: 2 8 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 2 = 11 (left: 2 8 11) -> 8 - 2 = 6 (left: 6 11)",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.67"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67) -> There are no possible next steps for the input 1.67.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67) -> There are no possible next steps for the input 1.67. -> There are no possible next steps for the input 1.67.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15) -> 3 + 15 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.67"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67) -> There are no possible next steps with the input of 1.67.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.75 x 2 = 1.5"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 x 2 = 1.5 -> 0.75 + 2 = 2.75 (left: 2.75 = 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 x 2 = 1.5 -> 0.75 + 2 = 2.75 (left: 2.75 = 1.5) -> 2.75 / 1.5 = 1.8333 (left: 1.8333)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "36 is a prime number, so there are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 9  -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 9  -> 16 / 4 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 x 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.67"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67) -> There are no possible next steps with the input 1.67.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 9 12) -> 12 + 3 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67) -> There are no possible next steps with the input 1.67. -> None.",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.75 x 2 = 1.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12^2 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12^2 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36 is a prime number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12^2 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps. -> 36 is a prime number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12^2 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps. -> 36 is a prime number, so there are no possible next steps. -> 36 is a prime number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 * 10 = 200 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1050 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 1065)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1050 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 1065)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 15 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 15 70) -> 70 / 15 = 4.66667 (left: 4.66667)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 1065)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1050 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15750)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1050 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 1065)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15 15750)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15 15750) -> 15750 / 15 = 1050 (left: 1050)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 15 - 1050 = -1035 (left: 1050)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1050 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 - 15 = 1035 (left: 1035)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1050 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15750)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 - 30 = -5 (left: -5 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 15)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15750)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 8 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1050 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15750)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1050 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 * 15 = 15750 (left: 15750)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 - 15 = 1035 (left: 15 1035)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 - 15 = 1035 (left: 15 1035) -> 15 * 1035 = 15525 (left: 15525)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1050 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1050 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 1065)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1050 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 15 1065)",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 12  -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 12  -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 / 56 = 0.14285714285714285 (left: 0.14285714285714285)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 13 / 26 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input: -> There was no input provided. Please provide a set of numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 - 10 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 - 10 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 / 56 = 0.14285714285714285 (left: 0.14285714285714285)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16) -> 130 * 16 = 2080 (left: 2080)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 3 * 4 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 3 * 4 = 12 (left: 12 13) -> 12 / 13 = 0.923076923 (left: 0.923076923)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 56"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 56"
                }
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 + 12 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * (2 + 3)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 12) -> 12 / 2 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 12) -> 12 / 2 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 3 12) -> 12 - 8 = 4 (left: 4 12) -> Input: 16 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12) -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 54"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 9 * 54 = 486 (left: 486)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 9 * 6 = 54 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 - 6 = -4.5 (left: -4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 - 6 = -4.5 (left: -4.5) -> -4.5 * 2 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 54"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 54 - 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 54 - 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 54"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 9 * 6 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 54 - 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> 4 * 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 54"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 54 - 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> 4 * 2 = 8 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 54"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 9 + 54 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 54"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 9 54) -> 54 / 9 = 6 (left: 6 9)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5.33"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number and not a mathematical expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number and not a mathematical expression. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> -3 / 2 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input -3."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps for the input 10.66667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5.33"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible operations that can be applied to the number 5.33 without introducing additional numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input -3."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input -3."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3. -> 15 - 3 = 12 (left: 3 12 21)",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333 8) -> 8 / 0.3333 = 24.0001 (left: 24.0001)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 44"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48) -> 48 / 20 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 + 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 / 16 = 0.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 / 16 = 0.5 -> 8 + 16 = 24",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> 6.67 * 12 = 80.04 (left: 80.04)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 44"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 4 + 44 = 48 (left: 44 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 4 + 44 = 48 (left: 44 48) -> 44 / 48 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 44"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 4 + 44 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6 -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 44"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 44 / 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 / 8 = 0.375 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 / 8 = 0.375 ( -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 / 8 = 0.375 ( -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps, as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps, as there are no numbers provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222) -> 1.222 - 1 = 0.222 (left: 0.222)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 - 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 - 9 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> Error: Please provide a list of numbers in the input.",
                "Pruning": null
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 42 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 42  -> 2 * 42 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42  -> 2 * 42 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12.71"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 7 11) -> 12 / 7 = 1.71 (left: 1.71 11) -> 1.71 + 11 = 12.71 (left: 12.71) -> 12 + 7.71 = 19.71",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 7 11) -> 12 / 7 = 1.71 (left: 1.71 11) -> 1.71 + 11 = 12.71 (left: 12.71) -> 12 + 7.71 = 19.71 -> 19.71 * 12 = 236.52 (left: 236.52)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 ( -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 12 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 12 7 11) -> 12 / 7 = 1.71 (left: 1.71 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 12 7 11) -> 12 / 7 = 1.71 (left: 1.71 11) -> 1.71 + 11 = 12.71 (left: 12.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 7 1.71) -> 7 - 1.71 = 5.29 (left: 5.29) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 7 1.71) -> 7 - 1.71 = 5.29 (left: 5.29) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 2 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 2 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 2 6 4) -> 6 + 4 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 11 - 30 = -19 (left: -19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of -29."
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 + 2 = 13 (left: 13 42) -> 13 - 42 = -29 (left: -29) -> There are no possible next steps with the input of -29. -> There are no possible next steps with the input of -29.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 + 2 = 13 (left: 13 42) -> 13 - 42 = -29 (left: -29) -> There are no possible next steps with the input of -29. -> There are no possible next steps with the input of -29. -> There are no possible next steps with the input of -29.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12 -> 7 / 12 = 0.58333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 + 2 = 13 (left: 13 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 + 2 = 13 (left: 13 42) -> 13 - 42 = -29 (left: -29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 + 2 = 13 (left: 13 42) -> 13 - 42 = -29 (left: -29) -> There are no possible next steps with the input of -29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-19"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 11 - 30 = -19 (left: -19) -> There are no possible next steps as there are no numbers to operate on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 11 - 30 = -19 (left: -19) -> There are no possible next steps as there are no numbers to operate on. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 * 42 = 84 (left: 11 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 * 42 = 84 (left: 11 84) -> 11 * 84 = 924 (left: 924)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 7 1.71)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 7 1.71) -> 7 - 1.71 = 5.29 (left: 5.29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 7 1.71) -> 7 - 1.71 = 5.29 (left: 5.29) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42  -> 2 * 42 = 84 (left: 84) -> 8 + 4 = 12 -> 4 * 3 = 12 (left: 3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12.71"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 7 11) -> 12 / 7 = 1.71 (left: 1.71 11) -> 1.71 + 11 = 12.71 (left: 12.71) -> 12 + 71 = 83",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11) -> There are no possible next steps with the input -11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108) -> 108 / 4 = 27 (left: 27 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108) -> 108 / 4 = 27 (left: 27 108) -> 108 / 27 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 48"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 - 4 = 6 (left: 6 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 - 4 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 48"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 - 4 = 6 (left: 6 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 - 4 = 6 (left: 6 48) -> 6 + 48 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 - 14 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 - 14 = -2 (left: -2 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 48"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 * 4 = 40 (left: 40 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 10 * 4 = 40 (left: 40 48) -> 40 - 48 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 60."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 48"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 48 - 4 = 44 (left: 10 44)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 48 - 4 = 44 (left: 10 44) -> 44 / 10 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "12 + 12 = 24 (left: 5 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 *",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 * -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 * 9 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 48"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 48 / 4 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5  -> There are no possible next steps with just one number given. More numbers are needed to perform calculations. -> 6 * 8 = 48 (left: 4 10 48) -> 48 / 4 = 12 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5 + 2 = 15.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5 + 2 = 15.5) -> 13.5 * 2 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 1"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> Input: 5 3 7",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> Input: 5 10 15 20",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> Input: 5 10 15 20 -> 20 / 5 = 4 (left: 4 15 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> Input: 5 10 15 20 -> 20 / 5 = 4 (left: 4 15  -> 4 + 15 = 19 (left: 15 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.75 27"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54 -> 27 / 2 = 13.5 (left: 13.5 * 2 = 27) -> 13.5 / 2 = 6.75 (left: 6.75 27) -> 27 - 6.75 = 20.25 (left: 6.75 20.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54 -> 27 / 2 = 13.5 (left: 13.5 * 2 = 27) -> 13.5 / 2 = 6.75 (left: 6.75 27) -> 27 - 6.75 = 20.25 (left: 6.75 20.25) -> 20.25 / 6.75 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 1"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 + 2 = 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 + 2 = 27) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29 -> 29 - 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 1"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54 -> 27 / 2 = 13.5 (left: 13.5 * 2 = 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54 -> 27 / 2 = 13.5 (left: 13.5 * 2 = 27) -> 13.5 / 2 = 6.75 (left: 6.75 27)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> Input: 7 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> Input: 7 3 -> 3 - 7 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> Input: 5 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9 -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 10 1) -> Input: 5 3 -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 1"
                }
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "240"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242 -> 240 * 2 = 480 (left: 480)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 1 = 241 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 * 2 = 480",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 * 2 = 480 -> 240 * 2 = 480 (left: 480 480)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: -> 2 + 20 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "240"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 5 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 / 5 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "240"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> There are no possible next steps for the input 240 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "240"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242 -> 240 / 2 = 120",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242 -> 240 / 2 = 120 -> 240 / 120 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "240"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 / 3 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "240"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "I'm here to help! Please provide a new set of numbers for me to generate possible next steps for you."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "240"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "240"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> It seems like there was a mistake in the input provided. Could you please clarify or provide a new set of numbers for me to generate possible next steps for you?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> It seems like there was a mistake in the input provided. Could you please clarify or provide a new set of numbers for me to generate possible next steps for you? -> I'm here to help! Please provide a new set of numbers for me to generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 - 2 = 238 (left: 2 238)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 - 2 = 238 (left: 2 238) -> 2 * 238 = 476 (left: 238 476)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "240"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> 240 + 2 = 242 -> 242 + 2 = 244 (left: 244)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> There are no possible next steps for the number 240.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120) -> 2 * 120 = 240 (left: 240) -> There are no possible next steps for the number 240. -> There are no possible next steps for the number 240.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80 -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> -6.4 / 2 = -3.2 (left: -3.2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "30 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 22"
                }
            },
            "Step 4": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 8 * 22 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 + 3 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 + 3 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40) -> There is only one number given in the input, so there are no possible next steps. The input number is 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 * 5 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 13 + 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 13 + 8 =  -> 13 + 8 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 10 + 5 = 15 (left: 15 5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 + 2 = 67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 + 8 = 38 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9  -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9  -> 9 - 2 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "19 + 2 = 21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 10) -> 10 + 9 = 19 (left: 19) -> 19 + 2 = 21 -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left:  -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left:  -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.33"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 + 2 = 5.33 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 + 2 = 5.33  -> 3.33 * 2 = 6.66 (left: 6.66 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.33"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There is only one number given, so there are no possible next steps to perform any mathematical operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There is only one number given, so there are no possible next steps to perform any mathematical operations. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10) -> 18 - 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 10) -> 10 + 9 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 10) -> 10 + 9 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. -> Please provide numbers to continue the sequence.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> Input: 6 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9  -> 9 - 2 = 7 (left: 7) -> 7 / 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "19 + 2 = 21"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 10) -> 10 + 9 = 19 (left: 19) -> 19 + 2 = 21 -> 21 - 19 = 2 (left: 2 21)",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Input: -> There seems to be an issue with the input, please provide valid numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Input: -> There seems to be an issue with the input, please provide valid numbers. -> There seems to be an issue with the input, please provide valid numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 14 / 2 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 14 / 2 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 8 12) -> 8 - 1 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 8 12) -> 8 - 1 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 * 2 = 14 (left:"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> No possible next steps as the equation has been completed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1) -> Invalid input. Please enter a valid arithmetic operation.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 * 2 = 14 (",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the input 2.67.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the input 2.67. -> There are no possible next steps with the input 2.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 2 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 * 2 = 72 -> 36 / 2 = 18 (left: 18 * 2 = 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 * 2 = 72 -> 36 / 2 = 18 (left: 18 * 2 = 36) -> 18 - 2 = 16 (left: 16 * 2 = 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "16 * 2 = 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> 11 - 2 = 9 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 9 10) -> 10 / 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "16 * 2 = 32"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167) -> 0.9167 * 2 = 1.8334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 0 / 11 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 8 = 44 -> 36 / 8 = 4.5 (left: 4.5 44)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 4 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 2 = 38 -> - 38 - 2 = 36",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4 -> 9 * 2 = 18 (left: 18 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "16 * 2 = 32"
                }
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20) -> 9 + 20 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "41 / 2 = 20.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41) -> 41 / 2 = 20.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 1 + 8 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 1 + 8 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "41 / 2 = 20.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "41 / 2 = 20.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "41 / 2 = 20.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "41 / 2 = 20.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 ( -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 3 + 7 = 10 (left: 10 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 3 + 7 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "108"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5 9) -> 5 - 9 = -4 (left: -4 9)",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30) -> 30 - 7 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3 -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 * 2 = 2.333333333333332 (left: 2.333333333333332)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 + 7 = 8.4 (left: 8.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 1 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 - 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 / 0 = undefined -> Error: Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15) -> 3 / 15 = 0.2 (left: 15 0.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3 -> 2 * 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3 -> 2 * 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 + 0 = 1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 + 0 = 1 -> 1 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps: -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Possible next steps: -> There are no possible next steps given the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Possible next steps: -> There are no possible next steps given the input. -> There are no possible next steps given the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 / 2 = 0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 * 0 = 0",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 * 0 = 0 -> 1 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 1.6 + 10 = 11.6 (left: 11 11.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 1.6 + 10 = 11.6 (left: 11 11.6) -> 11 - 11.6 = -0.6 (left: -0.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 * 2 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 * 2 = 2 (left: 0 2) -> 0 * 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 + 0 = 1",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 * 8 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 12 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 12 =  -> 12 / 4 = 3 -> 12 - 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> -3 - 12 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left: -> 4 - 36 = -32 (left: -32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left: -> 4 - 36 = -32 (left: -32) -> -32 + 8 = -24 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 / 20 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 48 - 36 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 5 * 7 = 35 (left: 35 9)",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> Possible -> It seems like the input is missing. Can you please provide the input numbers so that I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> It seems like there was an issue with the input provided. Can you please provide the correct input so that I can generate possible next steps for you?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> It seems like there was an issue with the input provided. Can you please provide the correct input so that I can generate possible next steps for you? -> I'm sorry, but without a correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 10.5"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 - 1.5 = 4.5 (left: 4.5 6) -> 4.5 + 6 = 10.5 (left: 6 10.5) -> 6 - 10.5 = -4.5 (left: -4.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 10.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 10.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with just the number 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 10.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 - 1.5 = 4.5 (left: 4.5 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 - 1.5 = 4.5 (left: 4.5 6) -> 4.5 + 6 = 10.5 (left: 6 10.5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6) -> 5 / 6 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 10.5"
                }
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 10 - 5 = 5 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 10 - 5 = 5 (left: -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27) -> 6 * 27 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left:  -> There are infinite possible next steps without knowing the target number or operation to be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 + 9 = 18 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 -> 5 * 2 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 -> 5 * 2 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 + 5 = 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for 1.25 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number. -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number. -> There are no possible next steps for 1.25 as it is a single number. -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 8 = 32 (left: 11 13 32) -> 32 - 11 = 21 (left: 11 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 8 = 32 (left: 11 13 32) -> 32 - 11 = 21 (left: 11 21) -> 11 * 21 = 231 (left: 231)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 * 12 = 14.16 (left: 14.16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 4 11  -> 4 + 11 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 4 11  -> 4 + 11 = 15 (left: 15) -> There are no possible next steps for the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 + 2 = 2.769 (left: 2.769)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2.769"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "26"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 + 2 = 28",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 + 2 = 28 -> 2 * 2 = 4 (left: 4 28)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6 -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 / 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667 -> 13 * 6 = 78 (left: 78 / 6 = , 13 / 6 = 2.16666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> 6 + 3 = 9 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6 -> 6 / 2 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6 -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 -> 10 - 4 = 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 -> 10 - 4 = 6 -> Input: 14 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 / 1.5 = 8.67 (left: 8.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 / 1.5 = 8.67 (left: 8.67) -> 8.67 / 2 = 4.335",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45 (left: 45) -> There are no possible next steps with the input 45. -> There are no possible next steps with the input 45.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8.67 / 2 = 4.335"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 / 1.5 = 8.67 (left: 8.67) -> 8.67 / 2 = 4.335 -> 8.67 + 2 = 10.67 (left: 4.335 10.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 / 1.5 = 8.67 (left: 8.67) -> 8.67 / 2 = 4.335 -> 8.67 + 2 = 10.67 (left: 4.335 10.67) -> 10.67 - 4.335 = 6.335 (left: 6.335)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "78 / 6 = , 13 / 6 = 2.16666666667"
                }
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 955215,
        "output_tokens": 397324.9535714285,
        "total_cost": 1.0735949303571428
    }
}