{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 6 7\nSteps:\n6 - 3 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 6 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 / 1.25 = 7.4 (left: 7.4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> The final equation is 6 * (10 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 3) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left:  -> It appears that you did not provide an input to generate possible next steps. Please provide the numbers in the input for me to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 * 7) / (8 - 3)) +",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 3 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) + 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> There is only one number left, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 9.25)",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 3 - 7 = -4 (left: -4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 3 - 7 = -4 (left: -4 4) -> -4 * 4 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 5 3 7 "
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 - 7 = 5 (left: 5) -> There are no possible next steps for the input 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input provided."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 3 / 7 = 0.43 (left: 4 0.43)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 3 / 7 = 0.43 (left: 4 0.43) -> 4 + 0.43 = 4.43 (left: 4.43)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 5 3 7 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input provided."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> None",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input must have at least 2 numbers to perform operations."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations. -> Please provide at least 2 numbers in the input to perform operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations. -> Please provide at least 2 numbers in the input to perform operations. -> Please provide at least 2 numbers in the input to perform operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input must have at least 2 numbers to perform operations."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations. -> 6 / 3 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations. -> 6 / 3 = -> 6 / 3 = 2",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.67"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps with the input 11.67.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input must have at least 2 numbers to perform operations."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations. -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input 11.67."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67. -> There are no possible next steps with the input 11.67.",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 1.25"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 -> 3.25 * 2 = 6.5 (left: 6.5 = 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 1.25"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 -> 2 - 1.25 = 0.75 (left: 0.75 2.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 1.25"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> 12 * 12 = 144 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6.5 = 6.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 - 9 = -2.2501 (left: -2.2501)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7.25 - 4 = 3.25"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25) -> 7.25 / 4 = 1.8125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 is already a single number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 + 9 = 15.7499 (left: 15.7499)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 3 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (3 * 4) + (4 * 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.75 2.5"
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 * 2 * 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 * 4 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There is only one possible next step: 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 + 24 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3024"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 * 4 = 8 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 * 4 = 8 (left: 3 8) -> Possible next steps: -> It seems like there was an error in the input. Please provide a valid input for the next steps to be calculated.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "17.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 3 2 4) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5.538"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538) -> 5.538 - 2 = 3.538",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.0705"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> 0.0705 + 2 = 2.0705 (left: 2.0705)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of -10."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 + 13 = 14"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 - 1 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 - 1 = 12 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.0705"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> Possible next steps: -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13.18"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-2 11"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11) -> 11 - (-2) = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11) -> 11 - (-2) = 13 (left: 13) -> 13 + 2 = 15 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of -10."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-10"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps with the input of -10.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input of -10."
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10. -> There are no possible next steps with the input of -10.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.0705"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> There are no possible next steps for the input 0.0705.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 0.0705."
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705. -> There are no possible next steps for the input 0.0705.",
                "Pruning": null
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.375 + 2 = 3.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-0.625 2.75"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> -0.625 / 2.75 = -0.2272727273 (left: -0.2272727273)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "None, the equation is already solved."
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved. -> None, the equation is already solved. -> None, the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 + 2 = 3.375"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.5"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-0.625 2.75"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> -0.625 / 2.75 = -0.22727272727272727 (left: -0.22727272727272727)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "None, the equation is already solved."
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved. -> None, the equation is already solved. -> None. The equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 + 2 = 3.375"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-0.625 2.75"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> -0.625 - 2.75 = -3.375 (left: -3.375)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.375 + 2 = 3.375"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "-0.625 2.75"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved. -> None, the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-0.625 2.75"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> 2.75 / (-0.625) =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> 2.75 / (-0.625) = -> 2.75 * (-0.625) = -1.71875 (left: -1.71875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input of 2.5 as it is a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 - 5.5 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-0.625 2.75"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 -> 1.375 * 2 = 2.75 (left: -0.625 2.75) -> -0.625 * 2.75 = -1.71875 (left: -1.71875)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.375 + 2 = 3.375"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 3.375 / 2 = 1.6875 (left: 1.6875 2)",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> Input: 5 7 12 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 3"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7.5"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 3"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 3"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7.5"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.66667 (left: 1.66667)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "7.5"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 3"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7.5"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 6 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 3"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Possible"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like there was a mistake in your input. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 15"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "7.5"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7.5"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> There are no possible next steps with the input 7.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> There are no possible next steps with the input 7.5. -> 7.5 * 2 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (1 / 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 3 = 9"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 56"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 + 7 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18 9"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 3 = 9"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 3 = 9"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 6 * 3 = 18 (left: 18",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 49 49)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 49 49) -> Possible",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 56"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 -> 56 + 8 = 64 (left: 8 56)",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5 5 10"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 0.5 + 5 = 5.5 (left: 5.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 0.5 + 5 = 5.5 (left: 5.5 10) -> 5.5 + 10 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5 5 10"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 0.5 * 5 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 0.5 * 5 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.5 5 10"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5 5 10"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 5 * 10 = 50 (left: 0.5 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 5 * 10 = 50 (left: 0.5 50) -> 0.5 * 50 = 25 (left: 25 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5 5 10"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 10 - 5 = 5 (left: 0.5 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 10 - 5 = 5 (left: 0.5 5) -> 5 - 0.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5 5 10"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 10 / 0.5 = 20 (left: 5 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 10 = 0.5 (left: 0.5 5 10) -> 10 / 0.5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8 16"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16) -> 8 / 1 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16) -> 8 / 1 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 4 8 16"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 /",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 / -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15) -> 15 - 8 = 7",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)  -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "312"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number, so no operations can be performed.",
                "Pruning": null
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27) -> 27 / 27 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps since there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There is only one number given (3.33), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There is only one number given (3.33), so there are no possible next steps to perform any operations. -> 3.33 * 2 = 6.66",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps as there are not enough numbers provided to perform any operations. -> N/A",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "39"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> None - There is only one number and no operations to perform on it. -> No possible next steps. -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 / 3 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 / 3 = 9 -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 - 2 = 1.33",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 - 2 = 1.33 -> 3.33 + 2 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 20"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 4 + 20 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 8"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 - 5 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 20"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 - 5 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 + 5 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 + 5 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 20"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 9 - 3 = 6 (left: 6 27) -> 6 * 27 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 - 5 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 5 = 3 (left: 3) -> 3 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 20"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 4 + 20 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 9"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9 -> 4 + 5 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 - 5 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 20"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 3 + 9 = 12 (left: 12 27) -> 27 / 12 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 - 5 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 3 + 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: -> 3 + 2 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> -5 / 2 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input -5."
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5 as there are no valid arithmetic operations that can be performed on it.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 51"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 51 - 11 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 51 - 11 = 40 (left: 40) -> There are no possible next steps for the number 40.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.6875"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> 0.6875 / 2 = 0.34375 (left: 0.34375)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 51"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> Possible next steps: -> There seems to be a mistake in the input. Please provide the correct input for me to generate possible next steps. Thank you.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.75"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75 as it is already a single number. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 51"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 3 + 9 = 12 (left: 12 27) -> 12 - 27 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.75"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75. -> There are no possible next steps with the input of 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 51"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 7 + 3 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 0.75."
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 17 / 0.70588235294 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 17 / 0.70588235294 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 8"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 0.70588235294 * 17 = 12.0 (left: 12.0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 12 + 11 = 23 (left: 18 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 12 + 11 = 23 (left: 18 23) -> 18 - 23 = -5 (left: -5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 17 + 0.70588235294 = 17.70588235294 (left: 17.70588235294)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "78"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> 8 - 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.70588235294 17"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 / 11 = 1.6363636363636365 (left: 1.6363636363636365 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 / 11 = 1.6363636363636365 (left: 1.6363636363636365 12) -> 1.6363636363636365 * 12 = 19.636363636363638 (left: 12 19.636363636363638)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 0.70588235294 * 17 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 - 6 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 12 + 11 = 23 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 12 + 11 = 23 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.70588235294 17"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 0.70588235294 * 17 = 12.0 (left: 12.0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 10 "
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 3 * 10 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 - 11 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 - 11 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 1.125"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 / 1.125 = 7.11111111111 (left: 7.11111111111)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 / 1.125 = 7.11111111111 (left: 7.11111111111) -> 7.11111111111 + 2 = 9.11111111111 (left: 9.11111111111)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 4.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4.5"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps for the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 1.125"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 - 1.125 = 6.875 (left: 6.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 - 1.125 = 6.875 (left: 6.875) -> There are no possible next steps for the input 6.875. It is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8 -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 1.125"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 * 1.125 = 9 (left: 9 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 * 1.125 = 9 (left: 9 1.125) -> 9 / 1.125 = 8 (left: 8 1.125)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6 15) -> -6 * 15 = -90 (left: -90)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 1.125"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 + 1.125 = 9.125 (left: 9.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 + 1.125 = 9.125 (left: 9.125) -> There are no possible next steps for the input 9.125 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 1.125"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 + 1.125 = 9.125 (left: 9.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 / 8 = 1.125 (left: 8 1.125) -> 8 + 1.125 = 9.125 (left: 9.125) -> 9.125 / 2 = 4.5625 (left: 4.5625)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "It seems like the input is missing. Please provide the numbers to determine the possible next steps."
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.3"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3) -> 1.3 / 2 = 0.65 (left: 0.65)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> None",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 * 2 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 * 5 = 40 (left: 40) -> 40 * 2 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "13 * 2 = 26"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 * 2 = 26"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 * 2 = 26 -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.3"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3) -> 1.3 / 2 = 0.65",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 * 2 = 26"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 * 2 = 26 -> 6 * 7 = 42 (left: 5 8 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 * 2 = 26 -> 6 * 7 = 42 (left: 5 8 42) -> 5 + 8 = 13 (left: 13 42)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number provided, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24 72"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 72 / 24 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Apologies for the oversight. Can you please provide the specific numbers in the input so that I can suggest possible next steps?",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 * ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24 72"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 24 * 3 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 / 6 = 0.5 (left: 0",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24 72"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 72 - 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the number 2.57 as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps for the number 2.57 as it is already a single number. -> There are no possible next steps for the number 2.57 as it is already a single number. -> There are no possible next steps for the number 2.57 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps for the number 2.57 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps for the number 2.57 as it is already a single number. -> There are no possible next steps for the number 2.57 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24 72"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 72 - 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24 72"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 72 / 24 = 3 (left: 3 72)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9 (left: 63 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9 (left: 63 9) -> 63 + 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24 72"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 3 *  -> 3 * 24 = 72 (left: 24 72) -> 24 + 72 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 + 1 = 64",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "58"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 58 + 5 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "58"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 58 - 5 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "630"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11.2"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number given (11.2), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number given (11.2), so there are no possible next steps to perform any operations. -> 11.2 / 2 = 5.6 (left: 2 5.6)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 11.2 as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps for the input 11.2 as it is already a single number. -> There are no possible next steps for the input 11.2 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps for the input 11.2 as it is already a single number. -> There are no possible next steps for the input 11.2 as it is already a single number. -> There are no possible next steps for the input 11.2 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "630"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 - 3 + 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.2"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11.2"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "58"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13 -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "630"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 * 3 = 18 (left: 18 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 * 3 = 18 (left: 18 0) -> 18 + 0 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "630"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 * 30 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.2"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps for the input 11.2 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There is only one number provided, so there are no possible next steps to perform any operations. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "11.2"
                }
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> 11.2 + 2 = 13.2",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 is not a whole number, so no valid next step.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 is not a whole number, so no valid next step. -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 -> 66 - 2 = 64 (left: 64 2 68)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3) -> 3 + 1.33 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 5 6 7 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 6 * 7 = 42 (left: 5 8 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 6 * 7 = 42 (left: 5 8 42) -> 5 + 8 = 13 (left: 13 42)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 - 4 = -1 (left: -1 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 - 4 = -1 (left: -1 3) -> -1 * 3 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> - No possible next steps, as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> - No possible next steps, as there is only one number provided. -> Input is not sufficient to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1  -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 5 6 7 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 5 6 7 8"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 7 * 8 = 56 (left: 5 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 7 * 8 = 56 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "66"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 - 8 = 58 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 - 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "17"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 - 2 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "40"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps for the number 40 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 3"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "17"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 - 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 - 8 = 12 (left: 8 12) -> 12 + 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3, 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 - 12 = 0 (left: 3 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 - 12 = 0 (left: 3 0) -> 3 + 0 = 3",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3) -> There is only one possible next step: 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 43 - 2 = 41 (left: 41",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 12 15) -> 12 / 15 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3, 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 + 66 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "-2 9 "
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4) -> -2 - 4 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input is not sufficient for generating possible next steps."
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-6"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4) -> -2 - 4 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 - 13 = -8.5 (left: -8.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20) -> 10 * 20 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input is not sufficient for generating possible next steps."
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input is not sufficient for generating possible next steps."
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps. -> Input is not sufficient for generating possible next steps.",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18 / 8 = 2.25 (not a whole number, cannot proceed"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 8 = 2.25 (not a whole number, cannot proceed) -> There are no possible next steps that result in whole numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with just the number 18. -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 8 = 2.25 (not a whole number, cannot proceed)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate with. -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9 -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 8 + 8 + 2 = 18",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps: -> - End of input detected.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 2 3 5 9\nSteps:\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((5 - 3) * 9) + 2 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) / 2) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Possible next steps: -> - 8 / 2 = 4 (left: 4 ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (7 + 8) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "- End of input detected."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps: -> - End of input detected. -> End of input detected.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 15 + 60 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "- End of input detected."
                }
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22.75"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps. The input is not valid."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> No possible next steps. The input is not valid. -> No possible next steps. The input is not valid. -> No possible next steps. The input is not valid.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> No possible next steps. The input is not valid. -> No possible next steps. The input is not valid. -> No possible next steps. The input is not valid. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> No possible next steps. The input is not valid.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> No possible next steps. The input is not valid. -> No possible next steps. The input is not valid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 22.75."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> None.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 3.25 as it is a single number and not an equation."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is a single number and not an equation. -> There are no possible next steps for the input 3.25 as it is a single number and not an equation. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22.75"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 - 2 = 20.75",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 - 2 = 20.75 -> 22.75 / 2 = 11.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 22.75."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 22.75."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 3.25 as it is a single number and not an equation."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is a single number and not an equation. -> There are no possible next steps for the input 3.25 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3.25"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 / 2 = 1.625 (left: 2 1.625)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3.25"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is a single number and not an equation.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is a single number and not an equation. -> There are no possible next steps for the input 3.25 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 22.75."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps. The input is not valid."
                }
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 3 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24) -> 24 - 20 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 + 3 = 12 (left: 3 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) * 2 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with just the input of 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "22"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> None, the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> None, the equation is already solved. -> None, the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((6 + 8) + 3) + 7 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6) -> 6.8 + 11.6 = 18.4 (left: 18.4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 4.8 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 = 7.6 (left: 7.6 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 = 7.6 (left: 7.6 6.8) -> 7.6 + 6.8 = 14.4 (left: 14.4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 9.6 6.8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8) -> 4.8 - 6.8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number. -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 =  -> 9.6 / 2 = 4.8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 (left: 2 6.8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 (left: 2 6.8) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2) -> 19.2 - 6.8 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 9.6 6.8"
                }
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 18 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 18 / 10 = 1.8 (left: 1.8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 18 / 10 = 1.8 (left: 1.8 10) -> 10 - 1.8 = 8.2 (left: 8.2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 80"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 8 + 10 = 18 (left: 18 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 8 + 10 = 18 (left: 18 80) -> 18 * 80 = 1440 (left: 1440)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "14.285714285714286 24.285714285714286"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 5 10 80"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 45 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 45 80) -> 10 + 45 = 55 (left: 55 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 80"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 10 / 8 = 1.25 (left: 1.25 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 10 / 8 = 1.25 (left: 1.25 80) -> 1.25 * 80 = 100 (left: 80 100)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 + 10 = 11.428571428571429 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 10 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 80"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 8 + 10 = 18 (left: 18 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 8 + 10 = 18 (left: 18 80) -> 18 - 80 = -62 (left: -62)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "14.285714285714286 24.285714285714286"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 * 10 = 14.285714285714286 (left: 10 14.285714285714286)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 * 10 = 14.285714285714286 (left: 10 14.285714285714286) -> 10 + 14.285714285714286 = 24.285714285714286 (left: 14.285714285714286 24.285714285714286)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 80"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 80 / 8 = 10 (left: 10 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80) -> 80 / 8 = 10 (left: 10 80) -> 10 * 80 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 10 80"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 5 10 80"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 9 * 5 = 45 (left: 10 10 80) -> 80 / 10 = 8 (left: 8 10 80)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 + 24 = 72 (left: 24 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 + 24 = 72 (left: 24 72) -> 72 + 24 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "48 / 24 = 2 (left"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 * 24 = 1152 (left: 1152)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "48 / 24 = 2 (left"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 = 0.5 (left: 0.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 7 2"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 + 24 = 72 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-3"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> -3 + 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-36 - 2 = -38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 * 48 = 1152 (left: 1152)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 7 2"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 + 24 = 72 (left: 24 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 + 24 = 72 (left: 24 72) -> 24 * 72 = 1728 (left: 1728)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 7 - 6 = 1 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> None, as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 / 11 = 0.2727272727272727"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> 11 - 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 / 11 = 0.2727272727272727"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> 3 + 11 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 4 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> Input is invalid. Please provide a valid input with at least two numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 / 11 = 0.2727272727272727"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Input: 4 7"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 4 7 -> 4 / 7 = 0.57 (left: 0.57 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 4 7 -> 4 / 7 = 0.57 (left: 0.57 7) -> 4 + 16 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 17) ",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "320"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20) -> 16 * 20 = 320 (left: 320) -> 320 + 3 = 323 (left: 3 323)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 2 = 5 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 11."
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> There are no possible next steps with just the number 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 10 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 323"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20) -> 16 * 20 = 320 (left: 320)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90) -> 10 * 90 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 323"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90) -> 90 - 10 = 80 (left: 80 10)",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 2 = 22",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 2 = 22 -> 20 - 2 = 18 (left: 18 2 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-7"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 * 8 = -56 (left: -56)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 + 2 = 62 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-7"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 + 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> None.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 3.39."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25 / 6 = 4.166666"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666 -> 25 - 6 = 19 (left: 19 6 4.166666)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666 -> 25 - 6 = 19 (left: 19 6 4.166666) -> 6 / 4.166666 = 1.439999904 (left: 1.439999",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "14 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 - 14 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.39"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 / 2 = 1.695",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 / 2 = 1.695 -> 3.39 * 2 = 6.78 (left: 6.78)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 19"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19) -> 14 * 19 = 266 (left: 266)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 19"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19) -> 14 - 19 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "14 19"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19) -> 14 - 19 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.39"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> There are no possible next steps for the input 3.39.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> There are no possible next steps for the input 3.39. -> There are no possible next steps for the input 3.39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 19 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "51"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 * 2 = 102",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 * 2 = 102 -> 51 + 2 = 53 (left: 53 * 2 = 106)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "53 * 2 = 106"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 * 2 = 102 -> 51 + 2 = 53 (left: 53 * 2 = 106) -> 53 + 2 = 55 (left: 55 * 2 = 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 * 2 = 102 -> 51 + 2 = 53 (left: 53 * 2 = 106) -> 53 + 2 = 55 (left: 55 * 2 = 110) -> 55 - 2 = 53 (left: 53 110)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "273"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 2 * 7 = 14 (left: 14 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 2 * 7 = 14 (left: 14 3) -> 14 / 3 = 4.67 (left: 4.67)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 + 9 = 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4.33"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> 4.33 / 4 = 1.0825",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> 4.33 / 4 = 1.0825 -> 4.33 / 4 = 1.0825 (left: 1.0825 1.0825)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "17.33"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps with the input 17.33 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps with the input 17.33 as it is a single number. -> 17.33 - 2 = 15.33 (left: 15.33)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4.33"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 + 9 = 21"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 9 - 12 = -3 (left: -3 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 9 - 12 = -3 (left: -3 21) -> 21 - (-3) = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "17.33 / 2 = 8.665"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "51"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 / 1 = 51 (left: 1) ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 21"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273) -> 7 * 3 = 21 (left: 2 1)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "17.33"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> 17.33 + 2 = 19.33",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> 17.33 + 2 = 19.33 -> 17.33 / 2 = 8.665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 + 9 = 21"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4.33"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number provided (4.33), so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "28"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps needed as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 38"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 38 / 10 = 3.8 (left: 3.8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 38"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 10 + 38 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps needed as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "- There are no possible next steps as the equation is already solved."
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps needed as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "- There are no possible next steps as the equation is already solved."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps needed as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps needed as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> The equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved. -> No further steps needed as the equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 3 = 9 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 3 = 9 (left: -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 150"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 8 * 3 = 24 (left: 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 + 1 = 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 5.33."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 3) -> -5 * 3 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 150"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 + 1 = 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 1 - 3 = -2 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 1 - 3 = -2 (left -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 5.33."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 + 1 = 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 3 * 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 3 * 1 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 + 1 = 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 / 8 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with just the number 3 as input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with just the number 3 as input. -> There are no possible next steps with just the number 3 as input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 150"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 10 + 150 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide at least two numbers to continue with the calculations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 20"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 10 + 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10 20"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 10 / 20 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 17"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Provide at least two numbers to perform operations on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> There are no possible next steps with only one number. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Provide at least two numbers to perform operations on."
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations on. -> - Add two numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations on. -> - Add two numbers -> Addition of two numbers is a basic arithmetic operation that involves combining two numbers to find their sum. The next steps would involve providing the two numbers that you want to add together.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 20"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 20 / 10 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 5 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 + 12 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 + 2 = 22 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 + 10 = 10.8 (left: 10.8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> There is only one possible next step: 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10 20"
                }
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "56"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 56."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.7333"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> 0.7333 * 2 = 1.4666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 4) -> 0 + 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.7333 * 2 = 1.4666"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 2 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.7333 * 2 = 1.4666"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> 0.7333 * 2 = 1.4666 -> 0.7333 / 2 = 0.36665",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> 0.7333 * 2 = 1.4666 -> 0.7333 / 2 = 0.36665 -> 0.7333 - 2 = -1.2667",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> No further steps can be taken with only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> No further steps can be taken with only one number. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 56."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 22"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.7333 * 2 = 1.4666"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> 0.7333 * 2 = 1.4666 -> 0.7333 - 2 = -1.2667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> 0.7333 * 2 = 1.4666 -> 0.7333 - 2 = -1.2667 -> 0.7333 - 2 = -1.2667 (left: -1.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.7333 * 2 = 1.4666"
                }
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 8 = 19 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "11.97"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> 11 / 9.97 = 1.10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 / 9.97 = 1.10"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> 11 / 9.97 = 1.10 -> 11 - 9.97 = 1.03 (left: 1.03 1.10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> 11 / 9.97 = 1.10 -> 11 - 9.97 = 1.03 (left: 1.03 1.10) -> 1.03 - 1.10 = -0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is no input provided. Please provide a set of numbers to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857 (left: 0.642857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There is no input provided. Please provide a set of numbers to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 - 8 = -2 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 - 8 = -2 (left -> 6 * 8 = 48 (left: -2 48)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13 -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "11.97"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.642857"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857 (left: 0.642857) -> 0.642857 / 2 = 0.3214285 (left: 0.3214285)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide a set of numbers for me to work with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There is no input provided. Please provide a set of numbers to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> 20 - 15 = 5 (left: 5 10 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> 20 - 15 = 5 (left: 5 10 5) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 8 - 2 = 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 8 - 2 = 6  -> 6 + 8 = 14 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19 2280"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 43320)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 7 - 6 = 1 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43320 2278"
                }
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 - 2278 = 41042 (left: 41042)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-140"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19 2280"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 43320)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 * 7 = 42 (left: 10 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43320 2278"
                }
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 * 2278 = 98774160 (left: 98774160)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3"
                }
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22) -> 19 - 22 = -3 (left: -3) -> -3 - 8 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "43320 2278"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19 2280"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43320 2278"
                }
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 + 2278 = 45698 (left)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 + 2278 = 45698 (left) -> 43320 * 2278 = 98715360 (left: 98715360)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "19 - 2280 = -"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19 2280"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 2280 / 19 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "19 2280"
                }
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 2280 - 19 = 2261 (left: 2261)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "41"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43320 2278"
                }
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 * 2278 = 98611960 (left: 2278 98611960)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 * 2278 = 98611960 (left: 2278 98611960) -> 2 * 2 = 4 (left: 4 2 7 8 9 8 6 1 1 9 6 0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22) -> 19 - 22 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19 2280"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 + 2280 = 2299",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 + 2280 = 2299 -> 19 - 2280 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43320 2278"
                }
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 / 2278 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "43320 2278"
                }
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 19 * 2280 = 43320 (left: 2280 43320) -> 2280 - 2 = 2278 (left: 43320 2278) -> 43320 * 2278 = 98725960 (left: 2278 98725960)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 * 5 = 45"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45) -> There seems to be a mistake in the input, it should be corrected before proceeding with possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> There are no possible next steps for the input 99 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5. Possib + le = Possible"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 + 9 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 + 9 = 20 (left: 20) -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4.5"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5. -> No possible next steps with the input 4.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5. -> No possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 * 5 = 45"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45) -> 14 + 45 = 59",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> There are no possible next steps for the input 99 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4.5"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There seems to be a mistake in the input, it should be corrected before proceeding with possible next steps."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45) -> There seems to be a mistake in the input, it should be corrected before proceeding with possible next steps. -> Correct the input to: 2 8 8 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 9 + 5 = 14 (left: 14 = 45) -> There seems to be a mistake in the input, it should be corrected before proceeding with possible next steps. -> Correct the input to: 2 8 8 14 -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 +",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 + -> 12 + 8 = 20",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12) -> 1.4 + 12 = 13.4 (left: 13.4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 - 5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12) -> 1.4 * 12 = 16.8 (left: 16.8)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 7 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12) -> 35 - 12 = 23 (left: 23)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 7 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 / 7 = 1.71428571429 (left: 1.714285714",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "16 - "
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 -  -> 16 - 8 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33) -> 33 + 2 = 35 -> 33 - 2 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 / 3 = 2.666666666666666"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.666666666666666 -> 4 * 8 = 32 (left: 32 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.666666666666666 -> 4 * 8 = 32 (left: 32 2) -> 32 / 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "21 - 36 = -15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21.36"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57 -> 21 * 36 = 756",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "21.36"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57 -> 21 - 36 = -15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21 - 36 = -15"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57 -> 21 - 36 = -15 -> 21 / 36 = 0.5833 (left: -15 0.5833)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57 -> 21 - 36 = -15 -> 21 / 36 = 0.5833 (left: -15 0.5833) -> -15 + 0.5833 = -14.4167 (left: 0.5833 -14.4167)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10.66667"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> 10 / 6 = 1.66667 (left: 1.66667)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 / 3 = 2.666666666666666"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.666666666666666 -> 8 + 3 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.666666666666666 -> 8 + 3 = 11 (left: 11) -> 11 + 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10.66667"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "21.36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "117"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 / 1 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 - 2 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 - 2 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 - 2 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "117"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 1 + 1 + 7 = 9 (left: 9 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 1 + 1 + 7 = 9 (left: 9 7) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "117"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "117"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 117 / 2 = 58.5 (left: 58.5 + 2 = 60.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Please provide more than one number in order to calculate possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "117"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 117 / 2 = 58.5 (left: 58.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "117"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "117"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 2 + 117 = 119",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps with just one number provided. -> Please provide more than one number in order to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "117"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 117 + 2 = 119 (left: 119 * 2 = 238",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps. -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please provide numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Provide at least two numbers to perform operations on."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 16 + 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Provide at least two numbers to perform operations on."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 + 2 = 16 (left: 8 8 16) -> 8 * 8 = 64 (left: 64 16) -> 64 + 16 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Provide at least two numbers to perform operations on."
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 - 3 = 8"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8) -> 3 / 11 = 0.27 (left: 0.27)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps as the input is already in its simplest form."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "11"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps as the input is already in its simplest form."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> Input is already in its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> Input is already in its simplest form. -> - Add the first two numbers: 2 + 8 = 10",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> 16 - 2 = 14 (left: 8 14 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> 16 - 2 = 14 (left: 8 14 16) -> 14 / 8 = 1.75 (left: 1.75 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps as the input is already in its simplest form."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> There are no possible next steps as the input is already in its simplest form. -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps as the input is already in its simplest form."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> There are no possible next steps as the input is already in its simplest form. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1.75 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 - 8 = 13 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps as the input is already in its simplest form."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "80"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 / 5 = 1"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been simplified to its final answer."
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> N/A",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14.7"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps with the input 14.7 because it is already a single number and cannot be further manipulated using the operations provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 3 * 3 = 9 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 3 * 3 = 9 (left: -> 3^3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "80"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been simplified to its final answer."
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> Input: N/A",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> Input: N/A -> Please provide a new set of numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 1 + 5 = 6 (left: 5 6) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been simplified to its final answer."
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 10 3"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 1 + 5 = 6 (left: 5 6) -> Input: 10 3 -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14.7"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps with the input 14.7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been simplified to its final answer."
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 14.7."
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps with the input 14.7. -> There are no possible next steps with the input 14.7.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 3 * 3 = 9 (left: 3",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769230",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been simplified to its final answer."
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> There are no possible next steps as the equation has been simplified to its final answer. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 / 5 = 1"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 6 / 3 = 2 (left: 2 1 1)",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number. -> Input consists of a single number. No further operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 0 * 8 = 0 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0 8"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There is only one number given, so there are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There is only one number given, so there are no possible next steps for this input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 3 / 5 = 0.6 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 3 / 5 = 0.6 ( -> 5 / 3 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. No further steps can be taken.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input is already a single number. No further steps can be taken."
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. No further steps can be taken. -> Input is already a single number. No further steps can be taken.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 3 + 4 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 0 * 8 = 0 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.6666666666666667"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input consists of a single number. No further operations can be performed."
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number. -> Input consists of a single number. No further operations can be performed. -> Input: 10",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 *"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 - 0.0588235294117647 = 0.9411764705882353 "
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1 * 0.0588235294117647 = 0.0588235294117647 -> 1 - 0.0588235294117647 = 0.9411764705882353  -> 1 * 0.0588235294117647 = 0.0588235294117647 (left: 0.9411764705882353)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 - 0.0588235294117647 = 0.9411764705882353 "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "102"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.0588235294117647"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1 * 0.0588235294117647 = 0.0588235294117647",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1 * 0.0588235294117647 = 0.0588235294117647 -> 1 - 0.0588235294117647 = 0.9411764705882353 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Please provide at least two numbers to perform operations on."
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform operations on. -> - Subtract one number from another",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There are no possible next steps with the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 2 = 10 -> 10 / 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.0588235294117647"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1.0588235294117647 / 2 = 0.5294117647058824",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number. -> There are no possible next steps with the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 5.33 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number. -> There are no possible next steps with the input 5.33 as it is a single number. -> There are no possible next steps with the input 5.33 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number. -> There are no possible next steps with the input 5.33 as it is a single number. -> There are no possible next steps with the input 5.33 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5.33"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> No possible next steps for the input 5.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "84"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "84"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5.33"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> None, as there is only one number given. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "84"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 8 13"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 8 - 8 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 8 - 8 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Provide at least two numbers to perform arithmetic operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations. -> 2 + 8 = 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations. -> 2 + 8 = 10 -> 8 - 2 = 6 (left: 6 10)",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: 4 * (6 * 8 / 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 10 - 5 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 10 - 5 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 + 8 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "-1 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There is only one number, so no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 10 4 16 6",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "594"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 594 / 9 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 + 11 = 20 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "45 9 14"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 14"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 + 5 = 14 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no further possible next steps with the given input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 9 5"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 - 5 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 - 5 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 3 9 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 14"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 + 5 = 14 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 14"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 + 5 = 14 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "594"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "45 9 14"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 45 + 9 = 54 (left: 14 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 45 + 9 = 54 (left: 14 54) -> 14 * 54 = 756 (left: 756)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no further possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "594"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 3 9 5"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 9 + 5 = 14 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "45 9 14"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556 45) -> ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "45 9 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "594"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> Possible next steps: -> There are no further possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "45 9 14"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 45 / 9 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 = 14 -> 5 * 9 = 45 (left: 45 9 14) -> 45 / 9 = 5 (left: 5 14) -> 5 - 14 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no further possible next steps with the given input."
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 66."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 + 2 = 23"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33) -> 10",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 + 14 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> None",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 + 2 = 23"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 66."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> None.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> There is only one number given, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 * 5 = 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 3 + 9 = 12 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 3 + 9 = 12 (left -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "20 -0.05"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 * 5 = 20"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 4 - 5 = -1 (left: -1 = 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 4 - 5 = -1 (left: -1 = 20) -> -1 / 20 = -0.05 (left: 20 -0.05)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240) -> 240 * 8 = 1920 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "20 -0.05"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-12"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12) -> -12 * 2 = -24 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 * 5 = 20"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 5 * 4 = 20 (left: 20 = 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 5 * 4 = 20 (left: 20 = 20) -> 20 + 20 = 40",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56) -> There are no possible next steps with the number 56.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps from the current input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24 13"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.8461538461538463 (left: 1.8461538461538463)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.8461538461538463 (left: 1.8461538461538463) -> 1.8461538461538463 * 2 = 3.6923076923076926",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input value of 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input value of 11. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps from the current input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There is only one number, so there are no possible operations to perform.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There is only one number, so there are no possible operations to perform. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 + 2 = 13 -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps from the current input."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "11"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 + 2 = 11"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 2 + 9 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4.66666666667 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 4.66666666667 * 13.33333333334 = 62.22222222227 (left: 62.222222",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Input: 0.66666666667 *"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 4.66666666667 + 2 = 6.66666666667 (left: 6.66666666667 - -> Input: 0.66666666667 * -> 0.66666666667 * 8 = 5.33333333336 (left: 5.33333333336)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4.66666666667 13.33333333334"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.333333333335",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.333333333335 -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4.66666666667 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 13.33333333334 / 4.666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 13.33333333334 / 4.666 -> 13.33333333334 * 4.666 = 62.222222223238 (left: 62.222222223238)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Input: 0.66666666667 *"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 + 2 = 11"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 11 / 2 = 5.5 (left: 5.5 11) -> ",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 + 2 = 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4.66666666667 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 4.66666666667 + 13.33333333334 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Division by zero is undefined."
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> - Subtract two numbers",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Division by zero is undefined."
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "0 10 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 - 0 = 10 (left: 10 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4.66666666667 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 4.66666666667 * 13.33333333334 = 62.222222221 (left: 13.33333333334 62.222222221)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 4.66666666667 * 13.33333333334 = 62.222222221 (left: 13.33333333334 62.222222221) -> 13.33333333334 + 62.222222221 = 75.55555555434 (left: 75.55555555434)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Input: 0.66666666667 *"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 4.66666666667 + 2 = 6.66666666667 (left: 6.66666666667 -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 4.66666666667 + 2 = 6.66666666667 (left: 6.66666666667 - -> Input: 0.66666666667 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4.66666666667 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 13.33333333334 / 4.666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 (left: 4.66666666667 13.33333333334) -> 13.33333333334 / 4.666 -> 13.33333333334 / 4.666 = 2.85714285714 (",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 - 8 = -5"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 8 / 3 = 2.66666666667 (left: -5 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 8 / 3 = 2.66666666667 (left: -5 2 -> -5 / 2 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.4167"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4167 * 2 = 0.8334"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There is only one possible next step for the input 0.4167: -> 0.4167 * 2 = 0.8334 -> 0.4167 + 2 = 2.4167",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There is only one possible next step for the input 0.4167: -> 0.4167 * 2 = 0.8334 -> 0.4167 + 2 = 2.4167 -> 2 * 0.4167 = 0.8334",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.4167"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There are no possible next steps for the input 0.4167.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 - 8 = -5"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> -5 * 8 = -40 (left: -40)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Provide at least two numbers to perform operations."
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide at least two numbers to perform operations. -> 3. Multiply the two numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide at least two numbers to perform operations. -> 3. Multiply the two numbers -> 14 * 8 = 112 (left: 2 112)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.4167"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There are no possible next steps for the input 0.4167 as it is already a single value.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There are no possible next steps for the input 0.4167 as it is already a single value. -> There are no possible next steps for the input 0.4167 as it is already a single value.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.4167"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There is only one possible next step for the input 0.4167:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> There is only one possible next step for the input 0.4167: -> 0.4167 * 2 = 0.8334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 8 / 14 = 0.5714285714285714 (left: 24 0.5714285714285714)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 8 / 14 = 0.5714285714285714 (left: 24 0.5714285714285714) -> 24 * 0.5714285714285714 = 13.714285714",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.42857 10"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10) -> Input: 5 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 9"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input: 5 5 5 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> Input: 3 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> Input: 3 6 -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 24 + 8 = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 24 + 8 = 32 (left: 32 14) -> 32 * 14 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.42857 10"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 1.42857 + 10 = 11.42857 (left: 11.42857)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 8 + 24 = 32 (left: 14 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 3 * 8 = 24 (left: 8 24 14) -> 8 + 24 = 32 (left: 14 32) -> 14 + 32 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 -> There are no more possible next steps as the equation has been simplified to 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 -> There are no more possible next steps as the equation has been simplified to 1. -> 1 + 8 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> There are no more possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 - 1 = 5"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 / 1 = 6 (left: 6 5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 * 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 + 12 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 -> 5 * 5 = 25 (left: 25 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 -> 5 * 5 = 25 (left: 25 1) -> 25 * 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 5 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 / 5 = 1"
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22) -> 16 * 22 = 352 (left: 352)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22) -> 16 * 22 = 352 (left: 352)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112) -> 16 * 7 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 16 - 6 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 / 8 = 2 (left: 2 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 / 8 = 2 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 14 16"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22) -> 16 + 22 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 =  -> 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": "NA"
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "110"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 110."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "110"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 -> 110 - 2 = 108 (left: 108 220)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 110."
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110. -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "108 220"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 -> 110 - 2 = 108 (left: 108 220) -> 108 + 220 = 328",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 10 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 110."
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20) -> 2 + 20 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 10 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "110"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 + 2 = 112",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 + 2 = 112 -> 110 / 2 = 55 (left: 55 2 112)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "110"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110. -> There are no possible next steps for the input 110.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 2 - 10 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 10 2"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> 11 + 2 = 13 -> 2 ^ 11 = 2048 (left: 2048)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9.8 / 2 = 4.9"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 -> 4.9 * 2 = 9.8 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 -> 4.9 * 2 = 9.8  -> 4.9 - 2 = 2.9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 2 + 9.8 = 11.8 (left: 11.8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9.8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9.8 / 2 = 4.9"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 -> 4.9 - 2 = 2.9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 -> 4.9 - 2 = 2.9 -> 4.9 / 2 = 2.45 (left: 2.45)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4.9"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There is only one number given, so there are no possible next steps for calculations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There is only one number given, so there are no possible next steps for calculations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> No possible next steps with the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11. -> No possible next steps with the number 11. -> No possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 * 8 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 + 3 = 13 ("
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 = 13 ( -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 = 13 ( -> 3 + 10 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 / 49 = 0.14285714286 (left: 0.14285714286)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 = 13 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.5"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> There are no possible next steps with the input 5.5 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.666666666",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                }
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2) -> The input is invalid as it does not match any of the possible operations on the numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> There are no possible next steps with the input 5.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> There are no possible next steps with the input 5.5. -> 5.5 / 5.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 * 1.3333333333333333 = 3.5555555555555554 (left: ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "52"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> None - there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 * 1.3333333333333333 = 3.555555555555555 (left: 3",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 - 1.3333333333333333 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 5.5 as it is a single number and not an equation."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 + 1.3333333333333333 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.5"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 + 8 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> There are no possible next steps for the input 0.6666666666666666 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> There are no possible next steps for the input 0.6666666666666666 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.6666666666666665 = 1.3333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 + 1.3333333333333333 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "-2"
                }
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 5.5 as it is a single number and not an equation."
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> None, as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "None, as the equation is already solved."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> None, as the equation is already solved. -> None, as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> None, as the equation is already solved. -> None, as the equation is already solved. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 2 = 19 "
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19  -> 19 + 8 = 27 (left: 8 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19  -> 19 + 8 = 27 (left: 8 27) -> 27 - 8 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 + 2 = 23.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 2 = 19 "
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19  -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "80"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "None, as the equation is already solved."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 10 - 4 = 6 (left: 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as there is only one number in the input."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "21"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as there is only one number in the input."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input. -> None",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 - 2 = 19 "
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19  -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 / 8 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> 4 + 5 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> 4 + 5 = 9 (left: 6 7 9) -> 6 * 7 = 42 (left: 9 42)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with just one number. -> Input: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 / 8 = 1"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> 8 - 8 = 0 (left: 0 1)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input: 6"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with just one number. -> Input: 6 -> 6 + 6 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with just one number. -> Input: 6 -> 6 + 6 = 12 -> 6 * 6 = 36 (left: 6 12 36)",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "72"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 * 9"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 / 9 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 - 1 = 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 - 1 = 11"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "72"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 / 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 * 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "72"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> There are no possible next steps with the number 72.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> There are no possible next steps with the number 72. -> There are no possible next steps with the number 72.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 =  -> 12 - 1 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 - 1 = 11"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 =  -> 12 - 1 = 11 -> 12 / 1 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 =  -> 12 - 1 = 11 -> 12 / 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 * 9"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 * 9 = 54",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 * 9 = 54 -> 6 + 9 = 15 (left: 15 = 54)",
                "Pruning": null
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "59"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59) -> 59 + 2 = 61",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59) -> 59 + 2 = 61 -> 2 + 59 = 61 (left: 61)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> No possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> No possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54.4"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> 7",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 13"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "54.4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input of 11."
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11. -> 11 - 2 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54.4"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There are no possible next steps for the input 54.4 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There are no possible next steps for the input 54.4 as it is a single number. -> There are no possible next steps for the input 54.4 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "54.4"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There are no possible next steps with the input 54.4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There are no possible next steps with the input 54.4. -> There are no possible next steps with the input 54.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 15."
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of 11."
                }
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.57 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 15 / 0.57 = 26.32 (left: 26.32)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 * 8 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0.387755 (left: 0.387755)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0.387755 (left: 0.387755) -> 0.387755 + 2 = 2.387755",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.57 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 15 - 0.57 = 14.43 (left: 14.43)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.5"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 + 49 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 + 49 = 68 (left: 68) -> 68 - 6 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.57 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 0.57 * 15 = 8.55 (left: 8.55)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 49 / 19 = 2.5789473684210525 (left: 2.5789473684210525)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 49 / 19 = 2.5789473684210525 (left: 2.5789473684210525) -> 2.5789473684210525 + 8 = 10.5789473684210525",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> 11 / 1.75 = 6.2857 (left: 6.2857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.57 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 15 - 0.57 = 14.43 (left: 14.43)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0.387755102 (left: 0.387755102)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0.387755102 (left: 0.387755102) -> There are no possible next steps for the input 0.387755102 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.57 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 0.57 * 15 = 8.55 (left: 8.55)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.818"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818 -> 0.818 + 0.818 = 1.636 (left: 1.636)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6.2857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 5 - 25 = -20 (left: -20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 5 - 25 = -20 (left: -20) -> -20 - 2 = -22 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> No possible next steps, the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 64"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 4 "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 4 "
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 3 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9 -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9 -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 4 "
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> There are no possible next steps with the number -12.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> There are no possible next steps with the number -12. -> None.",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12) -> 32 * 12 = 384 (left: 384)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "12 30"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "32 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 30"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 30)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 + 2 = 50",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 30"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 30"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "32 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 30"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "32 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 8 + 4 = 12 (left -> 8 * 4 = 32 (left: 32 12) -> 32 * 12 = 384 (left: 384)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 - 2 = 46",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 * 2 = 132 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 * 2 = 132  -> 66 * 2 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 0.4745"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 - 0.4745 = 7.5255 (left: 0.4745 7.5255)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 - 0.4745 = 7.5255 (left: 0.4745 7.5255) -> 7.5255 / 0.4745 = 15.85 (left: 15.85)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8.86"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 0.4745"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745 (left: 0.4745 8.4745)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745 (left: 0.4745 8.4745) -> 8.4745 - 0.4745 = 8 (left: 8 8.4745)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 / 4 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 25 30 "
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 * 30 = 750 (left: 750)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8.86"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 0.4745"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745 -> 8 * 0.4745 = 3.796",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8.86"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 * 8 = 64",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 * 8 = 64 -> 64 / 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 0.4745"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 + 0.4745 = 8.4745 -> 8 * 0.4745 = 3.796 (left: 3.796 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 0.4745"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 + 8 = 16.86 -> 8 / 16.86 = 0.4745 (left: 8 0.4745) -> 8 * 0.4745 = 3.796 (left: 3.796)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> 8 * 8 = 64 -> 64 / 8 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 0.4745"
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 126 - 6 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 1.1666666666666667."
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 13."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 12 * 6 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 40"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 40 / 12 = 3.3333333333333335 (left: 3.333333333",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 1.1666666666666667."
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> Since the input provided is a decimal number, there are no possible next steps to perform arithmetic operations on it.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "234"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 2 + 3 = 5 (left: 5 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 2 + 3 = 5 (left: 5 4) -> 5 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "234"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 1.1666666666666667."
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.1666666666666667"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667. -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846 (left: 1.3846153846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846 (left: 1.3846153846) -> 1.3846153846 * 2 = 2.7692307692",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4166666666666667 * 2 = 0.8333333333333334"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.4166666666666667 / 2 = 0.20833333333333334 (left: 0.20833333333333334 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.4166666666666667 / 2 = 0.20833333333333334 (left: 0.20833333333333334 2) -> 0.20833333333333334 + 2 = 2.2083333333333335 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.4166666666666667"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4166666666666667 * 2 = 0.8333333333333334"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.8333333333333334 * 2 = 1.6666666666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.8333333333333334 * 2 = 1.6666666666666667 -> 0.8333333333333334 + 2 = 2.8333333333333335",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (left: 2.4 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4166666666666667 * 2 = 0.8333333333333334"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.8333333333333334 / 2 = 0.4166666666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 0.8333333333333334 / 2 = 0.4166666666666667 -> 0.8333333333333334 - 2 = -1.1666666666666665",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.4166666666666667"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps with the input of 0.4166666666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps with the input of 0.4166666666666667. -> There are no possible next steps with the input of 0.4166666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 0.4166666666666667."
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667. -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.4166666666666667"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4166666666666667 * 2 = 0.8333333333333334"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 2 * 0.4166666666666667 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 * 2 = 0.8333333333333334 -> 2 * 0.4166666666666667 = -> 2 * 0.4166666666666667 = 0.8333333333333334",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 10"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (4 * 6) = 24 or (6 * 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 * 8 = 288 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "None, the input provided already covers all possible operations with the given numbers."
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6 / 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> Input: 26 10 2.25 144",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> Possible next steps",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> Possible next steps -> No valid operation can be performed with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 42.66664)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.33333 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.7272727272727273 * 2 = 1.4545454545454546"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 - 8 = -2.66667 (left: -2.66667)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7272727272727273"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "40"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left -> 8 * 5 = 40 (left: 40) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left -> 8 * 5 = 40 (left: 40) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 - 8 = -2.66667 (left: -2.66667)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 / 5 = 1.6 (left"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.4"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4) -> 6 * 4 = 24",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7272727272727273"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5.33333 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 8 / 5.33333 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No valid operation can be performed with the given numbers."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 42.66664)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.33333 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 8 / 5.33333 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.33333 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 - 8 = -2.66667 (left: -2.66667)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 / 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44 4"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 172"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 - 4 = 172 (left: 4 172) -> 4 + 172 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 - 4 = 172 (left: 4 172)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 172"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 - 4 = 172 (left: 4 172) -> 4 / 4 = 1 (left: 1 172)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 - 4 = 172 (left: 4 172) -> 4 / 4 = 1 (left: 1 172) -> 172 - 172 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 172"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 * 8 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 172"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 - 4 = 172 (left: 4 172) -> 4 * 172 = 688 (left: 688)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 44"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 4 + 44 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 172"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 48 - 4 = 44 (left: 4 44)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 44"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 172"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 40 - 10 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.1667 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 172"
                }
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21) -> 11 + 21 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step."
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step. -> - 14 - ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step. -> - 14 -  -> -14 - 14 = -28 (left: -28)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 + 3 = 27 (left: 3 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 + 3 = 27 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps because there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps because there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 / 24 = 0.125 (left: 0.125 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 / 24 = 0.125 (left: 0.125 24) -> 0.125 * 24 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 / 10 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input 60. -> There are no possible next steps with the input 60.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "156"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 156 - 6 = 150 (left: 150)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left:  -> It seems like you have not provided any input for the next step calculation. Could you please provide the numbers or operation you would like to perform next?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> Invalid input. Please enter valid integers for arithmetic operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> Invalid input. Please enter valid integers for arithmetic operations. -> Please enter valid integers for arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.4"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Input only consists of one number, no operations can be performed."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number. -> Input only consists of one number, no operations can be performed. -> No operations can be performed on a single number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number. -> Input only consists of one number, no operations can be performed. -> No operations can be performed on a single number input. -> No operations can be performed on a single number input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Input only consists of one number, no operations can be performed."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number. -> Input only consists of one number, no operations can be performed. -> No operations can be performed since the input only consists of one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number. -> Input only consists of one number, no operations can be performed. -> No operations can be performed since the input only consists of one number. -> No operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input only consists of one number. -> Input only consists of one number, no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> There are no possible next steps with the input \"2.4\" as it is not a valid input for arithmetic operations. -> Error: Invalid input. Please enter valid numbers for arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with."
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with. -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with. -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 =  -> 5 - 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with."
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 - 1 = 4"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 =  -> 5 - 1 = 4 -> 5 * 1 = 5 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.625"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There are no possible next steps for the input 1.625 as it is a single number and there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 8 12.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 8 12.8) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 10."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 =  -> 5 - 4 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> -6.4 * 2 = -12.8 (left: -12.8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 10."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 - 4 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 12.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 12.8) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 10."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 10 12"
                }
            },
            "Step 4": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 120"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 * 15 = 120 (left: 15)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 120"
                }
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 120 + 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 120"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 120"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 15 + 25 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "31"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 120"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 15 / 3 = 5 (left: 5 5 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 15 / 3 = 5 (left: 5 5 3 -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 8 13"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 1 * 8 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 120"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 * 120 = 960 (left: 960)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "31"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 10 12"
                }
            },
            "Step 4": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 120"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 + 112 = 120 (left: 112)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> Possible next steps: None",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545455",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545455 -> 0.45454545454545455 * 2 = 0.9090909090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.9090909090909091 / 2 = 0.45454545454545453"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545453 -> 2 / 0.45454545454545453 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.45454545454545455 * 2 = 0.9090909090909091"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545453",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545453 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2.909090909090909)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "70"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There are no possible next steps with the input of 70.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There are no possible next steps with the input of 70. -> There are no possible next steps with the input of 70.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545453",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "70"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There is only one possible next step for the number 70:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There is only one possible next step for the number 70: -> 70 / 2 = 35",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 10 = 20 -> 10 + 10 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "70"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.9090909090909091 / 2 = 0.45454545454545453"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545453 -> 2 - 0.909090909090909",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545453 -> 2 - 0.909090909090909 -> 2 - 0.909090909090909 = 1.090909090909091",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There is only one number given, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "70"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "70"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 - 2 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\nAnswer: ((5 * 2) - 3) * 10 = 70",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 + 12 = 20 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "56 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "56 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 + 12 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 + 12 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * 6) * 2 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "56 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7273"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> 0.7273 + 0.7273 = 1.4546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "56 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44) -> There are no possible next steps with just the input of 44.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "56 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44) -> There are no possible next steps for the input 44.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 / 1 = 8 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 / 1 = 8 (left: -> 1 * 8 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 1 + 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 1 + 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 5 + 10 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 1 = 7 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 1 = 7 (left: -> 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 4 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 3 + ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 3 +  -> 3 + 2 = 5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.9167"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "15 / 2 = 7.5 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 / 1 = 4 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 4 / 1 = 4 ( -> 4 / 1 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104) -> 10 + 4 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as the equation has been solved."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "288"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 88 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 6 / 3 = 2 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 6 / 3 = 2 ( -> Input: 9 2",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "288"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21) -> 21 + 8 = 29 (left: 8 29)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 3 - 6 = -3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 3 - 6 = -3 (left: -> 6 - 3 = 3 (left: -3 3)",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 + 17 = 18"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 18 / 1 = 18 (left: 1 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 18 / 1 = 18 (left: 1 18) -> 18 / 1 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.14285714286"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5.14285714286"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 - 5 = 0.14285714286",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 - 5 = 0.14285714286 -> 5.14285714286 * 5 = 25.7142857143 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number. -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5.14285714286"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 + 5 = 10.14285714286 (left: 5.14285714286 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 + 5 = 10.14285714286 (left: 5.14285714286 5) -> 5.14285714286 * 5 = 25.7142857143 (left: 25.7142857143)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18 / 0 = undefined"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 + 17 = 18"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 17 - 17 = 0 (left: 0 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 17 - 17 = 0 (left: 0 18) -> 18 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5.14285714286"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 2 = 10.28571428572",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 2 = 10.28571428572 -> 2 * 5.14285714286 = 10.28571428572",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "252"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 25 / 2 = 12.5 (left: 12 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 25 / 2 = 12.5 (left: 12 5) -> 12 + 5 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5.14285714286"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 2 = 10.28571428572",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 2 = 10.28571428572 -> 5.14285714286 / 2 = 2.57142857143",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 1 * 7 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 + 17 = 18"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 18 - 1 = 17 (left: 1 17)",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 440"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 / 44 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps, as all combinations have been exhausted."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> 4 + 9 = 13 (left: 13 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 440"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 - 44 = 396 (left: 44 396)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Possible next steps: -> There are no possible next steps, as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps for the input of 2.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There is only one number given (0.846), so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 + 10 = 13 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> There are no possible next steps for the input 0.8461538461538461.",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12) -> 3.25 + 12 = 15.25 (left: 15.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.33"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 0.2083"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 + 0.2083 = 8.2083 (left: 8.2083)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.6667"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> 1.6667 / 8 = 0.2083 (left: 0.2083)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.33"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67 -> 1.33 / 2 = 0.665 (left: 0.665)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 0.2083"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 + 0.2083 = 8.2083",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 + 0.2083 = 8.2083 -> 8 / 0.2083 = 38.4046 (left: 38.4046)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.6667"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the number 1.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the number 1.6667 as it is already a single number. -> There are no possible next steps with the number 1.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 0.2083"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 - 0.2083 = 7.7917 (left: 7.7917)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There is only one number, so there are no possible next steps. -> Input: 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 0.2083"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 + 0.2083 = 8.2083 (left: 8.2083)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.33"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 - 1 = 0.33 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.6667"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 0.2083"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 8 = 0.2083 (left: 8 0.2083) -> 8 / 0.2083 = 38.4042 (left: 38.4042)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> No possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "170 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 * 36 = 6120 (left: 6120)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "170 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 * 36 = 6120 (left: 6120)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Please provide more numbers to continue."
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number. -> Please provide more numbers to continue. -> It seems like we have exhausted the possible operations with the current numbers provided. Please provide more numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "170 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 * 36 = 6120 (left: 6120)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps? -> Without the correct input, I am unable to suggest possible next steps. Please provide the correct input so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "170 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 - 36 = 134 (left: 134)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Please provide more numbers to continue."
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number. -> Please provide more numbers to continue. -> It seems like you have exhausted all possible operations with the given numbers. Please provide more numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number. -> Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "170 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 / 36 = 4.72222 (left: 4.72222)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "170 36"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 26 - 9 = 17 (left: 10 17 36) -> 10 * 17 = 170 (left: 170 36) -> 170 / 36 = 4.722222222222222 (left: 4.722222222222222)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "170 36"
                }
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Only one number is provided, so no mathematical operations can be performed."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided. -> Only one number is provided, so no mathematical operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Only one number is provided, so no mathematical operations can be performed."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided. -> Only one number is provided, so no mathematical operations can be performed. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There is only one possible step: 36 divided by 2 = 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There is only one possible step: 36 divided by 2 = 18. -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Only one number is provided, so no mathematical operations can be performed."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided. -> Only one number is provided, so no mathematical operations can be performed. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38 -> 36 - 2 = 34 (left: 34 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "34 38"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 + 2 = 38 -> 36 - 2 = 34 (left: 34 38) -> 34 / 38 = 0.8947368421052632 (left: 0.8947368421052632)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "34 38"
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Please provide at least two numbers for possible next steps."
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide one number by another",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44) -> 13 * 44 = 572 (left: 572)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "169"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169) -> 169 / 2 = 84.5 (left: 84.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "572"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.866666666667"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 + 0.866666666667 = 1.733333333334 (left: 1.733333333334)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Please provide at least two numbers for possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "169"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169) -> 13 * 13 = 169",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169) -> 13 * 13 = 169 -> 13 + 13 = 26 (left: 26 = 169)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Please provide at least two numbers for possible next steps."
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - 14 - 8 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "572"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44) -> 13 * 44 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44) -> 13 * 44 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "169"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "572"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 - 7 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "169"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169) -> 13 + 9 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "572"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "26 = 169"
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 / 13 = 0.76923076923 (left: 0.76923076923 13 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "39"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> The input number 39 is already a single number and cannot be broken down further using the operations of addition, subtraction, multiplication, or division.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "195"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "195"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 1 * 9 * 5 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "39"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 10 / 4 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 10 / 4 = -> 10 / 4 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "195"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 5 * 9 = 45 (left: 1 45)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "39"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 9 + 5 = 14 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 / 4 = 2.5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> 10 / 4 = -> 10 / 4 = 2.5 -> There are no more possible next steps as the equation has been solved.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 817319,
        "output_tokens": 305715.9253968257,
        "total_cost": 0.8672333880952385
    }
}