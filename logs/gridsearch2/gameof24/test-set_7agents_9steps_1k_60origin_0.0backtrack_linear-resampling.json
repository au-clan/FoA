{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 5 = 26.4 (left: 26.4)\n26.4 - 6 = 20.4 (left: 20.4)\n20.4 - 4",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> I hope this helps! Let me know if you need further assistance.",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> The final equation is 6 * (10 - 5) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> All given examples are correct!",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n5 + 4 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (7 - 3) * (5 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 3) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - (8 - 9)) * 9 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 4 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) * 3 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 9 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 6 8\nSteps:\n6 - 3 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (3 * 3) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((5 + 6) - 4) * 3 +",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 * 7) / (8 - 3)) +",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 4 5 7\nSteps:\n4 + 7 = 11 (left: 3 5 11)\n5 + 11 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 4) + (5 + 7)) -",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3 24)\n3 * 3 = 9 (left: 9 24)\n9 - 24 = -15 (left: -15)\n-15 + 24 = 9 (left: 9)\nAnswer: ((3 * 8) - (6",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 4 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\n-9 * -1 = 24 (left: 24)\nAnswer: (3 * 8) + ((6 + 9) - 24) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 2"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 4) + 7) * 3 -",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 9) - 3) - 3 =",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 + 7) * 3 * (5 - 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * 3 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 4 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 3 = 26 (left: 26)\n26 - 5 = 21 (left: 21)\n21 - ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 8 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - 21 = 2 (left: 2)\n2 * 23 = 46 (left: 46)\n46 - 26 = 20 (left: 20)\n20 / 2 =",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 11 - 9 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 * 3) - (7 - 5) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 * 4 = 9.32 (left: 9.32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 / 50 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input: 3 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Input: 3 6"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6 -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 * 10 = 150 (left: 150 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 * 50 = 1250 (left: 1250)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "25 50"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33) -> 6.33 * 8 = 50.64 (left: 50.64)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 - 15 = 35 (left: 10 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 - 50 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "15 40"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "15 40"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 - 10 = 40 (left: 15 40) -> 15 / 40 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "10 15 50"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 / 10 = 1.5 (left: 1.5 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 * 50 = 1250 (left: 1250)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9.32"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 * 4 = 9.32 (left: 9.32) -> 9 / 32 = 0.28125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 - 5 = 10 (left: 10 15 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 + 50 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.33 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Input: 3 6"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6 -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6 -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "15 40"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 / 50 = 0.5 (left: 0.5 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 / 10 = 1.5 (left: 1.5 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 50 / 25 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10 35"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 - 15 = 35 (left: 10 35) -> 10 + 35 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "15 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 / 50 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "10 35"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 / 15 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 + 50 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "7 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.33 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> 1.33 + 7 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6 -> 6 / 3 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 35"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 - 50 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "25 50"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 - 10 = 40 (left: 15 40)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 * 50 = 1250 (left: 1250)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "7 7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Input: 3 6"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> Input: 3 6 -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "50 / 15 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 * 15 = 150 (left: 150 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "5 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 - 10 = 5 (left: 5 50) -> 5 + 50 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "15 40"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 + 10 = 15"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "25 50"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 + 10 = 25 (left: 25 50) -> 25 + 50 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 35"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10 35"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 50 - 15 = 35 (left: 10 35) -> 35 - 10 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 15 - 10 = 5 (left: 5 50)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 5 + 10 = 15 -> 5 * 10 = 50 (left: 10 15 50) -> 10 + 15 = 25 (left: 25 50) -> 25 + 50 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1.5 50"
                }
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 / 8 = 0.333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 16."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 11"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 16."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 10 / 5 = 2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.7273"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "88"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.7273"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 / 11 = 0.7273 (left: 0.7273) -> 0.7273 * 2 = 1.4546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "Please provide more numbers to continue the calculation."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 * 8 = 21.33336 (left: 8 21.33336)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.7273"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 / 11 = 0.7273 (left: 0.7273) -> There are no possible next steps with the input 0.7273.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 / 11 = 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "8 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input of 16."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 16."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 = 1.57 (left: 1.57 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 40 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3.67 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.7273"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input of 16."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 8 = 2 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "3.67 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 16"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 / 2 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2.66667 / 8 = 0.333"
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 \u2248 10.3333 (left: 10.3333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 3 + 3 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> 27 - 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6.7499"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 3 - 9 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> 27 + 8 = 35 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 3 + 3 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10.3333"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number provided, so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 / 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> 27 + 8 = 35 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6.7499 * 2 = 13.4998"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.7499"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499) -> 6.7499 * 2 = 13.4998 (left: 13.4998)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> 27 + 8 = 35 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7501 (left: 6.7501)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.7499"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499) -> 6.7499 * 2 = 13.4998",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 13 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> -",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "9 - 3 = 6 (left:"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.7501"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7501 (left: 6.7501) -> 6.7501 + 2 = 8.7501",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> There is only one possible next step: 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 3 + 3 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 9 -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "3.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 * 3 = 18 (left: 18 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 21"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 90"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 * 6 = 90 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 9"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8 -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 / 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 - 6 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "13 72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 90"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 * 6 = 90 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 10"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 - 3 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 21"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 90"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 * 6 = 90 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 9"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 8 = 12 (left: 8 12 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 21"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> Input: 4 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 21"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 3 * 21 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 1 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 - 9 = -8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 10"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 - 6 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 / 6 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3 21"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 21"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 3 * 21 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "13 72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 - 1 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 9"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number. -> Please provide more than one number to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 21"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 90"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 * 6 = 90 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 9"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number. -> 6 + 8 = 14 (left: 2 4 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 6 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 - 3 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15 - 6 = 9 (left:"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 15 - 6 = 9 (left: -> 15 * 6 = 90 (left: 6 90)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 21"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 / 3 = 3 (left: 3 6 15 -> 6 + 15 = 21 (left: 3 21) -> 3 + 21 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 - 1 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 10"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 * 11 = 110 (left: 110 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 1 + (11 * (13 - 11)) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "12 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 1 = 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 / 9 = 0.1111111111111111 (left: 0.1111111111111111)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "11 / 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "13 23"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.1111111111111111"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 / 9 = 0.1111111111111111 (left: 0.1111111111111111) -> 0.1111111111111111 + 2 = 2.111111111111111 (left: 2.111111111111111)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 + 11 = 21 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 1 = 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 1 = 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 / 11 = 0.9091 (left: 0.9091 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 + 11 = 19 (left: 11 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11) -> 11 * 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8.0909"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 17"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11 17) -> 11 - 17 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 135.625 (left: 135.625)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> Input: 3 5 7 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 / 12.375 = 0.88888 (left: 0.88888)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 11 17"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 10 11 17) -> 11 + 17 = 28 (left: 10 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> 14 + 2 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 / 12.375 = 0.888 (left: 0.888)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 1.375 * 9.625 = 13.203125 (left: 13.203125)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 0.9091"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 / 11 = 0.9091 (left: 9 0.9091) -> 9 + 0.9091 = 9.9091 (left: 9.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "11 11 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 135.125 (left: 12.375 135.125)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 9.625 - 1.375 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "12.375 135.125"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 + 11 = 19 (left: 11 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 3 + 9 = 12 (left: 12 27) -> 27 / 12 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11 12.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 11 17"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 10 11 17) -> 11 + 17 = 28 (left: 10 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 136.125 (left: 136.125)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "28"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 3 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 / 11 = 0.9091 (left: 9 0.9091)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 0.9091"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 / 11 = 0.9091 (left: 9 0.9091) -> 9 - 0.9091 = 8.0909 (left: 8.0909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 3 + 9 = 12 (left: 12 27) -> 12 + 27 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.375 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 10 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "10 28"
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 10 11 17) -> 11 + 17 = 28 (left: 10 28) -> 28 / 10 = 2.8 (left: 2.8)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 135.125 (left: 135.125)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "-6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 1.375 + 9.625 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 + 2 = 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 136.125 (left: 136.125)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11) -> None, as there is only one number given. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 - 12.375 = -1.375 (left: -1.375)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.375 9.625"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.375 9.625"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 1.375 * 9.625 = 13.203125 (left: 13.203125)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 11 / 9 = 1.22 (left: 1.22 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8.0909"
                }
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 / 11 = 0.9091 (left: 9 0.9091) -> 9 - 0.9091 = 8.0909 (left: 8.0909) -> 8 + 0.0909 = 8.0909 (left: 0.0909)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11 12.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 17"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11 17) -> 11 + 17 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11 17) -> 11 + 17 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "11 12.375"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11 12.375"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 + 12.375 = 23.375 (left: 23.375)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.375 9.625"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12.375 135.125"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 * 12.375 = 135.125 (left: 12.375 135.125) -> 12.375 * 135.125 = 1672.90625 (left: 1672.90625)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6 9 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 + 9 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps with the input 54 = 54 as it is already a completed equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> N/A",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 + 9 = 15 (left: 15 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> No possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> No possible next steps as the equation is already balanced. -> No possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "6 + 9 = 15"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 = ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 5 = 8 (left: 7.",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 + 9 = 15 (left: 15 = 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "There are no possible next steps as the equation is already balanced."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> 54 + 54 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "6 * 9 = 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 - 9 = -6.75 (left: -6.75)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 + 9 = 15 (left: 15 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "15 = 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> N/A",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "No possible next steps as the equation is already balanced."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 54 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 + 2.25 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 54 (left: 54) -> There are no possible next steps for the input 54.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> 54 + 54 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 * 9 = 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> No possible next steps as the equation is already balanced. -> No possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps as the equation is already balanced."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 * 9 = "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 * 9 = "
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 - 9 = -3 (left: -3 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> 54 + 54 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as the equation is already balanced."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps as the equation is already balanced."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 - 9 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with the input of 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with the input of 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 + 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "None, as there are no other numbers to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 4 * 8 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 18."
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> 8 / 7 = 1.1428571428571428 (left: 1.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 3 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no possible next steps from the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "9 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 8 12) -> 8 + 4 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> No possible next steps. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4) -> There is only one possible next step: 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0.7777777777777778 + 2 = 2.7777777777777777"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.3888888888888889 2 2.7777777777777777"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 2.7777777777777777 / 2 = 1.388",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 0.7777777777777778 + 2.7777777777777777 = 3.5555555555555555 (left: 3.5555555555555555)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.3888888888888889 2 2.7777777777777777"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "20.25"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25) -> 20.25 - 2 = 18.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 5 * 10 = 50 (left: 15 50 20) -> Input:",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2.7777777777777777 - 0.777777"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 2.7777777777777777 - 0.7777777777777778 = ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 3 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 15"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 10 + 5 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0.7777777777777778 + 2 = 2.7777777777777777"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 - 2 = -1.2222222222222223",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 5 * 10 = 50 (left: 15 50 20) -> Input:",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 0.7777777777777778 + 2.7777777777777777 = 3.5555555555555555 (left: 3.5555555555555555)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.3888888888888889 2 2.7777777777777777"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 3 = 8 (left: 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 10 + 5 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.7777777777777778"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 / 2 = 0.3888888888888889",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "0.7777777777777778 + 2 = 2.7777777777777777"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 2.7777777777777777 - 0.777777",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.3888888888888889 2 2.7777777777777777"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 2 - 0.3888888888888889 = 1.611111111111111 (left: 1.611111111111111 2.7777777777777777)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 0.7777777777777778 + 2.7777777777777777 = 3.5555555555555555 (left: 3.5555555555555555)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "15 50 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) ->  -> There are multiple possible next steps depending on the operations allowed. Can you please specify which operations are allowed for the next step?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0.7777777777777778"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.777777777777778",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.7777777777777778 / 2 = 0.3888888888888889"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 / 2 = 0.3888888888888889 -> ",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "5 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 5 * 10 = 50 (left: 15 50 20) -> 20 + 15 = 35 (left: 50 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 0.7777777777777778 + 2.7777777777777777 = 3.5555555555555556 (left: 3.5555555555555556)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as the input is incomplete."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) ->  -> There are no possible next steps as the input is incomplete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0.7777777777777778"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 10 + 5 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5) -> There are no possible next steps with just one number provided. If you provide more numbers, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.3888888888888889 2 2.7777777777777777"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 0.7777777777777778 + 2.7777777777777777 = 3.5555555555555555 (left: 3.5555555555555555)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 15"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 10 + 5 = 15 (left: 3 15) -> 15 - 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps with just the number 2."
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 5 * 10 = 50 (left: 15 50 20)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 5 * 10 = 50 (left: 15 50 20) -> 50 / 15 = 3.33 (left: 3.33 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.7777777777777778 2.7777777777777777"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 2 = 2.7777777777777777 -> 0.7777777777777778 / 2 = 0.3888888888888889 (left: 0.3888888888888889 2 2.7777777777777777) -> 0.3888888888888889 * 2 = 0.7777777777777778 (left: 0.7777777777777778 2.7777777777777777) -> 2.7777777777777777 - 0.7777777777777778 = ",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "24 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "45"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> None as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 / 6 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 - 3 ="
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 + 0 = 9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 9 / 0 = Undefined (cannot divide by zero) -> 9 + 0 = 9 -> 9 - 9 = 0 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There is just one number, so there are no possible next steps. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 9 = 81 (left: 81 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "9 153"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 9 153) -> 9 / 9 = 1 (left: 1 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 5 + 10 = 15 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 / 0 = Undefined (cannot divide by zero"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 9 / 0 = Undefined (cannot divide by zero) -> 9 + 0 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 - 3 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "9 - 9 = 0 (left"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 9 / 0 = Undefined (cannot divide by zero) -> 9 + 0 = 9 -> 9 - 9 = 0 (left -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 - 3 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "135"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135) -> 1 * 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4.5 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 9 / 0 = Undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 - 3 ="
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is just one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There is just one number, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9 16"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 9 16) -> 9 - 16 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 - 3 ="
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There is just one number, so there are no possible next steps. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 6 - 1.5 = 4.5 (left: 4.5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "135"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9 153"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "45"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is just one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There is just one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 9 153)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81 144"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 9 = 81 (left: 81 144) -> 81 + 144 = 225 (left: 225)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 - 6 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 / 9 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 7 + 3 = 10 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "45"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "153"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)  -> 153 is a prime number and cannot be broken down further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 - 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "45"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 36 + 9 = 45 (left: 45) -> There is just one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 - 3 = 4"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 7 - 3 = -> 7 - 3 = 4 -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "45"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "9 - 9 = 0 (left"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 9 / 0 = Undefined (cannot divide by zero) -> 9 + 0 = 9 -> 9 - 9 = 0 (left -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1.33 4"
                }
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There is only one number left, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 * 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3.5 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 - 8 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 + 9 = 18 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just the number 9."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> No possible next steps. The input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> There is only one number left, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just the number 9."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 2.2 * 11 = 24.2 (left: 11 24.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11 24.2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 1 = 49 (left: 11 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "11 49"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 1 = 49 (left: 11 49) -> 49 / 11 = 4.454545454545454 (left: 4.454545454545454)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4.454545454545454"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 1 = 49 (left: 11 49) -> 49 / 11 = 4.454545454545454 (left: 4.454545454545454) -> 4.454545454545454 - 4 = 0.454545454545454 (left: 0.454545454545454)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11 24.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 / "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 2.2 + 11 = 13.2 (left: 11 13.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8.8 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 51"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 + 51 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "62"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 + 51 = 62 (left: 62) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 3 + 9 = 12 (left: 12 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 2.2 * 11 = 24.2 (left: 11 24.2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 51"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 * 51 = 561 (left: 561)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "62"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 + 51 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> Input: 3 9 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.8 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 - 2.2 = 8.8 (left: 8.8 11) -> 8.8 - 11 = -2.2 (left: -2.2)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "50 - 11 = 39 (left:"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: -> 50 + 11 = 61 (left: 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "561"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 * 51 = 561 (left: 561) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "5 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "6 + 2 = 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 2.2 * 11 = 24.2 (left: 11 24.2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 27",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "11 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 * 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "50 - 11 = 39 (left:"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: -> 50 * 11 = 550 (left: 550)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: -> 39 + 11 = 50 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11 24.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 * 5 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 51"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 * 51 = 561 (left: 561)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "550"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: -> 50 * 11 = 550 (left: 550) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "6 + 2 = 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.2 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 - 2.2 = 8.8 (left: 8.8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.8 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 - 2.2 = 8.8 (left: 8.8 11) -> 11 - 8.8 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 / "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "50 - 11 = 39 (left:"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: -> 39 + 11 = 50 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "561"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 1 + 50 = 51 (left: 11 51) -> 11 * 51 = 561 (left: 561) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "11 24.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11 11) -> 11 / 2.2 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "11 / "
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 9 - 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 9 - 3 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.846"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 * 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 7 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.846"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 / 2 = 0.423"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 + 6 = 17 (left: 7 17) -> 24 * 56 = 1344 (left: 1344)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.846"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> There are no possible next steps for the number 0.846 as it is already a decimal number."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> There is only one possible next step: 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 / 8 = 0.875 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "7 / 8 = 0.875 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 24 10 119 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 + 9 = 24 (left: 24) -> Answer: ((9 - 2) + 8) + 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 8 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 4 1"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2.42857"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((9 - 2) + 8) + 15 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> Input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "7 72"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (9 - 2)) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 2 * 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: 9 + (7 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.42857 (left: 2.42857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (9 - 2)) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (9 - 2) + (8 + 9) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 + 9 = 24 (left: 24) -> Answer: ((9 - 2) + 8) + 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 / 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((9 - 2) + (8 + 9)) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (9 - 2)) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There are no possible next steps with the number 21."
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> There are no possible next steps with the number 21. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240) -> 240 / 6 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "20 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "21"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with the input 20."
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 4 56)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 56"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "Invalid input. Please provide at least two numbers to perform operations on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 56"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 19"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> No possible next steps for the input 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No possible next steps for the input 2."
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> No possible next steps for the input 2. -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "20 21"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 * 21 = 420 (left: 420)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 21."
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> There are no possible next steps with the input 21. -> None",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "20 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 / 5 = 2.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240) -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "20 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> Invalid input. Please provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4 -> 4 * 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 21."
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> There are no possible next steps with the input 21. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 56"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 4)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "21"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> There are no possible next steps with the number 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240) -> There are no possible next steps because there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "56"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56) -> There is only one number, so there are no possible next steps. The result is 56.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 56"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 12 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "20 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 + 2 = 22 (left: 2) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 12 14"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 140"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 140 - 10 = 130 (left: 130)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 / 14 = 0.71429 (left: 0.71429)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 140"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 14 + 126 = 140 (left: 140)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 / 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 / 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 14 140)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 140"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 14 + 140 = 154 (left: 140)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((12 - 2) * 7) + 10 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 / 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 140"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 140 - 126 = 14 (left: 14)"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 18"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.28571428571"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571) -> 1.28571428571 / 2 = 0.642857142855 (left: 0.642857142855)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 2 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 * 7 = "
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.857142857"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.85714285714 = 42"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 / 7 = 0.85714285714 (left: 0.85714285714 = 42) -> 0.85714285714 + 42 = 42.85714285714 (left: 42.85714285714)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "6 * 3 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 - 3 = "
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 - 3 = 3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 = ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 * 7 = "
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 * 7 = 42"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 - 7 = -1 (left: -1 = 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 7 = 42"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> None, the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "-42 42"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 - 7 = -1 (left: -1 = 42) -> -1 * 42 = -42 (left: -42 42) -> -42 + 42 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6 + 3 = 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Possible"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> 8. o / s =",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 - 3 = 3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 * 7 = "
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "0.85714285714 = 42"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.28571428571"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571) -> 1.28571428571 * 2 = 2.57142857142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 + 7 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 / 7 = 2.14 (left: 2.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6 * 7 = 42"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1 = 42"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 - 7 = -1 (left: -1 = 42) -> -1 * 42 = -42 (left: -42 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.85714285714 = 42"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 / 7 = 0.85714285714 (left: 0.85714285714 = 42) -> 0.85714285714 + 42 = 42.85714285714",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> Input: 5 3 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8. o / s ="
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> 8. o / s = -> 8 / 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 / 7 = 0.857142857 (left: 0.857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 * 7 = "
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6 * 7 = 42"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "63"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "-42 42"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 - 7 = -1 (left: -1 = 42) -> -1 * 42 = -42 (left: -42 42) -> -42 - 42 = -84 (left: -84)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 - 6 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: -> 7 + 6 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 * 7 = 42"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 * 7 =  -> 6 * 7 = 42 -> 6 / 7 = 0.85714285714 (left: 0.85714285714 = 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 / 7 = 0.857 (left: 9 0.857)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8 15) -> 8 / 15 = 0.5333 (left: 0.5333)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 31"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 / 31 = 0.032258 (left: 0.032258)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 * 4 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 - 32 = -31 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 31"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "45 13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Input: 4 10 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "1 31"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "32 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 + 0.03125 = 32.03125 (left: 32.03125)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "45 13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 4 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 31"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 - 31 = -30 (left: -30)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1 31"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 * 32 = 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 + 31 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 31"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "Input: 4 10 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 9 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "14 45"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "45 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 31"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 5 - 3 = 2 (left: 2",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "5 1"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 5 / 5 = 1 (left: 5 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> Input: 4 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 + 0.03125 = 32.03125 (left: 32.03125)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 31"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 / 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "32 32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 31"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 + 31 = 32 (left: 31 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 - 18 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 * 2 = 26 (left: 7 26 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 7 + 17 = 24 (left: 24 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "19 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 * 2 = 26 (left: 7 26 30) -> 26 - 7 = 19 (left: 19 30) -> 19 - 30 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "13 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 + 13 = 34 (left: 30) -> 30 * 2 = 60",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> There are no possible next steps for the number 31 as it is a prime number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 + 7 = 37 (left: 13 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 26 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 * 2 = 26 (left: 7 26 30) -> 26 - 7 = 19 (left: 19 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "19 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 * 2 = 26 (left: 7 26 30) -> 26 - 7 = 19 (left: 19 30) -> 30 - 19 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "21 13 30"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 13 + 30 = 43 (left: 21 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 18 + 13 = 31 (left: 31) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 7 = 23 (left: 7 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 13 * 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 17 / 7 = 2 (left: 2 30) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 - 13 = 8 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30) -> 30 / 2 = 15 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "31 is a prime number, so there are no possible next steps for this input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 30 / 7 = 4 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 7 + 17 = 24 (left: 24 30) -> 24 * 30 = 720 (left: 720)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "31 is a prime number, so there are no possible next steps for this input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 + 13 = 34 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30) -> There are no possible next steps for the number 30.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 is a prime number, so it cannot be split into two numbers using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 7 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 17 / 7 = 2 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "19 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 * 2 = 26 (left: 7 26 30) -> 26 - 7 = 19 (left: 19 30) -> 30 - 19 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "13 23"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 13 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30) -> There are no possible next steps for the number 30.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 5 7"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 5 7 -> 5 + 7 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 13 30"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 + 30 = 43 (left: 7 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 30 / 17 = 1 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 - 13 = 17 (left: 7 17 30) -> 7 + 17 = 24 (left: 24 30) -> 24 * 30 = 720 (left: 720)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "21 43"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 + 13 = 34 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 + 13 = 34 (left: 30) -> There are no possible next steps for the number 30 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 - 18 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 13 + 30 = 43 (left: 21 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "21 43"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 13 + 30 = 43 (left: 21 43) -> 21 * 43 = 903 (left: 903)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "31 is a prime number, so it cannot be split into two numbers using basic arithmetic operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 13 30"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 * 13 = 273 (left: 30)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 30"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 7 * 3 = 21 (left: 21 13 30) -> 21 - 13 = 8 (left: 8 30) -> 8 * 30 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided."
                }
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "144"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "10 * "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 *  -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "144"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> 144 / 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input of 144 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the input of 144 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 8 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "144"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> No possible next steps for the input 144.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 1 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 144 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 -> Input: 6 * 2 = 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 2 + 8 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 1.25 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 8 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input of 144 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input of 144 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number. -> There are no possible next steps with the input of 144 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 2 + 8 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "144"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps with the input of 144 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 144 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left: -> 18 * 8 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number. -> There are no possible next steps for the input 144 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps with the input of 144 as it is a single number."
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + (6 + 6)) + 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 12 / 36 = 0.3333 (left: 0.3333 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 + 4) * 6) - 12 = 24"
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 9 "
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 5 * 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 + 1.33 = 19.33 (left: 1.33 19.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 12"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 3) / 9) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 81 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.33 16.67"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) * ((18 / 9) * 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 + 1.33 = 19.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 9 * 2 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) * (9 / 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 9 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) + (9 / 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 18 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) * (9 / 12) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 3) / 9) * 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) * ((9 / 18) * 12) = 24"
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 * 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 8 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 * 1 = 21 (left: 21)\nAnswer: ((3 * 7) * (8 - 3)) /",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 2 3 5 9\nSteps:\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((5 - 3) * 9) + 2 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "4 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 24)\n6 * 24 = 24\nAnswer: ((3 * 3) + (7 + 8)) * 24 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "12 13 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.5 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\nAnswer: (3 * 3) * (8 - 5) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (4 * 6) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((5 * 4) - 6) + 3 + 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 13 54"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (7 + 8) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 * 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\nAnswer: (3 * 8) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) + 5) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (8 - 3) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> The answer is 6 * (13 - 9) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 9\nSteps:\n3 * 4 = 12 (left: 3 9 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (5 + 7 - 8) * 3 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n27 - 6 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: (3 * 9) - (6 + 3) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.5 4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (3 + 5) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n21 * 8 = 168 (left: 168)\n168 / 7 = 24 (left: 24)\nAnswer: ((3 * 7) + 3) / 5 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 + 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (6 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 8\nSteps:\n4 + 8 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\nAnswer: (3 * 3) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 7 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n20 / 5 = 4",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (6 + 7) - 5 * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 6 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 10 / 2 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 + 8 = 14 (left: 14 6)\n14 - 6 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) + 6) * 8 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = 9 (left: 9)\nAnswer: (3 * 8) + (6 + 9 - 24) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n25 - 7 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\nAnswer: (5 * 5) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 4 6 8\nSteps:\n4 * 6 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 2 3 9)\n2 * 9 = 18 (left: 18 3)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((8 - 6) * 9) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * 3) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 6 9\nSteps:\n6 * 3 = 18 (left: 6 9 18)\n9 - 6 = 3 (left: 3 18)\n3 * 18 = 54 (left: 54)\nAnswer: (6 * 3) * (9 - 6) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 3 = 19 (left: 19)\n19 + 19 = 38 (left: 38)\n38 - 14 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 6) - 12) * 4 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 + 3 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 4) + 3 + 4 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n1 * 9 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n4 - 3 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (4 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (3 + 6 + 7) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 24)\nAnswer: (3 * 6) + (5 + 7) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 12 10)\n12 + 10 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 2 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 3 = 9 (left: 9 30)\n30 - 9 = 21 (left: 21)\n21 + 9 = 30 (left: 30",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "13 / 4 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * 6 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 6\nSteps:\n5 + 3 = 8 (left: 3 6 8)\n8 * 3 = 24 (left: 24)\nAnswer: (5 + 3) * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n3 + 7 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((3 + 5) + (3 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * (8 - 3) /",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + (16 - 8) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 3 = 10 (left: 10 14)\n10 * 14 = 140 (left: 140)\n140 / 6 = 24 (left: 24)\nAnswer: ((6 + 8) + (7 + 3)) * 140 / 6 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 - 9 = -3 (left: -3 24)\n-3 + 24 = 21 (left: 21)\nAnswer: (3 * 8) + (6 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 - (12 - 8)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 / 6 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.6667 (left: 16.6667)\n16.6667 + 3 = 19.6667 (left: 19.6667)\n19.6667 + 0.3333 = 20 (",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 8) * (6 - 4) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 / 5 = 1.2 (left: 1 1.2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - 4) * (8 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - 4) * (8 + 12) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "6 - 4 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24\nAnswer: ((5 * 4) + (6 - 3)) + 1 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 3 = 24 (left: 5 24)\nAnswer: (3 * 7) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 24"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 + 5 = 29 (left: 5 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 19"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "19"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "120"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120) -> 120 / 12 = 10 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 + 5 = 29 (left: 5 29)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4.8 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 / 5 = 4.8 (left: 4.8 5) -> 4.8 / 5 = 0.96 (left: 0.96)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "19 + 2 = 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "19"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19) -> 19 * 2 = 38 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "19 + 2 = 21"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "15"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 24"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 19"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 19."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "19"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "19 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 19 5) -> 19 + 5 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 24 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "29"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29) -> 29 / 2 = 14.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 / 5 = 4.8 (left: 4.8 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "19 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 19 5) -> 19 * 5 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "19"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19) -> There are no possible next steps for the input 19.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 19"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 5 19) -> 19 - 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "19"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "120"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120) -> There are no possible next steps with the input 120.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 - 5 = 19 (left: 19 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4.8 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 24 5) -> 24 / 5 = 4.8 (left: 4.8 5) -> 4.8 * 5 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 24"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 24"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "29"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 50)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 50) -> 1 * 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1 50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 40"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 40 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10 10 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 0 - 40 = -40 (left: -40)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 5 50"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 + 5 = 15 (left: 5 10 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 10 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 10 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 10 "
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 40 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 50"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 10 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 10 50) -> 10 * 1 = 10 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 10 "
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 5 + 25",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.25 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 - 1.25 = 8.75 (left: 8.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 50) -> 50 - 1 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "2 10 "
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 40"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 + 40 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "12.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 40 - 0 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0 40"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 10 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 10 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 10 / 0 is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 40"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 40 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.25 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 50 - 10 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 10 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 / 10 = 5 (left: 0 5 50)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 10 "
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 2 * 10 = 20 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.25 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 9 - 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 10 15"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 + 5 = 15 (left: 5 10 15) -> 15 - 5 = 10 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 10 50"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 10 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 50"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 / 10 = 1 (left: 1 50) -> 1 * 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "0 10 50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 40"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 + 40 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 - 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 40"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 10 50) -> 10 - 10 = 0 (left: 0 10 50) -> 50 - 10 = 40 (left: 0 40) -> 0 / 40 = 0 (left: 0 40) -> 40 - 0 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "5 10 15"
                }
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> No possible next steps, the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 13 + 12 = 25 (left: 6 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> It seems like you did not provide an input for the possible next steps. Could you please provide the numbers you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 / 36 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 13 - 6 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "None, as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> 18 - 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 - 36 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36 * 2 = 72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 12"
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left: 6 12) -> Input: 18 72 2 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 + 36 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "48"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 13 - 6 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 / 36 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> 18 + 8 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> It appears that you have not provided an input for the possible next steps. Could you please provide the numbers for which you would like to see the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 - 36 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 13 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) -> 18 + 8 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 13 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 8": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> 12 - 6 = 6 (left:  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps for the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number (56"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with just one number (56). -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 8 / 2 = 4 (left: 4 66)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "66 / 2 = 33 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 / 2 = 33 (left: -> 66 / 2 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 56."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "56 + 2 = 58"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 - 2 = 54 (left: 54 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "28 58"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 / 2 = 28 (left: 28 58) -> 28 + 58 = 86 (left: 86)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "56 + 2 = 58"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 - 2 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with just one number (56).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 - 2 = 64 (left: 8 64)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 66"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 8 / 2 = 4 (left: 4 66) -> 4 + 66 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "56"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "28 58"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 / 2 = 28 (left: 28 58) -> 28 - 58 = -30 (left: -30) ",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 56."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "56 + 2 = 58"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 - 8 = 58 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "16 66"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 2 * 8 = 16 (left: 16 66) -> 16 - 66 = -50 (left: -50)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 66"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "56 + 2 = 58"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 / 2 = 28 (left: 28 58)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the input of 56."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> 56 / 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number (56"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with just one number (56). -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 8 * 2 = 16 (left: 16 66)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 66"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 8 * 2 = 16 (left: 16 66) -> 16 + 66 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "56 + 2 = 58"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 + 2 = 58 (left: 58)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "16 66"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 66"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 2 * 8 = 16 (left: 16 66) -> 66 - 16 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps with the input 56."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 - 2 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 8 * 2 = 16 (left: 16 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "66 / 2 = 33 (left:"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 / 2 = 33 (left: -> 66 - 2 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "56 + 2 = 58"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "54 58"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 56 - 2 = 54 (left: 54 58) -> 54 / 58 = 0.9310344827586207 (left: 0.9310344827586207)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "16 66"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 - 2 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 2 * 8 = 16 (left: 16 66)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "16 66"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 2 * 8 = 16 (left: 16 66) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 56."
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps for the input 56. -> There are no possible next steps for the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 66"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 / 2 = 33 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 64"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 + 2 = 58 -> 58 + 8 = 66 (left: 2 8 66) -> 66 - 2 = 64 (left: 8 64) -> 64 - 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 56."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "56"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 / 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "56"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input 56."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no more possible steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with only one number. -> Input is invalid. Please provide at least two numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the number 36."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> There are no possible next steps with the number 36.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 12 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no more possible steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "11 13 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": ""
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36 + 8 = 44"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 8 = 44 -> 36 / 8 = 4 (left: 4 8 44)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no more possible steps as there is only one number left."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 * 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the number 36."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> There are no possible next steps with the number 36.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> Input: 5 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 * 12 = 24"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with only one number. -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "Input: 5 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the input 36."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> None",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38 -> 2 - 36 = -34 (left: -34 2 38)",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input of 5.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 8 / 2 = 4 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 8 / 4.5 = 1.77777777778 (left: 1.77777777778)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "4.5 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None. The input only has one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None. The input only has one number."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None. The input only has one number. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3.25 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 2 + 6.5 = 8.5 (left: 8.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 4.5 + 8 = 12.5 (left: 8)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4.5 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 / 2 = 3.25 (left: 3.25 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 4.5 * 8 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "22"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input 22."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input 22. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input 5.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 8 / 2 = 4 (left: 6.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 8 / 4.5 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 5.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> None",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with just the number 5.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 2 + 6.5 = 8.5 (left: 8.5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 8 / 4.5 = 1.7777777777778 (left: 1.7777777777778)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 21"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3.25 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 / 2 = 3.25 (left: 3.25 8) -> 8 / 3.25 = 2.46153846154 (left: 2.46153846154)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 22."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 8 + 1 = 9 (left: 1)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "8 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 4.5 * 8 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3.25 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 0.8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There is only one possible step for the input 5.5:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6.5 8"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4.5 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5 8) -> 6.5 - 2 = 4.5 (left: 4.5 8) -> 8 / 4.5 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 21"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, the input is a single number."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, the input is a single number. -> This input does not provide enough information to determine possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "4.5 8"
                }
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 14"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 - 1.9922480620155039 = 11.007751937984496 (left: 11.007751937984496)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 14 - 6 = 8 (left: 8 14 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 7 + 13 = 20 (left: 20 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 * 2 = 26 (left: 6 26 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 7 * 13 = 91 (left: 91 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 23 - 6 = 17 (left: 6 17 23)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 6 * 14 = 84 (left: 84 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 1.9922480620155039 + 13 = 14.9922480620155039 (left: 14.9922480620155039)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 23"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 14 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 14 - 6 = 8 (left: 8 14 25) -> 14 - 8 = 6 (left: 6 14 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 14 - 6 = 8 (left: 8 14 25) -> 14 - 8 = 6 (left: 6 14 25) -> 14 + 25 = 39 (left: 6 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 7 + 13 = 20 (left: 20 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54 13"
                }
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.99 (left: 1.99 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 1.9922480620155039 * 13 = 25.896234806201555 (left: 25.896234806201555)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.99 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6.515, 13"
                }
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 / 1.9922480620155039 = 6.515  (left: 6.515, 13) -> 6.515 - 13 = -6.485 (left: -6",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6 11"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 14 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 14 - 6 = 8 (left: 8 14 25) -> 25 - 14 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 23 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 + 7 = 20 (left: 20 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 23 / 6 = 3.83333333333 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54 13"
                }
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 1.9922480620155039 * 13 = 25.902224806201553 (left: 25.902224806201553)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 13 23"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6.515, 13"
                }
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 / 1.9922480620155039 = 6.515  (left: 6.515, 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 23)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 26 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 * 2 = 26 (left: 6 26 23) -> 23 - 6 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 23 / 6 = 3.83 (left: 3.83 13)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54 13"
                }
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 - 6.54 = 6.46 (left: 6.46)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 - 1.9922480620155039 = 11.007751937984496 (left: 11.007751937984496)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.46"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6.515, 13"
                }
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 / 1.9922480620155039 = 6.515  (left: 6.515, 13) -> 13 - 6.515 = 6.485 (left: 6.485 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 13 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54 13"
                }
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.99 (left: 1.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 - 1.9922480620155039 = 11.007751937984496 (left: 11.007751937984496)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 14 25"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6.515, 13"
                }
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 / 1.9922480620155039 = 6.515  (left: 6.515, 13) -> 6.515 + 13 = 19.515 (left: 13 19.515)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 7 * 13 = 91 (left: 91 23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 23 - 6 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.16666666667 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 23) -> 23 / 2.16666666667 = 10.615384615",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 + 6 = 19 (left: 6 19 23)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.9922480620155039 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 13 / 6.54 = 1.9922480620155039 (left: 1.9922480620155039 13) -> 13 / 1.9922480620155039 = 6.515  (left: 6.515, 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6.54 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.16666666667 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 23) -> 2.16666666667 + 23 = 25.16666666667 (left: 25.16666666667)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 13 - 7 = 6 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 + 2) * (8 + 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 + 2) * (8 - 8) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 + 2) * (8 + 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 + 2) * (8 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 + 2) * 8) - 8 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 + 2) * 8) - 8 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 + 2) * 8) - 8 = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 + 3.5 = 16.5 (left: 12 16.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 13 / 8.5 = 1.5294117647058822 (left: 1.5294117647058822)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 22.5."
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5) -> There are no possible next steps with the input 22.5. -> There are no possible next steps with the input 22.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "61.75 * 2 = 123.5"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5) -> 123.5 / 2 = 61.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "119.5 * 2 = 239"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 239) -> 119.5 / 2 = 59.75 (left: 59.75 * 2 = 119.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 - 2 = 123.5 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 243 / 2 = 121.5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 13 / 8.5 \u2248 1.5294 (left: 1.5294)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "22.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5) -> There are no possible next steps for the input 22.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "61.75 * 2 = 123.5"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5) -> 2 + 61.75 = 63.75 (left: 63.75 * 2 = 127.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 239)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "119.5 * 2 = 243"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 - 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 - 2 = 123.5 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 * 3 = 364.5 (left: 364.5)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "121.5 2 239"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 - 8 = 115.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.5294117647058822 / 2 = 0.7647058823529411"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 13 / 8.5 = 1.5294117647058822 (left: 1.5294117647058822) -> 1.5294117647058822 / 2 = 0.7647058823529411 -> 1.5294117647058822 + 2 = 3.529411764705882",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "61.75 * 2 = 123.5"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5) -> 2 + 61.75 = 63.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 2 + 121.5 = 123.5 (left: 123.5 243)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "119.5 * 2 = 239"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 239) -> 119.5 / 2 = 59.75 (left: 59.75 * 2 = 119.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 + 2 = 121.5 (left: 121.5 * 2 = 243) -> 243 - 2 = 241 (left: 121.5 241)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 - 2 = 121.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "125.5 * 2 = 247"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 / 2 = 62.75 (left: 62.75 * 2 = 125.5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 - 2 = 123.5 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 + 2 = 121.5 (left: 121.5 * 2 = 243) -> 243 / 2 = 121.5 (left: 121.5 2 243)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5) -> There are no possible next steps with the input 22.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 22.5."
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 + 13 = 22.5 (left: 22.5) -> There are no possible next steps for the input 22.5. -> None",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "9 / 12 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "61.75 * 2 = 123.5"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5) -> 61.75 / 2 = 30.875",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "125.5 * 2 = 247"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 - 2 = 123.5 (left: 123.5 * 2 = 247)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "119.5 * 2 = 243"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 + 2 = 121.5 (left: 121.5 * 2 = 243)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 + 2 = 121.5 (left: 121.5 * 2 = 243) -> ",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "121.5 * 2 = 243"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 + 13 = 21.5 (left: 21.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 2 247)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 239)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "119.5 * 2 = 243"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 243 - 2 = 241 (left: 119.5 * 2 = 243, 241)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 243) -> 119.5 + 2 = 121.5 (left: 121.5 * 2 = 243) -> 243 - 2 = 241 (left: 121.5 241)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 108 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.5 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 / 13 = 0.653846 (left: 0.653846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5294117647058822"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 13 / 8.5 = 1.5294117647058822 (left: 1.5294117647058822) -> 1.5294117647058822 / 2 = 0.7647058823529411",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "123.5 * 2 = 247"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 2 247)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "61.75 * 2 = 123.5"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 123.5 / 2 = 61.75 (left: 61.75 * 2 = 123.5) -> 61.75 + 2 = 63.75 (left: 63.75 * 2 = 127.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 + 2 = 123.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "119.5 * 2 = 239"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 121.5 - 2 = 119.5 (left: 119.5 * 2 = 239) -> 119.5 + 2 = 121.5 (left: 121.5 2 239)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "121.5 * 2 = 243"
                }
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 13 -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 * 2 = 247 -> 2 * 123.5 = 247 (left: 123.5 * 2 = 247) -> 123.5 + 2 = 125.5 (left: 125.5 * 2 = 247) -> 125.5 - 2 = 123.5 (left: 123.5 * 2 = 247) -> 123.5 - 2 = 121.5 (left: 121.5 * 2 = 243) -> 243 / 3 = 81 (left: 81 243)",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "76"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 - 0 = 12 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no valid operations that can be performed on the number 76 using the same format as the previous examples."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "76"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There are no valid operations that can be performed on the number 76 using the same format as the previous examples.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 7 - 5 = 2 (left: ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 52."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> There are no possible next steps with just the number 52.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "76"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> 76 * 2 = 152 (left: 152)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "76"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 - 0 = 12 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no valid operations that can be performed on the number 76 using the same format as the previous examples."
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76) -> There are no valid operations that can be performed on the number 76 using the same format as the previous examples. -> There are no valid operations that can be performed on the number 76 using the same format as the previous examples.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 - 0 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "0 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> There are no possible next steps with the input 52.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 - 0 = 12 (left: 0 12) -> 12 * 12 = 144 (left",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24 - 8 = 16 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: -> 24 / 8 = 3 (left: 3 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 10 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 15 - 10 = 5 (left: 5 10  -> 5 - 10 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24 - 8 = 16 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: -> 24 * 8 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 10 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-5 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input is already in its final form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24 - 8 = 16 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: -> 24 * 8 = 192 (left: 8",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "Input: 5 10 15"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 15 - 10 = 5 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.72727272727 (left: 0.72727272727)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24 - 8 = 16 (left:"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: -> 24 * 8 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 / 22 = 0.2 (left: 0.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "10.8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> None. The input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 - 2 = 18 (left: 18 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 - 4 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 4 + 20 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "15 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 * 4.4 = 96.8 (left: 4.4 96.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2 ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 26.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> There are no possible next steps for the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 2 * 24 = 48 (left: 22 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 2 = 22 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "40 24"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 * 2 = 40 (left: 40 24) -> 40 / 24 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4.4 96.8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 * 22 = 96.8 (left: 22 96.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 22 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 2 4 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "20 2 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 + 10 = 10.8 (left: 10.8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 2 + 24 = 26 (left: 20 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "-17.6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "20 2 24"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 24 * 2 = 48 (left: 22 48)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 - 22 = -17.6 (left: -17.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.2 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 * 2 = 40 (left: 40 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "22"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 2 24"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 * 2 = 40 (left: 40 2 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 20"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Input: 3 6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 22 32)",
                "Pruning": null
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.75"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with the input of 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) + (13 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "-7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 - 11 = -7 (left: -7) -> 7 + 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -7."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 - 11 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 / 11 = 1.18 (left: 1.18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) + (11 + 1) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "-7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 - 11 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations. -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 / 3 = 2.33333 (left: 2.33333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "-7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 - 11 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 * 11 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) - 1 + 11 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 2.75."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with the input 2.75. -> There are no valid integers to perform arithmetic operations with 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.75"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations. -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 - 11 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.75"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with the input 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations. -> There are no possible next steps with just 2.75 as input since there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) + (1 - 11) = 24"
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 * 48 = 5760 (left: 5760)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.1875"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875) -> 0.1875 * 2 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "120 48"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 20 / 6 = 3.33 (left: 3.33 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "120 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 + 48 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 - 20 = 28 (left: 6 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 * 48 = 5760 (left: 5760)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "26 48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3 -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3 -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "120 48"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48) -> 48 - 40 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 + 48 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 * 1.33 = 11.97 (left: 11.97)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 43"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 5 = 43 (left: 9 43) -> 9 - 43 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3 -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11.97"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "120 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 48",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 + 20 = 26 (left: 26 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 + 48 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "26 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 20 * 6 = 120 (left: 48 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 5 = 43 (left: 9 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "-39"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 - 48 = -39 (left: -39) -> -39 + 2 = -37 (left: -37)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "9 48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "8 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 + 48 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6 20 48"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3 -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6 20 48"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 20 * 2 = 40 (left: 6 40 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 - 48 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "26 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 - 48 = -39 (left: -39)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.1875"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 / 48 = 0.1875 (left: 0.1875) -> 0.1875 / 2 = 0.09375 (left: 0.09375)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "26 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 3 -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "26 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "8 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 20 48"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 20 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 48"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 - 48 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8 20 48"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "57"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57) -> 57 - 7 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "14 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "120 48"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 6 * 20 = 120 (left: 120 48) -> 120 - 48 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "9 43"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 6 20 48) -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 11"
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 * 6 = 78 (left: 78 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.6666666666666667 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 - 8.666666666666666 = -1.666666666666666 (left: -1.666666666666666 8.666666666666666)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-7.999999999999998 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 - 15.666666666666666 = -7.999999999999998 (left: -7.999999999999998 15.666666666666666) -> -7.999999999999998 - 15.666666666666666 = -23.666666666666664 (left: -23.666666666666664)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.666666666666666 15.666666666666666"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 * 15.666666666666666 = 135.777777777777",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5531914893617021 27.780141843971633"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.553191489361702",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8.666666666666666 * 15.666666666666666 = 135.777777777777"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.01985981308411215 27.780141843971633"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.5531914893617021 / 27.780141843971633 = 0.01985981308411215 (left: 0.01985981308411215 27.780141843971633) -> 27.780141843971633 - 0.01985981308411215 = 27.76028103088752 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.6666666666666667 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 7 - 1.6666666666666667 = 5.3333333333333333 (left: 5.333333333333333",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 + 15.666666666666666 = 24.333333333333332 (left: 24.333333333333332)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "19.833333333333332 / 2.1666666666666665 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.5531914893617021 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 0.5531914893617021 + 15.666666666666666 = 16.219858156028368 (left: 15.666666666666666 16.219858156028368)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.5531914893617021 28.333333333333336"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5531914893617021 27.780141843971633"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 27.780141843971633 / 0.5531914893617021 = 50.33333333333333 (left: 50.33333333333333)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "19.833333333333332"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.01985981308411215 27.780141843971633"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.5531914893617021 / 27.780141843971633 = 0.01985981308411215 (left: 0.01985981308411215 27.780141843971633) -> 27.780141843971633 - 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.6666666666666667 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 * 2 = 17.333333333333332 (left: 15.666666666666666 17.333333333333332)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-7.999999999999998 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 - 15.666666666666666 = -7.999999999999998 (left: -7.999999999999998 15.666666666666666) -> -7.999999999999998 / 15.666666666666666 = -0.5102040816326531 (left: -0.5102040816326531)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "19 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 12 70)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5531914893617021 27.780141843971633"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 27.780141843971633 - 0.5531914893617021 = 27.22695035460993 (left: 27.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7 8.666666666666666"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 15.666666666666666)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.666666666666666 15.666666666666666"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 6 * 20 = 120 (left: 20 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.1666666666666665 22"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 22 - 2.1666666666666665 = 19.833333333333332 (left: 19.833333333333332)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 - 15.666666666666666 = -7.999999999999998 (left: -7.999999999999998 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.5531914893617021 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 0.5531914893617021 * 15.666666666666666 = 8.666666666666666 (left: 8.666666666666666 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.5531914893617021 28.333333333333336"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 0.5531914893617021 * 28.333333333333336 = 15.686274509803923 (left: 15.686274509803923)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "19.833333333333332"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 70"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 12 70) -> 70 - 12 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 / 8.666666",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.1666666666666665 22"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 2.1666666666666665 * 22 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 - 8.666666666666666 = -1.666666666666666 (left: -1.666666666666666",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 120 13"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 15.666666666666666 / 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.5531914893617021 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.5531914893617021 28.333333333333336"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 0.5531914893617021 - 28.333333333333336 = -27.780141843",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5531914893617021 27.780141843971633"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.5531914893617021 / 27.780141843971633 = 0.01985981308411215 (left: 0.01985981308411215 27.780141843971633)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.01985981308411215 27.780141843971633"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.5531914893617021 / 27.780141843971633 = 0.01985981308411215 (left: 0.01985981308411215 27.780141843971633) -> 27.780141843971633 / 0.01985981308411215 = 1397.9999999999998 (left: 1397.9999999999998)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8.666666666666666 * 15.666666666666666 = 135.777777777777"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.1666666666666665 22"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 22 / 2.1666666666666665 = 10.125 (left: 10.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.1666666666666665 19.833333333333332"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 22 - 2.1666666666666665 = 19.833333333333332 (left: 2.1666666666666665 19.833333333333332) -> 19.833333333333332 / 2.1666666666666665 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5526315789473684 (left: 0.5526315789473684 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.5531914893617021 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 0.5531914893617021 + 15.666666666666666 = 16.219858156028368 (left: 16.219858156028368)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 10 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 + 15.666666666666666 = 24.333333333333332 (left: 15.666666666666666 24.333333333333332)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 70"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 12 70) -> 12 - 70 = -58 (left: -58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 15.666666666666666)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8.666666666666666 * 15.666666666666666 = 135.55555555555554 ("
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.1666666666666665 22"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 22 - 2.1666666666666665 = 19.833333333333332 (left: 2.1666666666666665 19.833333333333332)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.1666666666666665 19.833333333333332"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 22) -> 22 - 2.1666666666666665 = 19.833333333333332 (left: 2.1666666666666665 19.833333333333332) -> 2.1666666666666665 * 19.833333333333332 = 41",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.5531914893617021 15.666666666666666"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8.666666666666666 15.666666666666666"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 * 15.666666666666666 = 135.55555555555554 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5531914893617021 27.780141843971633"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 + 8.666666666666666 = 15.666666666666666 (left: 8.666666666666666 15.666666666666666) -> 8.666666666666666 / 15.666666666666666 = 0.5531914893617021 (left: 0.5531914893617021 15.666666666666666) -> 15.666666666666666 / 0.5531914893617021 = 28.333333333333336 (left: 0.5531914893617021 28.333333333333336) -> 28.333333333333336 - 0.5531914893617021 = 27.780141843971633 (left: 0.5531914893617021 27.780141843971633) -> 0.5531914893617021 * 27.780141843971633 = 15.384615384615385 (left: 15.384615384615385)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "8.666666666666666 15.666666666666666"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 7) -> 1.6666666666666667 + 7 = 8.666666666666666 (left: 7 8.666666666666666) -> 7 * 8.666666666666666 = 60.666666666666664 (",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 + 0.03 = 24.03"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03 -> 24 - 0.03 = 23.97 (left: 23.97)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24.03 - 2 = 22.03"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 * 2 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 / 24.03 = 0.08323"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14.015 2 24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 14.015 * 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 14.015 / 22.03 = 0.636898 (left: 0.636898)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "14.015 22.03"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 / 2 = 6.0075 (left: 6.0075 24.03)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24.03 * 2 = 48.06"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 - 2 = 22.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 - 2 = 10.015 (left: 10.015)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24.03 - 2 = 22.03"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.03 - 2 = 22.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03 -> 24.03 + 2 = 26.03 (left: 2 26.03)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 14.015 - 22.03 = -8.015 (left: -8.015)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12.015 * 2 = 24.03"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 24.03 - 12.015 = 12.015 (left: 12.015 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 2 = 12.015",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24.03 * 2 = 48.06"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 24.03 / 2 = 12.015",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14.015 2 24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 2 * 24.03 = 48.06 (left: 14.015 48.06)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> Input: 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 * 2 = 28.03)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24.03 / 2 = 12.015"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 2 = 12.015 -> 2 / 24.03 = 0.08323",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 * 2 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14.015 2 24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 14.015 * 22.03 = 308.57 (left: 308.57)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24.03 / 2 = 12.015"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 - 2 = 10.015 (left: 10.015 24.03)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 + 0.03 = 24.03"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03 -> 24 / 0.03 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 * 2 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24.03 - 2 = 22.03"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14.015 2 24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 14.015 * 2 = 28.03 (left: 28.03 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 14.015 * 22.03 = 308.50545 (left: 308.50545)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12.015 * 2 = 24.03"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 2 * 12.015 = 24.03",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 + 0.03 = 24.03"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03 -> 24 / 0.03 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "9 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14.015 2 24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 14.015 * 2 = 28.03 (left: 28.03 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 14.015 - 22.03 = -8.015 (left: -8.015)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24.03 * 2 = 48.06"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 * 2 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Input: 100"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24.03 * 2 = 48.06"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 * 2 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "9 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "9 9"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14.015 22.03"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 12.015 + 2 = 14.015 (left: 14.015 2 24.03) -> 24.03 - 2 = 22.03 (left: 14.015 22.03) -> 22.03 / 14.015 = 1.57010390761 (left: 1.57010390761)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12.015 * 2 = 24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06 -> 24.03 / 2 = 12.015 (left: 12.015 * 2 = 24.03) -> 2 + 12.015 = 14.015 (left: 14.015 2 24.03)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 7"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (11 - (1 + 4)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * (1 + 4)) * 11 = 24"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 * 8 = 21.36 (left: 9 21.36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 10.67"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 + 8 = 10.67 (left: 9 10.67) -> 9 + 10.67 = 19.67 (left: 19.67)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20 50"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 20 - 50 = -30 (left: -30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9 21.36"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "20 50"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 50 - 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 * 8 = 21.36 (left: 9 21.36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 10.67"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 + 8 = 10.67 (left: 9 10.67) -> 9 * 10.67 = 96.03 (left: 96.03)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "4 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20 50"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 20 / 50 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2.67 8 11.67"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67 8 11.67"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 2.67 8 11.67) -> 8 / 2.67 = 2.99 (left: 2.99 11.67)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 8 - 2.67 = 5.33 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 10.67"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 + 8 = 10.67 (left: 9 10.67) -> 9 * 10.67 = 96.03 (left: 96.03)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "20 50"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 50 / 20 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 2.67 + 8 = 10.67 (left: 9 10.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 8 11.67"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 2.67 8 11.67) -> 8 - 2.67 \u2248",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "3 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20 50"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 20 + 50 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "20 50"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67 8 11.67"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 2.67 8 11.67) -> 2.67 * 8 = 21.36 (left: 11.67 21.36)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 8 / 2.67 = 2.99 (left: 2.99 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5.33 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 8 - 2.67 = 5.33 (left: 5.33 9) -> 9 / 5.33 = 1.689 (left: 1.689 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20 50"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 50 / 20 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Input: 5 10 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "20 50"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 50 - 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 2.67 8 11.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67 8 11.67"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 2.67 8 11.67) -> 8 / 2.67 = 3 (left: 3 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "20 50"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 20 + 50 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1.689 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 8 - 2.67 = 5.33 (left: 5.33 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5.33 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 8 - 2.67 = 5.33 (left: 5.33 9) -> Input: 20 4 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "20 50"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 5 * 10 = 50 (left: 20 50) -> 50 - 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Input: 20 4 12"
                }
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 3 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 + 50 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 / 5 = 10 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 * 50 = 2250 (left: 2250)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 20"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3) -> -3",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "5 50 50"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 - 50 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "45 50"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "5 * 10 = 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 5 + 10 = 15 (left: 15 = 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 3 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 / 5 = 10 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 * 50 = 2250 (left: 2250)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 5 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 + 50 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "5 * 10 = 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 - 5 = 5 (left: 5 = 50)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 6 - 9 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 5 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 / 50 = 0.9 (left: 0.9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 * 10 = 50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "5 * 10 = 50"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 5 + 10 = 15 (left: 15 = 50)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 * 10 = 50"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "5 50 50"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 50 50"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "45 50"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 5 * 10 = 50 -> 10 * 5 = 50 (left: 5 50 50) -> 50 - 5 = 45 (left: 45 50) -> 45 * 50 = 2250 (left: 2250)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 7 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 * 8 = 384 (left: 384)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "There are no possible next steps for the input 36 as it is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> 36 - 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 36 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "17 19"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 - 2 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 / 8 = 6 (left: 6 * 8 = 48)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "19"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 - 2 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 36 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "None, since there is only one number left."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 - 6 = 0 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 36 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number. -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the number 19."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "19"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 36 as it is a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> None, since there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "19"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 36 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number. -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 - 8 = 40 (left: ",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 36"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 + 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 36 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 * 8 = 384 (left"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 * 8 = 384 (left -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 36 as it is a single number."
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "1.5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input \"1.5\" as it is not a valid operation with the numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 + 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "1.5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 7 / 2 = 3.5 (left: 1 3.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 + 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 5 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-1"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 * "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 * ((6 * 11) - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "7 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 * (6 * (11 - 3)) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 * "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "11 / 4 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 * (6 * (11 - 3)) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 3 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "18 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 5 + 12 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 * "
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18 11"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "18 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 6) * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 * "
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 * (6 * (11 - 3)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 * (6 + (11 - 3)) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 - 8 = 0"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 - 8 = 0 -> There are no possible next steps as the result is already 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16 + 16 = 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22.1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1) -> None. The input \"22.1\" does not have enough numbers to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22.1"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1) -> There are no possible next steps for the input 22.1 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a single number, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> There are no possible next steps as 36 is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 - 13 = -11.3 (left: -11.3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22.1"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1) -> There are no possible next steps for the input 22.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 + 16 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No additional steps can be taken because there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "None - 36 is a single number and cannot be combined with any of the other numbers provided."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided. -> There are no possible next steps as there are no other numbers provided to combine with 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 / 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22.1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 - 16 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "22.1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as the result is already 0."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 - 8 = 0"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 - 8 = 0 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 + 16 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "None - 36 is a single number and cannot be combined with any of the other numbers provided."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided. -> None - 36 is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There is only one possibility with 1 as the input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 + 16 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 - 8 = 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 22.1."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769230",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 - 8 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22.1"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 * 13 = 22.1 (left: 22.1) -> There are no possible next steps for the input 22.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "64 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64 16) -> 64 - 16 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as the result is already 0."
                }
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Addition, subtraction, multiplication, division with at least two numbers."
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> - Multiplication: Multiply two numbers together",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5. Combination: Combine any of the above operations to create new equations."
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 5. Combination: Combine any of the above operations to create new equations. -> 5 + 8 = 13 (left: 2 13 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 42 112"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 42 = 70 (left: 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "40 42 112"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 8 * 5 = 40 (left: 40 42 112) -> 112 - 40 = 72 (left: 40 72)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3. Multiplication: multiply two numbers together"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 14 * 2 = 28 (left: 8 8 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 13 14"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 5. Combination: Combine any of the above operations to create new equations. -> 5 + 8 = 13 (left: 2 13 14) -> 13 / 2 = 6.5 (left: 6.5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 42 104"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 8 = 104 (left: 8 42 104) -> 42 + 8 = ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Addition, subtraction, multiplication, division with at least two numbers."
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 5. Combination: Combine any of the above operations to create new equations.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3. Multiplication: multiply two numbers together"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 42 112"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 8 * 5 = 40 (left: 40 42 112)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "40 42 112"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 8 * 5 = 40 (left: 40 42 112) -> 40 * 42 = 1680 (left: 1680 112)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Addition, subtraction, multiplication, division with at least two numbers."
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5. Combination: Combine any of the above operations to create new equations."
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 5. Combination: Combine any of the above operations to create new equations. -> 4 + 6 = 10 (left: 10 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 42 112"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 8 + 42 = 50 (left: 50 112)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 42 104"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 8 = 104 (left: 8 42 104) -> 42 / 8 = 5.25 (left: 5.25 104)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There is only one possible next step: 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) * 6 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2 6"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 42 112"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 8 = 104 (left: 8 42 104)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 42 104"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 8 = 104 (left: 8 42 104) -> 42 / 8 = 5.25 (left: 5.25 104)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 9 / 3 = 3 (left: 3 9 18",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Input more numbers to continue calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Addition, subtraction, multiplication, division with at least two numbers."
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: Multiply two numbers together.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2 6"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> Input: 3 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 42 104"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 112 - 8 = 104 (left: 8 42 104) -> 8 + 42 = 50 (left: 50 104)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3. Multiplication: multiply two numbers together"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 3 * 8 = 24 (left: 2 8 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 42 112"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 42 / 8 = 5.25 (left: 5.25 8 112)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "40 42 112"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, division with at least two numbers. -> 3. Multiplication: multiply two numbers together -> 8 * 14 = 112 (left: 8 42 112) -> 8 * 5 = 40 (left: 40 42 112) -> 42 / 40 = 1.05 (left: 1.05 42 112)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 23 / 2 = 11.5 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "306"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "72 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 12 + 2 = 14 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 + 2 + 2 + 4 = 9"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 1 + 2 = 3 (left: 3 + 2 + 4 = 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "102"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> There are no possible next steps with the input 102.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 5 / 3 = 1.66667 (left",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 6 = 18 (left: 18 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "72 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "89"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 + 2 + 2 + 4 = 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 + 2 + 4 = 9"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 1 + 2 = 3 (left: 3 + 2 + 4 = 9) -> 2 + 4 = 6 (left: 3 + 6 = 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 23 + 2 = 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "72 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 * 2 * 2 * 4 = 16 (left: 16 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 24"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 (left: 9 24) -> 9 + 24 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "102"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 + 2 + 2 + 4 = 9"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 2 + 4 = 6 (left: 1 + 6 = 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 23 / 2 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 12 70"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "72 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 12 + 2 + 4 = 18 (left: 18 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "89"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "89"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 + 2 + 4 = 9"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 1 + 2 = 3 (left: 3 + 2 + 4 = 9) -> 3 + 2 = 5 (left: 5 + 4 = 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 23 + 8 = 31 (left: 8) ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 12 17"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 12 11"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 12 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 12 * 24 = 288",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 24"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 (left: 9 24) -> 24 / 9 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 + 2 + 4 = 9"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 1 + 2 = 3 (left: 3 + 2 + 4 = 9) -> 2 + 4 = 6 (left: 3 + 6 = 9)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> Input: 22 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> There are no possible next steps for the input 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 - 6 = 64 (left: 12 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "72 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 24"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 12 + 2 = 14 (left: 14 24) -> 24 / 14 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "89"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "89"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "23 + 2 = 25"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "18 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23) -> 23 + 2 = 25 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "306"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 * 12 = 72 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1224"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "89"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 24"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 12 + 2 = 14 (left: 14 24) -> 14 * 24 = 336 (left: 336)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "306"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 + 2 + 2 + 4 = 9"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 * 17 = 1224 (left: 1224) -> 1 + 2 + 2 + 4 = 9 -> 1 + 2 = 3 (left: 3 + 2 + 4 = 9)",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 / 4 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 12 = 44 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 - 56 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "40"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 - 56 = 40 (left: 40) -> 40 + 2 = 42",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "32 / 2 = 16"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> 32 / 2 = 16 -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 4 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 - 56 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "40"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 - 56 = 40 (left: 40) -> There are no possible next steps with just the number 40.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> 32 + 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8) -> 3 * 9 = 27 (left: 27",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 56"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 * 56 = 5376 (left: 5376)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.71428571429"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 / 56 = 1.71428571429 (left: 1.71428571429) -> 1.71428571429 / 2 = 0.85714285714",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 12 / 8 = 1.5 (left: 1.5 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 / 56 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "40"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 - 56 = 40 (left: 40) -> There are no possible next steps for the number 40 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided. -> No further steps can be taken as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> Input",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 56"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 + 12 = 20 (left: 20 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 8 / 1 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.71428571429"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 / 56 = 1.71428571429 (left: 1.71428571429) -> 1.71428571429 * 1.71428571429 = 2.93877551021 (left: 1.71428571429 2.93877551021)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> 32 / 2 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 + 2 = 34"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> 32 + 2 = 34 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 56"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 + 56 = 152 (left: 152)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5376"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 * 56 = 5376 (left: 5376) -> 5 * 3 = 15 (left: 15 7 6)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 12 = 44 (left: 8 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 + 12 = 20 (left: 20 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "96 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 / 56 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "152"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 * 12 = 96 (left: 96 56) -> 96 + 56 = 152 (left: 152) -> 152 / 1 = 152 (left: 152)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 4"
                }
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24 + 24 = 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 + 8 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.33 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 4 2"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 6 * 2 = 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 3 * 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 + 3 = 11 (left:"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 5"
                }
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 11"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 11 * 15 = 165 (left: 165",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no more possible next steps with the given input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> 14 / 2 = 7 -> 14 - 7 = 7 (left: 7 7)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 70"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 70"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 * 70 = 770 (left: 770)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> 18 / 2 = 9 -> 18 - 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 70"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 / 11 = 6.36 (left: 6.36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> 18 / 2 = 9 -> 2 * 9 = 18 (left: 18 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> 18 / 2 = 9 -> 18 - 9 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "165"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "165"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 15 * 11 = 165 (left: 165) -> 1 + 6 + 5 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no more possible next steps with the given input of 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 9"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "11 70"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 11"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 15 * 11 = 165 (left: 165)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "770"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 * 70 = 770 (left: 770) -> 7 - 7 + 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no more possible next steps with the given input of 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no more possible next steps with the given input of 18. -> There are no more possible next steps with the given input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "165"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 15 * 11 = 165 (left: 165) -> 6 * 5 = 30 (left: 1 30)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.66666666667 (left: 3.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps with the input of 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 / 3 = 4.666666666666667 (left: 4.666666666666667)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 - 12 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 * 4 * 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0.846"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 0.846."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.846"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 * 4 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 9 - 5 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is not a composite number and cannot be further broken down using the operations of addition, subtraction, multiplication, and division with the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps with just the number 16 given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8 143)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-8"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 - 12 = -8 (left: -8) -> -8 + 2 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 4 3"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3 - 1 = 2 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-8"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 - 12 = -8 (left: -8) -> There is no possible next step with -8 as the input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 * 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 36 as it is not a composite number and cannot be further broken down using the operations of addition, subtraction, multiplication, and division with the numbers provided."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is not a composite number and cannot be further broken down using the operations of addition, subtraction, multiplication, and division with the numbers provided. -> There are no possible next steps for the number 36 as it is not a composite number and cannot be further broken down using the operations of addition, subtraction, multiplication, and division with the numbers provided.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 10 - 5 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 * 2 = 8.5 (left: 8.5 17)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4.25 21.25"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 + 17 = 21.25 (left: 4.25 21.25) -> 21.25 / 4.25 = 5 (left: 5 21.25)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 8"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 * 8 = -40 (left: -40)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 17 - 4.25 = 12.75 (left: 12.75)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4.25 21.25"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 + 17 = 21.25 (left: 4.25 21.25) -> 4.25 + 21.25 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "4.25 / 17 = 0"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 10 * 3 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 10 * 3 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "0.8 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "30 + 2 = 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 + 17 = 21.25 (left: 4.25 21.25)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 * 2 = 8.5 (left: 8.5 17) -> 17 / 8.5 = 2 (left: 2 17)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 * 4 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4.25 21.25"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 + 17 = 21.25 (left: 4.25 21.25) -> 21.25 / 5 = 4.25 (left: 4.25 4.25)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 10 * 3 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> Input: 10 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 * 2 = 8.5 (left: 8.5 17) -> 8.5 + 17 = 25.5 (left: 17 25.5)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3) -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 17 / 4.25 = 4 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4.25 21.25"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 + 17 = 21.25 (left: 4.25 21.25) -> 21.25 - 4.25 = 17 (left: 17 21.25)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 17"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 + 17 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.25 17"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 / 17 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25 17) -> 4.25 * 2 = 8.5 (left: 8.5 17) -> Input: 3 5 9",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18."
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "880"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880) -> 880 (no possible next steps)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 8"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "2 20"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 / 4 = 2 (left: 2 20) -> 2 * 20 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 12 = 92 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 - 8 = "
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4 8"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 8 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "880"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880) -> 88 + 0 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1040"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040) -> 10 * 40 = 400 (left: 400)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1040"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 + 20 = 28 (left: 4 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 8 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 20 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1040"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1040"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040) -> 40 / 10 = 4 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "12 - 8 = 4"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 8 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5 20"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 4 = 5 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 28"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "80 960"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "880"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880) -> 88 + 0 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1040"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1040"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040) -> 10 * 40 = 400",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 - 4 = 4 (left: 4 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 8 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 28"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "80 + 12 = 92 (left:"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 12 = 92 (left: -> 80 - 12 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "12 - 8 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "2 20"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 / 4 = 2 (left: 2 20) -> 2 + 20 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6.666666666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "6.666666666666667"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 - 80 = 880 (left: 880)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 - 8 = "
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20 4"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 8 / 4 = 2 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 8 20 4) -> 20 / 8 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "880 (no possible next steps"
                }
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 * 8 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "24 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.33"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> Possible next steps: -> No valid input provided. Please enter a set of numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9 - 5 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 / 8 = -0.125 (left: -0.125)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.33"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not an expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.33"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 * 8 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 9 - 5 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1.33"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 9 - 5 = 4 -> 9 * 5 = 45 (left: 45 = 4)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> 8 / (-1) = -8 (left: -8)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9 - 5 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number input.",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (4 + 4) * 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (7 - 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 3 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 / 2 = 9 (left: 9 2 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 - 1 = 5 ("
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 + 13 = 23 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.43 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36 - 2 = 34"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "36 + 2 = 38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 + 13 = 23 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.43 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 + 12 = 13.43 (left: 13.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 / 2 = 9 (left: 9 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 + 13 = 23 (left: 7 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.43 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 + 12 = 13.43 (left: 13.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "36 - 2 = 34"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5 + 5 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 2 = 20 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "18 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> Input: 8 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 - 1 = 5 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 + 10 = 17 (left: 10 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 / 2 = 9 (left: 9 2 20)",
                "Pruning": null
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 - 13 = -11.75 (left: -11.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14.25"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to take with just one number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11.75"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number. -> No possible next steps. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the current numbers given."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers given. -> There are no possible next steps with the current numbers given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14.25"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps for the input \"14.25\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14.25"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps for the input 14.25 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14.25"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 / 1.25 = 10.4 (left: 10.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14.25"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input of 14.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 14.25 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input of 14.25 as it is already a single number. -> There are no possible next steps with the input of 14.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number. -> No possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There is only one number given, so there are no possible next steps to take with just one number. -> No possible next steps. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the current numbers given."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers given. -> There are no possible next steps with the current numbers given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 + 9 = 21 (left: 10 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 * 13 = 16.25 (left: 16.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10.4"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 / 1.25 = 10.4 (left: 10.4) -> There are no possible next steps for the input 10.4 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps for the input 10.4 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 / 1.25 = 10.4 (left: 10.4) -> There are no possible next steps for the input 10.4 as it is already a single number. -> There are no possible next steps for the input 10.4 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the current numbers given."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the current numbers given. -> There are no possible next steps with the current numbers given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.25 13"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14.25"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps for the input 14.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 14.25 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input of 14.25 as it is already a single number. -> There are no possible next steps with the input of 14.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number. -> There are no possible next steps with the input \"14.25\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> Possible next steps: None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "Possible next steps: None"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> Possible next steps: None -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input \"14.25\" as it is already a single number."
                }
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.909 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909 11) -> ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 * 8 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There is only one number given (1.25"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number given (1.25), so there are no possible next steps to take. -> 1.25 + 1 = 2.25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 3 * 4 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 / 8 = -0.375 (left: -0.375)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 / 8 = 0.15625 (left: 8)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> 1.25 / 1 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1.25 + 2 = 3.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 * 8 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "13 * 2 = 26"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 -> 13 + 2 = 15 (left: 15 26)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 * 8 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.33"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for 1.33."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for 1.33. -> 1.33 / 2 = 0.665",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.25"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number, so there are no possible next steps with only one input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> 8 - (-3) = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "12 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8) -> 12 + 8 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> Input: 1.25 has possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.25"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number provided, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 * 8 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number given (1.25), so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> 1.25 * 2 = 2.5",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.333 (left: 1.333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.909 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909 11) -> 0.909 + 11 = 11.909 (left: 11.909)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-3 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3 8) -> -3 + 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input 1.25."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25. -> 1.25 + 1 = 2.25 (left: 1.25 2.25)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 * 14 = 24.5 (left: 24.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 7 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> There is no input provided. Please provide a set of numbers for possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide a set of numbers to continue with the calculations. -> - Add two numbers together",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 - 14 = -12.25 (left: -12.25)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1.4 7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide a set of numbers to continue with the calculations. -> - Multiplication",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 8 * 11 = 88 (left: 88 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 - 14 = -12.25 (left: -12.25)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide the input numbers for me to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There is no input provided. Please provide a set of numbers for possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> There is no input provided. Please provide a set of numbers for possible next steps. -> No input provided. Please provide a set of numbers for possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> Input: 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 / 14 = 0.125 (left: 0.125)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There is no input provided. Please provide a set of numbers for possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> There is no input provided. Please provide a set of numbers for possible next steps. -> No input provided. Please provide a set of numbers for possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 14 / 1.75 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 7 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> There is no number given in the input, please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "It seems like the input is missing, please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> It seems like the input is missing, please provide the numbers to continue finding possible next steps. -> It seems like the input is missing, please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 * 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 7 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 / 14 = 0.125 (left: 0.125)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> It seems like the input is missing, please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There is no number given in the input, please provide a set of numbers to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> There is no number given in the input, please provide a set of numbers to generate possible next steps. -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 / 7 = 0.71 (left: 0.71 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.75 14"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 2 + 9 = 11 (left: 8 11 14) -> 14 / 8 = 1.75 (left: 1.75 14) -> 1.75 + 14 = 15.75 (left: 15.75)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> It seems like there is an error in the input provided. Please provide a valid set of numbers for the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: -> Please provide a set of numbers to continue with the calculations. -> It seems like you have provided the input \"Please provide a set of numbers to continue with the calculations.\" Would you like to input a new set of numbers for further calculations?",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Input: 5 5"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 - 5 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "17"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps for the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 22"
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 * 2 = 70 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one number provided (11.8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Input: 5 5"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 + 9 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> There are no possible next steps for the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 22"
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 / 8 = 4.375 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 6.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 13 - 1.2 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.8"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 13 - 1.2 = 11.8 (left: 11.8) -> 11 + 8 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3.25"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 * 2 = 6.5 (left: 2 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 9."
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> There are no possible next steps for the input 9. -> There are no possible next steps for the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 / 35 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 * 9 = 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "3.25"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 / 2 = 1.625",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 17."
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps for the number 17. -> None, as 17 is a prime number and cannot be divided evenly by any other number except 1 and itself.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 - 2 = 33",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 13 - 1.2 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 - 5 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "17"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 22"
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 - 2 = 33 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 * 9 = 27"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.8"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 13 - 1.2 = 11.8 (left: 11.8) -> There is only one number provided (11.8), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "52"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> 52 - 5 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 22"
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "35"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 / 2 = 17.5 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 9."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 13 / 1.2 = 10.83 (left: 10.83)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 22"
                }
            },
            "Step 7": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 + 13 = 22 (left: 13 22) -> 13 * 22 = 286 (left: 286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input 9."
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> There are no possible next steps for the input 9. -> There are no possible next steps for the input 9. -> There are no possible next steps for the input 9.",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There is no input provided. Please provide the input sequence to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There is no input provided. Please provide the input sequence to generate possible next steps. -> No input provided. Please provide the input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "- 8 - 2 = 6"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 -6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There is no input provided. Please provide the input sequence to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "No possible next steps as there are no numbers provided in the input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "- 8 - 2 = 6"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "4 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "Apologies for the confusion. Please provide the correct input for me to generate the possible next steps."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Apologies for the confusion. Please provide the correct input for me to generate the possible next steps. -> I'm sorry, but without a specific input of numbers, I am unable to generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps. -> Please provide the numbers for me to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- 8 - 2 = 6"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "Please provide the numbers for me to continue finding possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "- 8 - 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No input provided. Please provide the input sequence to generate possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There is no input provided. Please provide the input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There is no input provided. Please provide the input sequence to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There is no input provided. Please provide the input sequence to generate possible next steps. -> No input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> Please provide the numbers for the calculation in order to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps. -> It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "No possible next steps as there are no numbers provided in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "Apologies for the confusion. Please provide the correct input for me to generate the possible next steps."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Apologies for the confusion. Please provide the correct input for me to generate the possible next steps. -> I'm sorry for the confusion earlier. Can you please provide me with a new set of numbers so I can generate the possible next steps for you? Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "- 8 - 2 = 6"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There doesn't seem to be any input provided. Can you please provide the numbers for the next steps?"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "Apologies for the confusion. Please provide the correct input for me to generate the possible next steps."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Apologies for the confusion. Please provide the correct input for me to generate the possible next steps. -> I'm sorry, I cannot generate possible next steps without a valid input. Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There doesn't seem to be any input provided. Can you please provide the numbers for the next steps?"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "I'm sorry, but without a specific input of numbers, I am unable to generate possible next steps. Please provide the numbers you would like me to work with."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (left: 0.8 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps?"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Apologies for the confusion. Please provide the correct input for me to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Please provide the numbers for the calculation in order to generate possible next steps."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> Please provide the numbers for the calculation in order to generate possible next steps. -> - Addition: Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 6"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -2 - -8 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Apologies for the confusion. Please provide the correct input for me to generate the possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> There seems to be an error in the input provided. Please provide the correct input for me to generate the possible next steps. -> It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps. -> It seems that there is no valid input provided. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Without input, I cannot provide the possible next steps. Please provide the numbers for the calculation. -> - 8 - 2 = 6 -> -8 / -2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "- 8 - 2 = 6"
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 / 8 = 0.5 (left: 4 0.5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 4) -> 16 + 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 32 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 28 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 4 * 28 = 112 (left: 4 112 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 4 * 12 = 48 (left: 48 4) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 8 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 32"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32) -> 4 + 32 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 4 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "28 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 28 4) -> 28 - 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 4 = 1 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 12 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 12 - 4 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 4 * 12 = 48 (left: 48 4) -> 48 + 4 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "4 32 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 32"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32) -> 32 / 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16 4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 8 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 - 32 = -28 (left: -28 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 28 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 4 + 28 = 32 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 112 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 4 * 28 = 112 (left: 4 112 4) -> 4 * 112 = 448 (left: 4 448 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 16 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 4) -> 16 + 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 28 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 32 = 0.125 (left: 0.125 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 12 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 4 * 12 = 48 (left: 48 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 112 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 4 * 28 = 112 (left: 4 112 4) -> 4 + 112 = 116 (left: 4 116 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 32"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32) -> 32 - 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 - 2 = 22 (left: 12 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 4 = 1 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 112 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 4 * 28 = 112 (left: 4 112 4) -> 4 * 4 = 16 (left: 16 112)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 4) -> 16 / 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "16 96"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "28 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 28 4) -> 28 - 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2 12 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 4 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 4 * 12 = 48 (left: 48 4) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 32"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32) -> 32 / 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 / 32 = 0.125 (left: 0.125 32 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 28 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 - 4 = 28 (left: 4 28 4) -> 28 / 4 = 7 (left: 4 7 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 4 * 12 = 48 (left: 48 4) -> 48 - 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "48 4"
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> -2 - 8 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 + 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps with the input of -2 as the current numbers are all positive integers."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps with the input of -2 as the current numbers are all positive integers. -> There are no possible next steps with the input of -2 as the current numbers are all positive integers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 * 2 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-2"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps as there is only one input value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 0.8 as it is a single number and not an equation."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "16 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 / 2 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps with the input of -2 as the current numbers are all positive integers."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps with the input of -2 as the current numbers are all positive integers. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 + 2 = 18"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18 -> 16 + 2 = 18 (left: 16 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 6 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 0.8 as it is a single number and not an equation."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there is only one input value."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps as there is only one input value. -> There are no possible next steps as there is only one input value.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 8 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps with the input of -2 as the current numbers are all positive integers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "There are no possible next steps with the input of -2 as the current numbers are all positive integers."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 6 + 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> There are no possible next steps with the input of -2 as the current numbers are all positive integers. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 + 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "12 * 1 = 12 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "13 60"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 * "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "12 * 1 = 12 (left:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((1 + 5) / 12) * 12 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 * "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * 12 / 12 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)  ",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 * "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "12 * 1 = 12 (left:"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 1 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 11"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 7 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "Input: 3 9 5 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "Input: 3 9 5 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 * 1 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 / 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((1 + 5) / 12) * 12 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "12 * 1 = 12 (left:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 - 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 8 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 + 8 = 6.8 (left: 6.8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "14.8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 3 * 5 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to calculate."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps as there are no additional numbers provided for calculations."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are no additional numbers provided for calculations. -> There are no possible next steps as there are no additional numbers provided for calculations. -> None",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps as there are no additional numbers provided for calculations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 - 8 = -9.2 (left: -9.2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.17647058824 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 2 = 4 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 - 2 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "32"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are no additional numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "32"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> - 32 - 2 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps as there are not enough numbers provided."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 * 8 = -9.6 (left: -9.6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.2 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 / 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.17"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 / 6 = 1.83 (left: 1.83 8) -> 8 - 1.83 = 6.17 (left: 6.17) -> 6.17 * 2 = 12.34 (left: 12.34)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "32"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> 32 - 8 = 24 (left: 8)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.83 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 / 6 = 1.83 (left: 1.83 8) -> 8 - 1.83 = 6.17 (left: 6.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> 8 - (-1.2) = 9.2 (left: 9.2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 - 2 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 / 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps as there are not enough numbers provided."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are not enough numbers provided. -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 8 = 38 (left: 6 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 * 8 = -9.6 (left: -9.6)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6 22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.17647058824 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.17647058824 (left: 1.17647058824 8) -> 1.17647058824 + 8 = 9.17647058824 (left: 9.17647058824)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.17647058824 8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 4"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 2 = 4 (left: 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "32"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there are no additional numbers provided for calculations."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are no additional numbers provided for calculations. -> There are no possible next steps as there are no additional numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- 32 - 2 = 30"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> - 32 - 2 = 30 -> -32 + -2 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 / 6 = 1.83 (left: 1.83 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.17647058824 (left: 1.17647058824 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 + 8 = 6.8 (left: 6.8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 2"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 + 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 / 2 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to calculate."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.83 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 / 6 = 1.83 (left: 1.83 8) -> 8 - 1.83 = 6.17 (left: 6.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-1.2 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2 8) -> -1.2 + 8 = 6.8 (left: 6.8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.17647058824 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.17647058824 (left: 1.17647058824 8) -> 1.17647058824 + 8 = 9.17647058824 (left: 9.17647058824)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14.8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "32"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to calculate."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> Possible next steps: No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "Possible next steps: No possible next steps as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 30 2) -> 30 + 2 = 32 (left: 32) -> There is only one number given, so there are no possible next steps to calculate. -> Possible next steps: No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 22"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 - 22 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 * 7 = 1155 (left: 1155)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 1.375 + 14 = 15.375 (left: 15.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 15.375 / 1.375 = 11.1818181818 (left: 11.1818181818)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "15.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "242"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "12.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12.625"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625) -> 12 * 0.625 = 7.5 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 22"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 * 1155 = 190575 (left: 190575)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "22 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 15.375 / 1.375 = 11.2 (left: 1.375 11.2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "165 1155"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 1155 - 165 = 990 (left: 990)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "242"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12.625"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625) -> There are no possible next steps for the number 12.625 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 22"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 / 1155 = 0.142857 (left: 0.142857)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "22 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 1.375 + 15.375 = 16.75 (left: 16.75)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "12.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "165 1155"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 + 1155 = 1320 (left: 1320)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14 - 8 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "242"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "14 -"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - -> 14 - 8 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 + 1155 = 1320 (left: 1320)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 11 14"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.27272727273 (left: 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 1.375 / 15.375 = 0.0894308943 (left: 0.0894308943)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "242"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "242"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> Input: 343",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "242"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "14 -"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - -> 14 - 8 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 1155 - 165 = 990 (left: 990)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "14 - 8 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 1.375 * 15.375 = 21.140625 (left: 15.375 21.140625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "165 1155"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 - 1155 = -990 (left: -990)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.5"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> 0.5 * 2 = 1.0",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 165"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 * 1155 = 190575 (left: 190575)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 11 49"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 1.375 + 15.375 = 16.75 (left: 16.75)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "242"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "165 1155"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 + 1155 = 1320",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 343"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> Input: 343 -> 34 / 3 = 11.33 (left: 11",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "Input: 343"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 22"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "165 1155"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 165 / 1155 = 0.14285714285714285 (left: 0.14285714285714285)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "242"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 1.375 * 14 = 19.25 (left: 19.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.375 15.375"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 + 1.375 = 15.375 (left: 1.375 15.375) -> 1.375 + 15.375 = 16.75 (left: 16.75)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "165 1155"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "165 1155"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 7 * 165 = 1155 (left: 165 1155) -> 1155 + 165 = 1320 (left: 1320)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 343"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 * 22 = 242 (left: 242) -> Input: 343 -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.375 11.2"
                }
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 7 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 11 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 3) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 10 + 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 1.5 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 - 4 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 3) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 1.5 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 11 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 3) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 9 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 14 140)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 3) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 2 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1.5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 3) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 14"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 * 4 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0 + 12 = 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12 / 0 = undefined"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0 + 12 = 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "-12"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 2 = 6 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 is undefined (left: 0 12) -> 12 / 0 is undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 is undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "0 12"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 / 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0 + 12 = 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 30 - 5 = 25 (left: 25 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with just the number 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10 56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the given input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.14 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with just the number 20."
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with just the number 20. -> 20 + 10 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "10 * 2 = 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 56"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 56 - 10 = 46 (left: 46)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.8"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 0.8."
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8. -> 0.8 + 0.8 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "25 25"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "10 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 27"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 * 2 = 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with just the number 20."
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with just the number 20. -> 20 / 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "10 * 2 = 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 / 2 = 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 14 13"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "13 is a prime number, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 * 2.30769230769 = 14.9999999998 (left: 14.9999999998)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "13 is a prime number, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "13 is a prime number, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "13 is a prime number, so there are no possible next steps."
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "12 182"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 182 / 12 = 15.166666666666666 (left: 15.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 * 2.30769230769 \u2248 14.9999999999 (left: 14.9999999999)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 13."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 / 13 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.5 15"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 + 2.30769230769 = 8.80769230769 (left: 2.30769230769 8.80769230769)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the number 13. -> There are no possible next steps with the number 13. -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "12 182"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.5 15"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 - 6.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 * 2.30769230769 = 14.999999999985 (left: 2.307",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps with the number 13."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the number 13. -> No possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "13 is a prime number, so there are no possible next steps."
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "12 182"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 * 182 = 2184 (left: 2184)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 + 2.30769230769 = 8.80769230769 (left: 2.30769230769 8.80769230769)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 14 13"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the number 13. -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps with the number 13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 * 2.30769230769 = 14.9999999999 (left: 14.999",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 13."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 14 13"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 182"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 / 2 = 6 (left: 6 182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 182 / 12 = 15.166666666666666 (left: 15.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6.5 2.30769230769"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 + 14 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 15) -> 15 / 6.5 = 2.30769230769 (left: 6.5 2.30769230769) -> 6.5 + 2.30769230769 = 8.80769230769 (left: 2.30769230769 8.80769230769)",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 7"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "10 60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 + 3) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No more possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 + 3) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 * 5 = 60 (left: 10 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "10 60"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 6 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 + 3) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "No more possible next steps, the input is already a single number."
                }
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 % 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "16 8 14"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 16 8 14) -> 16 / 8 = 2 (left: 2 14 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 3) * (6 - 4) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.5 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers together"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 128"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 16 * 8 = 128 (left: 8 128) -> 128 - 8 = 120 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 3) * (6 - 4) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "Possible next steps"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 128"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 16 * 8 = 128 (left: 8 128) -> 8 + 120 = 128 (left: 120)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "8 128"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.5 6"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There is only one possible next step: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There are no possible next steps with just one number. -> - Apply any other mathematical operation or function",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers together"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 16 8 14)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 128"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 16 * 8 = 128 (left: 8 128) -> 8 * 16 = 128 (left: 16)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "8 14 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input of 3."
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers together"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "7.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "16 8 14"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 16 8 14) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 12 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers together"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "16 8 14"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4) -> There are no possible next steps with only one number. -> - Multiply two numbers together -> 2 * 8 = 16 (left: 16 8 14) -> 14 / 8 = 1.75 (left: 16 ",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 - 8 = -2.99 (left: -2.99)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "10.67"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 5 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 2.99 * 8 = 23.92 (left: 23.92)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "Input: 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 + 8 = 13.01 (left: 13.01)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "2.67 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with the input of 13.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 / 2.99 = 2.68 (left: 2.68 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 + 8 = 13.01 (left: 13.01)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 3 - 10 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "2.6667 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "Input: 2 3 4 5"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 2 3 4 5 -> ",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "Input: 5 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "Input: 10 5"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Input: 5 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 * 8 = 40.08 (left: 40.08)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2.68 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Input: 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "10.67"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a decimal number and cannot be combined with the other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 2.99 + 8 = 10.99 (left: 10.99)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 + 8 = 13.01 (left: 13.01)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Input: 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "21.36"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.99 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 2.99 / 8 = 0.37375 (left: 0.37375)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "Input: 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5.01 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99 8) -> 8 - 2.99 = 5.01 (left: 5.01 8) -> 5.01 - 8 = -2.99 (left: -2.99)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "Input: 10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 10 5 -> 1 + 3 = 4 (left: 4 5) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 2 3 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.99"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> 2.99 * 2 = 5.98 (left: 2.99 5.98)",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 * 8 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 14 + 28 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "14 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "28 / 2 = 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 28 - 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "28 / 2 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "14 28"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "12 / 8 = "
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.3333 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 28 - 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "28 / 2 = 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "12 / 8 = "
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "12 / 8 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 28 - 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "12 / 8 = "
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 - 1.3333 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "28"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "16 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 28 - 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "28 / 2 = 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 96"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 1.3333 + 96 = 97.3333 (left: 97.3333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: ((6 * 8) / (12 - 8)) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 8 = 10.6664 (left: 10.6664 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> There is only one possible next step: 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 14 + 28 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "28 / 2 = 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.3333 + 8 = 9.3333 ("
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 8 - 1.3333 = 6.6667 (left: 6.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 12 - 8 = 4 (left: 1.3333 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 28"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14 28) -> 14 * 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "28 / 2 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (12 - 8) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "14 28"
                }
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps as there are not enough numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-4 1.8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left: -> 9 / 5 = 1.8 (left: -4 1.8) -> -4 / 1.8 = -2.22222 (left: -2.22222)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "72 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 * 9 = 72 (left: 72 11) -> 72 * 11 = 792 (left: 792)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.67"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "5 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-4 1.8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left: -> 9 / 5 = 1.8 (left: -4 1.8) -> -4 / 1.8 \u2248 -2.22222 (left: -2.22222)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 - 9 = -4 (left:"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left: -> 9 / 5 = 1.8 (left: -4 1.8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input \"11\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 * 9 = 72 (left: 72 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5) -> -5 - 2 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> Input: 5 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-4 1.8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left: -> 9 / 5 = 1.8 (left: -4 1.8) -> -4 - 1.8 = -5.8 (left: -5.8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-4 1.8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 5 - 9 = -4 (left: -> 9 / 5 = 1.8 (left: -4 1.8) -> -4 - 1.8 = -5.8 (left: -5.8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 27",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 11 - 6) * 2 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24"
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.8 12 12"
                }
            },
            "Step 4": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result. -> None",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "None, as the input is already a final result."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "33.6 * 2 = 67.2"
                }
            },
            "Step 7": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 33.6 + 2 = 35.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "33.6 - 2 = 31.6"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 + 2 = 35.6 -> 33.6 - 2 = 31.6 -> 2 * 33.6 = 67.2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> None",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "5 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 21.6"
                }
            },
            "Step 5": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "33.6"
                }
            },
            "Step 6": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> There are no possible next steps for the input 33.6 as it is already a single number and not a sequence of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 * 2 = 4"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 2 * 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "None, as the input is already a final result."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17 / 2 = 8.5"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> 17 * 2 = 34 (left: 34 / 2 = 17",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "33.6"
                }
            },
            "Step 6": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 + 2 = 35.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "33.6 * 2 = 67.2"
                }
            },
            "Step 7": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 2 * 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "33.6 - 2 = 31.6"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 33.6 - 2 = 31.6 -> 33.6 / 2 = 16.8",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 21.6"
                }
            },
            "Step 5": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 - 21.6 = -9.6 (left: -9.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result. -> None, as the input is already a final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "33.6 * 2 = 67.2"
                }
            },
            "Step 7": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 33.6 - 2 = 31.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 * 2 = 4"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 2 * 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17 / 2 = 8.5"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 21.6"
                }
            },
            "Step 5": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "33.6"
                }
            },
            "Step 6": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "33.6 + 2 = 35.6"
                }
            },
            "Step 7": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 + 2 = 35.6 -> 33.6 - 2 = 31.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "33.6 - 2 = 31.6"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 33.6 - 2 = 31.6 -> 33.6 / 2 = 16.8 (left: 16.8)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "None, as the input is already a final result."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number, so no possible next steps."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There is only one number, so no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, as the input is already a final result."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 2 = 8.5 -> None, as the input is already a final result. -> None, as the input is already a final result. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.4167"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "33.6 - 2 = 31.6"
                }
            },
            "Step 8": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 + 2 = 35.6 -> 33.6 - 2 = 31.6 -> 2 * 2 = 4",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 + 14 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-7"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> -7 * 8 = -56 (left: -56)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "17 / 2 = 8.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "-9.6"
                }
            },
            "Step 6": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 - 21.6 = -9.6 (left: -9.6) -> There are no possible next steps for the input -9.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "33.6 * 2 = 67.2"
                }
            },
            "Step 7": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 1.8 * 12 = 21.6 (left: 12 21.6) -> 12 + 21.6 = 33.6 (left: 33.6) -> 33.6 * 2 = 67.2 -> 33.6 * 2 = 67.2 (left: 67.2 *",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 * 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 * 2 = 66 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "154"
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 15 * 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "21 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted. -> N/A",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "33"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> There are no possible next steps with the input 33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 / 1.75 = 1.1428571428571428 (left: 1.1428571428571428 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "21 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 - 12 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "33"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 - 12 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 12 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "33"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 * 1 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 15"
                }
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 1 + 14 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "21 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number inputted, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 - 12 = 9 (left: 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 14 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.75"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 / 1.75 = 1.14285714286",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 + 5 = 6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14 14"
                }
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 * 1 = 14 (left: 14 14) -> 14 - 14 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "11 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number inputted, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.75"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 -> 33 * 2 = 66 (left: 66 35)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 15"
                }
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 1 + 14 = 15 (left: 14 15) -> 14 * 15 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There is only one number inputted, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 7": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted. -> N/A",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "154"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "1 + 0.75 = 1.75"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1 + 0.75 = 1.75 -> 1.75 / 0.75 = 2.3333",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "21 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 * 12 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14) -> 11 + 14 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number inputted."
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 / 1 = 14 (left: -> 14 / 14 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps. -> There are no possible next steps as there is only one number inputted. -> There are no possible next steps as there is only one number inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 14 12"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 * 14 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "14 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 * 14 = 14 (left: 14 14) -> 14 + 14 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "1 + 0.75 = 1.75"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "21 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 - 12 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 - 12 = 9 (left: 9) -> Input: 4 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 12 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.75"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1 + 0.75 = 1.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "1 + 0.75 = 1.75"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 / 12 = 1.75 (left: 1.75) -> 1 + 0.75 = 1.75 -> 1 - 0.75 = 0.25 (left: 0.25 1.75)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "-1 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- None"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> - None -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "Addition: 2 + 3 = 5"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Addition: 2 + 3 = 5 -> 3 + 5 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1.2 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1.2 6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Please provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Addition: 2 + 3 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "- Divide two numbers"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> - Divide two numbers -> - Multiply two numbers",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "30"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "-7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 * 3 = 15 (left: 15 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Please provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Division: 8 / 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> - None -> There are no possible next steps as there is no input provided. -> No input provided. Please enter numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There is no possible next step with only one number input. If you provide more numbers, I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.2 6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Please provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> - Divide two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> - None -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 + 6 = 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 6 + 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 * 6 = -6 (left: -6) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "Please provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Addition, subtraction, multiplication, or division can be performed on the provided numbers. Please provide the numbers to proceed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input of -7."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Please provide at least two numbers to perform arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> - None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- None"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with only one number. -> - None -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "- Divide two numbers"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 + 6 = 5 (left: 5) -> There are no possible next steps with just one number provided. You would need at least two numbers to perform any arithmetic operations. -> Please provide at least two numbers to perform arithmetic operations. -> - Divide two numbers -> - Subtract two numbers",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (8 - 5) * (5 + 13) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 8 13"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 - (13 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "8 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (8 - 5) * (5 + 13) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (8 - 5) * (5 + 13) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (8 - 5) * (5 + 13) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 - (13 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + (13 - 5)) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "Input: 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (5 - 8) = 24"
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 - 6 = -3 (left: -3 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 * 12 = 48"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 2 = 192 (left: 48 192)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 - 48 = 48 (left: 48 = 48) -> 48 / 2 = 24 (left: 24 = 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "48 * 96 = 4608"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 48 = 4608 (left: 48 4608) -> 48 * 96 = 4608 -> 48 + 96 = 144 (left: 144 = 4608)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 10"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10) -> 18 + 10 = 28 (left: 28) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 - 48 = 48 (left: 48 = 48)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 - 48 = 48 (left: 48 = 48) -> 48 / 48 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 - 2 = 46 (left: 46 = 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "48 + 48 = 96"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96 -> 48 * 48 = 2304 (left: 48 96 2304)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18 10"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10) -> 18 + 10 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10) -> 18 + 10 = 28 (left: 28) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 2 = 50 (left: 50 = 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 48 = 4608 (left: 48 4608)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 2 = 192 (left: 48 192) -> 192 * 1 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "96 = 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48 4608"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 48 = 4608 (left: 48 4608) -> 48 * 96 = 4608",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24 = 48"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 / 2 = 24 (left: 24 = 48) -> 24 + 48 = 72",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 48 = 2 (left: 2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 + 48 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "48 4608"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 - 48 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "48 + 48 = 96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 + 48 = 96"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96 -> 48 + 1 = 49 (left: 49 48 96)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "18 10"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 - 6 = -3 (left: -3 10) -> -3 + 10 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 2 = 192 (left: 48 192) -> 192 + 48 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "-3 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 + 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "46 = 48"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 - 2 = 46 (left: 46 = 48) -> 46 + 48 = 94",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 - 6 = -3 (left: -3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "-3 10"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 - 6 = -3 (left: -3 10) -> -3 + 10 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 / 48 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48 4608"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 48 = 4608 (left: 48 4608) -> 48 * 96 = 4608 (left: 96)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "48 + 48 = 96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "48 + 48 = 96"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96 -> 48 - 96 = -48 (left: -48)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "96 = 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 3 * 6 = 18 (left: 18 10) -> 18 + 10 = 28 (left: 28) -> None, as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "96 = 48"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 * 2 = 192 (left: 48 192) -> 192 / 4 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "48 = 48"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 = 48"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 * 2 = 96 (left: 96 = 48) -> 96 / 2 = 48 (left: 48 = 48) -> 48 / 2 = 24 (left: 24 = 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 + 48 = 96"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 / 3 = 3.33333333333 (left: 3 10) -> 4 * 12 = 48 -> 12 * 4 = 48 (left: 48 = 48) -> 48 + 48 = 96 -> 48 / 48 = 1 (left: 1 48 96)",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 + 2 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (6 + 2) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n3 + 5 = 8 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 10 / 2.5 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: ((3 * 4) * 2) * 6 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job! You were able to find different ways to get the number 24 using the given numbers and basic arithmetic operations. Keep up the good work!",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 8\nSteps:\n3 + 5 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 8 / 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n5 + 3 = 8 (left: 8 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 7) + (5 + 3)) - 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8 "
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 * 3) - 7) * 2 + 8 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All the different ways to get 24 using the numbers 4, 4, 6, 8 are: \n\n1. (6-4) * (4+8) = 24\n2. (12 * 2) * (10 - 9) = 24\n3. 4 * (9 - (13 - 10)) = 24\n4. (1 + 8 / 4) * 8 = 24\n5. ((",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n14 - 7 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 6 = 15 (left: 15)\n15 - 7 = 8 (left: 8)\n8 - ",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8 "
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 7 8 9\nSteps:\n6 * 7 = 42 (left: 8 9 42)\n9 - 8 = 1 (left: 1 42)\n1 * 42 = 42 (left: 42)\nAnswer: (6 * 7) - (9 - 8) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job with the calculations! You were able to obtain 24 using the given numbers and arithmetic operations. Keep up the good work!",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "3 1.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given solutions are correct!",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 1 3 5 7\nSteps:\n1 * 5 = 5 (left: 3 7 5)\n5 + 7 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (1 * 5) + (7 + 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 6\nSteps:\n6 * 3 = 18 (left: 2 6 18)\n18 - 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 * 3) - (6 - 2) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 24 = 24 (left: 24)\nAnswer: ((2 * 6) * 8) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given sequences have been used to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "3 1.5"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 * 3 = 30 (left: 30 10)\n30 - 10 = 20 (left: 20)\nAnswer: ((5 * 2) * 10) - 10 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (2 * 6) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 6) * (9 - 3)) * 2 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n3 * 6 = 18 (left: 2 5 18)\n18 - 5 = 13 (left: 2 13)\n13 * 2 = 26 (left: 26)\nAnswer: (3 * 6) - (5 * 2) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 7"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All the possible ways have been exhausted, but it seems that there is no way to obtain 24 using the numbers 3, 4, 8, and 12 with the given restrictions.",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 2 * 3 * 4 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 + 2 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (3 + 2) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 / 2 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) / (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 6 6 6 2\nSteps:\n6 * 2 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (6 * 2) + ((6 * 6) / 12) * 8 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 7"
                }
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 36"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 8 - 47 = -39 (left: -39)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 4 17"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 2 + 4 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input of -1."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1) -> There are no possible next steps with the input of -1. -> There are no possible next steps with the input of -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> There are no possible next steps with only one number. -> Addition: 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "Input: 3 5"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> Input: 3 5 -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32 -> 30 - 2 = 28 (left: 28 2 32)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 8 + 47 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.33"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66 (left: 2.66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 + 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "Please provide more numbers to continue the calculations."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations. -> 7 + 8 = 15 (left: 8 8 12 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 36"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 8 - 47 = -39 (left: -39)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "Please provide more numbers to continue the calculations."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations. -> - Add another number to the list and continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 9"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "47"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 8 + 47 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 17"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There is only one number, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> There are no possible next steps for the input 14 as it is the final number in the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No possible next steps, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, as there is only one number left. -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 9 = 45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "30"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32 -> 30 * 2 = 60 (left: 60 32)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "60 32"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32 -> 30 * 2 = 60 (left: 60 32) -> 60 - 32 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1.3333333333333333"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 * 2 = 2.6666666666666665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 14 as it is the final number in the sequence."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> There are no possible next steps for the input 14 as it is the final number in the sequence. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 36"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with the input 30."
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "-1"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No possible next steps, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, as there is only one number left. -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "30"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> Input: 3 5 -> 3 * 5 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 47"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 8 = 55 (left: 8 47) -> 8 / 47 \u2248 0.17 (left: 0.17)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "11 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.3333333333333333 * 2 = 2.6666666666666665"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 14 as it is the final number in the sequence."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> There are no possible next steps for the input 14 as it is the final number in the sequence. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 8 9"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 1 * 8 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 / 72 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 1.125"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 + 1.125 = 17.125 (left: 17.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "64 72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 72 - 16 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 / 72 = 0.888888888889 (left: 0.888888888889)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 8 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 1.125"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 / 1.125 = 14.2222",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 72 / 64 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "64 72"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 1.125"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 + 1.125 = 17.125 (left: 17.125)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> None",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "None, as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 72 - 16 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 * 72 = 4608 (left: 4608)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "16 1.125"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 1.125"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> None",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> N/A",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 / 4 = 4 (left: 4 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 + 72 = 136 (left: 136)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 10 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "64 72"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 72 / 64 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 8 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the number 18 as it is already the final result."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 72 / 16 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 / 72 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "16 72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "64 72"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 - 72 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 72 / 16 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 * 4 = 64 (left: 64 72) -> 64 / 72 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 1.125"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 + 1.125 = 17.125 (left: 17.125)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> None",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "None, as there is only one number left."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "64 72"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "There are no possible next steps for the number 18 as it is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 9 / 8 = 1.125 (left: 16 1.125) -> 16 * 1.125 = 18 (left: 18) -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> There are no possible next steps for the number 18 as it is already the final result. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 1.4"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 5 = 1.4 (left: 1 1.4) -> 1 + 1.4 = 2.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "7 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.142857142857143 (left: 5.142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 8 - 2 = 6 (left: 6 8) -> 14 - 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "7 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 5 = 1.4 (left: 1 1.4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 1"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "7 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 1.4"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 5 = 1.4 (left: 1 1.4) -> 1 * 1.4 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1.4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 1"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "7 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 - 1 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 5 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 * 440 = 4400 (left: 4400)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 125"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 125 - 5 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10 450"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 450"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 + 10 = 450 (left: 10 450) -> 10 + 450 = 460 (left: 460)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 * 430 = 4300"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 5 30"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 30 / 5 = 6 (left: 6 5 30) -> 5 * 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "5 25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 - 44 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 430"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6 5 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 + 10 = 450 (left: 10 450)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 4300)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 125"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5 25)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 5 30"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 30 / 5 = 6 (left: 6 5 30) -> 30 - 5 = 25 (left: 5 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 / 440 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "430"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "25 + 5 = 30 (left"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 440"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 + 10 = 450 (left: 10 450)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "44 440"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 / 44 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10 440"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "430 4300"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 430 4300) -> 430 + 4300 = 4730 (left: 4730)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 440"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 / 44 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "44 440"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "430 4300"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 430 4300)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 125"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 125 - 5 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 25"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5 25) -> 5 - 25 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "10 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 * 10 = 440 (left: 440)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "430 4300"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 125"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 430)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 430 / 10 = 43 (left: 43)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "10 48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 440"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 30 / 5 = 6 (left: 6 5 30)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "430 4300"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 430 4300) -> 20 - 5 = 15 (left: 15",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 * 440 = 19360 (left: 19360)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "10 * 430 = 4300"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Input: 3 6"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 + 10 = 450 (left: 10 450)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 4300)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 440"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 440"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 3 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "430 4300"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 430 4300) -> 4300 / 430 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "44 440"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 + 440 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 30 - 5 = 25 (left: 25 5 25)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 430"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 430 - 10 = 420 (left: 420)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 125"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 125 - 5 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "430 4300"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "430 4300"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 10 * 430 = 4300 (left: 430 4300) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 - 44 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "25 + 5 = 30 (left"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "25 + 5 = 30 (left"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 - 10 = 430 (left: 10 430) -> 100 + 25 = 125 (left: 5 125) -> 25 + 5 = 30 (left -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "5 25"
                }
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5833"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833) -> Not enough numbers provided to perform any calculations. Please provide more numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 6.75 * 21.33333333336 = 144.0416666666 (left: 144.0416666666)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 156"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.75 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667) -> 6.75 / 3.166666666",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 1 + 7 + 2 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.5 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8) -> 8.5 + 8 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.77777777778 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.77777777778 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 + 12 = 13.77777777778 (left: 13.77777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "9 12"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.75 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667) -> 6.75 / 3.166666666",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 24"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 / 4 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 1 + 7 + 2 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.5 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8) -> 8.5 - 8 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.77777777778 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 + 12 = 13.77777777778 (left: 13.77777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 / 1.77777777778 = 6.75 (left"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 6.75 * 21.33333333336 \u2248 144.124999999996 (left: 144.124999999996)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1728"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.75 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667) -> 6.75 * 3.166666666",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 - 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.5 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8) -> 8.5 * 8 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "12 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.77777777778 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13.77777777778"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 + 12 = 13.77777777778 (left: 13.77777777778) -> 13.77777777778 + 2 = 15.77777777778",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 6.75 * 21.33333333336 = 144.08333333336 (left: 144.08333333336)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.75 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667) -> 6.75 - 3.16666666667 = 3.58333333333 (left: 3.58333333333)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "21.33333333336 - 6.75 = 14.583"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 172 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.5 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8) -> 8.5 + 8 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 / 1.77777777778 = 6.75 (left"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 + 1.77777777778 = 13.77777777778 (left: 13.77777777778)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 - 6.75 = 14.583",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3.1604938276 21.33333333336"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.1604938276 (left: 3.1604938276 21.33333333336) -> 3.1604938276 + 21.33333333336 = 24.49382716096 (left: 24.49382716096)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Not enough numbers provided to perform any calculations. Please provide more numbers."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 172 / 8 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.5 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 17 / 2 = 8.5 (left: 8.5 8) -> 8.5 + 8 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13.77777777778"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 + 12 = 13.77777777778 (left: 13.77777777778) -> 13.77777777778 + 2 = 15.77777777778",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 6.75 + 21.33333333336 = 28.08333333336 (left: 28.08333333336)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.75 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.16666666667 (left: 6.75 3.16666666667) -> 6.75 / 3.16666666667 = 2.13043478261 (left: 2.13043478261)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Not enough numbers provided to perform any calculations. Please provide more numbers."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "144 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 + 12 = 156 (left: 12 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1728"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 * 12 = 1728 (left: 1728) -> 1 + 7 + 2 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "32 12"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 + 12 = 21 (left: 16 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "9 12"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6.75 21.33333333336"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.1604938276 (left: 3.1604938276 21.33333333336)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "3.1604938276 21.33333333336"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 12 / 1.77777777778 = 6.75 (left -> 12 * 1.77777777778 = 21.33333333336 (left: 6.75 21.33333333336) -> 21.33333333336 / 6.75 = 3.1604938276 (left: 3.1604938276 21.33333333336) -> 3.1604938276 * 21.33333333336 = 67.41358024692 (left: 21.33333333336 67.41358024692)",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 + 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "396"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 / 14 = 0.571428571 (left: 0.571428571)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 11 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "60"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 - 6 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 + 11 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> Input: 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "396"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396) -> 3 + 9 + 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "66 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 - 6 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 - 6 = 60 (left: 60) -> 60 * 2 = 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "66 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "60 * 2 = 120"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 / 4 = 1"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 + 11 = 17 (left: 6 17 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 11 6"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "396"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "396"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396) -> 396 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 6 = 36 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "66 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 6 5 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "396"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66 6) -> 66 * 6 = 396 (left: 396) -> 396 - 2 = 394 (left: 394)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (12 / 3) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 - 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) + (12 / 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (27 / 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) + (3 * 12) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 * 2) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 - 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 * 12) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 5 = 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 - 2 = 8 (left: 8 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 5 = 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: ((9 - 4) * (9 / 3)) - 3 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24) -> Answer: (9 - 4) * (2 + 12) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 / 4) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 - 4 = "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 =  -> 13 - 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Input: 4 10"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Input: 4 10 -> 27 / ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 11 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 / 4) + ((11 - 2) + 13) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "13 - 4 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 - 4 = "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 =  -> 13 - 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Input: 4 10"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Input: 4 10 -> 10 - 4 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "11 25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 2 * (8 / 4) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Input: 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((8 / 4) - 2) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "13 - 4 = 9"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 =  -> 13 - 4 = 9 -> 9 + 4 = 13 (left: 13 = 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 11 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 / 4) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "13 132"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13 - 4 = 9"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 =  -> 13 - 4 = 9 -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 / 4) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13 - 4 = 9"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 =  -> 13 - 4 = 9 -> 13 - 4 = 9 (left: 9 = 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "13 132"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (8 / 4) + (11 + 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "13 132"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) * (13 - 9) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 4) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) * (13 - 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) * (13 - 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 4) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 4) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) * (13 - 9) = 24"
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "Cost": {
        "input_tokens": 1755573,
        "output_tokens": 613510.9763625257,
        "total_cost": 1.7980529645437886
    }
}